//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FirebirdTest1 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LoggingAndConfig")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LoggingAndConfig : global::System.Data.DataSet {
        
        private APPOINTMENTLOGDataTable tableAPPOINTMENTLOG;
        
        private ARCHIVELOGDataTable tableARCHIVELOG;
        
        private ARCHIVESTUDYLOGDataTable tableARCHIVESTUDYLOG;
        
        private AUTOQUERYRETRIEVELOGDataTable tableAUTOQUERYRETRIEVELOG;
        
        private COMMUNICATIONLOGDataTable tableCOMMUNICATIONLOG;
        
        private CONFIGDataTable tableCONFIG;
        
        private CONFIGDISPLAYDataTable tableCONFIGDISPLAY;
        
        private HEALTHVAULTSUMMARYEXPORTLOGDataTable tableHEALTHVAULTSUMMARYEXPORTLOG;
        
        private MDINTOUCHLOGDataTable tableMDINTOUCHLOG;
        
        private MIRTH_HL7_LOGDataTable tableMIRTH_HL7_LOG;
        
        private MPPSTRANSMITLOGDataTable tableMPPSTRANSMITLOG;
        
        private NETSUITEERRORLOGDataTable tableNETSUITEERRORLOG;
        
        private NETSUITELOGDataTable tableNETSUITELOG;
        
        private PATIENTDIRECTLOGDataTable tablePATIENTDIRECTLOG;
        
        private PATIENTMERGELOGDataTable tablePATIENTMERGELOG;
        
        private PRINTLOGDataTable tablePRINTLOG;
        
        private PRRELEASEDataTable tablePRRELEASE;
        
        private PRVERSIONDataTable tablePRVERSION;
        
        private RECEIVESTUDYLOGDataTable tableRECEIVESTUDYLOG;
        
        private REFERRALINBOXLOGDataTable tableREFERRALINBOXLOG;
        
        private REQUESTFAILLOGDataTable tableREQUESTFAILLOG;
        
        private REQUESTLOGDataTable tableREQUESTLOG;
        
        private RETRIEVESTUDYLOGDataTable tableRETRIEVESTUDYLOG;
        
        private RPTEXPORTLOGDataTable tableRPTEXPORTLOG;
        
        private STORAGECOMMITLOGDataTable tableSTORAGECOMMITLOG;
        
        private STUDYACCESSDataTable tableSTUDYACCESS;
        
        private SYSTEMLOGDataTable tableSYSTEMLOG;
        
        private TRANSMITLOGDataTable tableTRANSMITLOG;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LoggingAndConfig() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected LoggingAndConfig(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["APPOINTMENTLOG"] != null)) {
                    base.Tables.Add(new APPOINTMENTLOGDataTable(ds.Tables["APPOINTMENTLOG"]));
                }
                if ((ds.Tables["ARCHIVELOG"] != null)) {
                    base.Tables.Add(new ARCHIVELOGDataTable(ds.Tables["ARCHIVELOG"]));
                }
                if ((ds.Tables["ARCHIVESTUDYLOG"] != null)) {
                    base.Tables.Add(new ARCHIVESTUDYLOGDataTable(ds.Tables["ARCHIVESTUDYLOG"]));
                }
                if ((ds.Tables["AUTOQUERYRETRIEVELOG"] != null)) {
                    base.Tables.Add(new AUTOQUERYRETRIEVELOGDataTable(ds.Tables["AUTOQUERYRETRIEVELOG"]));
                }
                if ((ds.Tables["COMMUNICATIONLOG"] != null)) {
                    base.Tables.Add(new COMMUNICATIONLOGDataTable(ds.Tables["COMMUNICATIONLOG"]));
                }
                if ((ds.Tables["CONFIG"] != null)) {
                    base.Tables.Add(new CONFIGDataTable(ds.Tables["CONFIG"]));
                }
                if ((ds.Tables["CONFIGDISPLAY"] != null)) {
                    base.Tables.Add(new CONFIGDISPLAYDataTable(ds.Tables["CONFIGDISPLAY"]));
                }
                if ((ds.Tables["HEALTHVAULTSUMMARYEXPORTLOG"] != null)) {
                    base.Tables.Add(new HEALTHVAULTSUMMARYEXPORTLOGDataTable(ds.Tables["HEALTHVAULTSUMMARYEXPORTLOG"]));
                }
                if ((ds.Tables["MDINTOUCHLOG"] != null)) {
                    base.Tables.Add(new MDINTOUCHLOGDataTable(ds.Tables["MDINTOUCHLOG"]));
                }
                if ((ds.Tables["MIRTH_HL7_LOG"] != null)) {
                    base.Tables.Add(new MIRTH_HL7_LOGDataTable(ds.Tables["MIRTH_HL7_LOG"]));
                }
                if ((ds.Tables["MPPSTRANSMITLOG"] != null)) {
                    base.Tables.Add(new MPPSTRANSMITLOGDataTable(ds.Tables["MPPSTRANSMITLOG"]));
                }
                if ((ds.Tables["NETSUITEERRORLOG"] != null)) {
                    base.Tables.Add(new NETSUITEERRORLOGDataTable(ds.Tables["NETSUITEERRORLOG"]));
                }
                if ((ds.Tables["NETSUITELOG"] != null)) {
                    base.Tables.Add(new NETSUITELOGDataTable(ds.Tables["NETSUITELOG"]));
                }
                if ((ds.Tables["PATIENTDIRECTLOG"] != null)) {
                    base.Tables.Add(new PATIENTDIRECTLOGDataTable(ds.Tables["PATIENTDIRECTLOG"]));
                }
                if ((ds.Tables["PATIENTMERGELOG"] != null)) {
                    base.Tables.Add(new PATIENTMERGELOGDataTable(ds.Tables["PATIENTMERGELOG"]));
                }
                if ((ds.Tables["PRINTLOG"] != null)) {
                    base.Tables.Add(new PRINTLOGDataTable(ds.Tables["PRINTLOG"]));
                }
                if ((ds.Tables["PRRELEASE"] != null)) {
                    base.Tables.Add(new PRRELEASEDataTable(ds.Tables["PRRELEASE"]));
                }
                if ((ds.Tables["PRVERSION"] != null)) {
                    base.Tables.Add(new PRVERSIONDataTable(ds.Tables["PRVERSION"]));
                }
                if ((ds.Tables["RECEIVESTUDYLOG"] != null)) {
                    base.Tables.Add(new RECEIVESTUDYLOGDataTable(ds.Tables["RECEIVESTUDYLOG"]));
                }
                if ((ds.Tables["REFERRALINBOXLOG"] != null)) {
                    base.Tables.Add(new REFERRALINBOXLOGDataTable(ds.Tables["REFERRALINBOXLOG"]));
                }
                if ((ds.Tables["REQUESTFAILLOG"] != null)) {
                    base.Tables.Add(new REQUESTFAILLOGDataTable(ds.Tables["REQUESTFAILLOG"]));
                }
                if ((ds.Tables["REQUESTLOG"] != null)) {
                    base.Tables.Add(new REQUESTLOGDataTable(ds.Tables["REQUESTLOG"]));
                }
                if ((ds.Tables["RETRIEVESTUDYLOG"] != null)) {
                    base.Tables.Add(new RETRIEVESTUDYLOGDataTable(ds.Tables["RETRIEVESTUDYLOG"]));
                }
                if ((ds.Tables["RPTEXPORTLOG"] != null)) {
                    base.Tables.Add(new RPTEXPORTLOGDataTable(ds.Tables["RPTEXPORTLOG"]));
                }
                if ((ds.Tables["STORAGECOMMITLOG"] != null)) {
                    base.Tables.Add(new STORAGECOMMITLOGDataTable(ds.Tables["STORAGECOMMITLOG"]));
                }
                if ((ds.Tables["STUDYACCESS"] != null)) {
                    base.Tables.Add(new STUDYACCESSDataTable(ds.Tables["STUDYACCESS"]));
                }
                if ((ds.Tables["SYSTEMLOG"] != null)) {
                    base.Tables.Add(new SYSTEMLOGDataTable(ds.Tables["SYSTEMLOG"]));
                }
                if ((ds.Tables["TRANSMITLOG"] != null)) {
                    base.Tables.Add(new TRANSMITLOGDataTable(ds.Tables["TRANSMITLOG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public APPOINTMENTLOGDataTable APPOINTMENTLOG {
            get {
                return this.tableAPPOINTMENTLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ARCHIVELOGDataTable ARCHIVELOG {
            get {
                return this.tableARCHIVELOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ARCHIVESTUDYLOGDataTable ARCHIVESTUDYLOG {
            get {
                return this.tableARCHIVESTUDYLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AUTOQUERYRETRIEVELOGDataTable AUTOQUERYRETRIEVELOG {
            get {
                return this.tableAUTOQUERYRETRIEVELOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public COMMUNICATIONLOGDataTable COMMUNICATIONLOG {
            get {
                return this.tableCOMMUNICATIONLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CONFIGDataTable CONFIG {
            get {
                return this.tableCONFIG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CONFIGDISPLAYDataTable CONFIGDISPLAY {
            get {
                return this.tableCONFIGDISPLAY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HEALTHVAULTSUMMARYEXPORTLOGDataTable HEALTHVAULTSUMMARYEXPORTLOG {
            get {
                return this.tableHEALTHVAULTSUMMARYEXPORTLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MDINTOUCHLOGDataTable MDINTOUCHLOG {
            get {
                return this.tableMDINTOUCHLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MIRTH_HL7_LOGDataTable MIRTH_HL7_LOG {
            get {
                return this.tableMIRTH_HL7_LOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MPPSTRANSMITLOGDataTable MPPSTRANSMITLOG {
            get {
                return this.tableMPPSTRANSMITLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NETSUITEERRORLOGDataTable NETSUITEERRORLOG {
            get {
                return this.tableNETSUITEERRORLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NETSUITELOGDataTable NETSUITELOG {
            get {
                return this.tableNETSUITELOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PATIENTDIRECTLOGDataTable PATIENTDIRECTLOG {
            get {
                return this.tablePATIENTDIRECTLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PATIENTMERGELOGDataTable PATIENTMERGELOG {
            get {
                return this.tablePATIENTMERGELOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PRINTLOGDataTable PRINTLOG {
            get {
                return this.tablePRINTLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PRRELEASEDataTable PRRELEASE {
            get {
                return this.tablePRRELEASE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PRVERSIONDataTable PRVERSION {
            get {
                return this.tablePRVERSION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RECEIVESTUDYLOGDataTable RECEIVESTUDYLOG {
            get {
                return this.tableRECEIVESTUDYLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public REFERRALINBOXLOGDataTable REFERRALINBOXLOG {
            get {
                return this.tableREFERRALINBOXLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public REQUESTFAILLOGDataTable REQUESTFAILLOG {
            get {
                return this.tableREQUESTFAILLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public REQUESTLOGDataTable REQUESTLOG {
            get {
                return this.tableREQUESTLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RETRIEVESTUDYLOGDataTable RETRIEVESTUDYLOG {
            get {
                return this.tableRETRIEVESTUDYLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RPTEXPORTLOGDataTable RPTEXPORTLOG {
            get {
                return this.tableRPTEXPORTLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public STORAGECOMMITLOGDataTable STORAGECOMMITLOG {
            get {
                return this.tableSTORAGECOMMITLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public STUDYACCESSDataTable STUDYACCESS {
            get {
                return this.tableSTUDYACCESS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SYSTEMLOGDataTable SYSTEMLOG {
            get {
                return this.tableSYSTEMLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRANSMITLOGDataTable TRANSMITLOG {
            get {
                return this.tableTRANSMITLOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            LoggingAndConfig cln = ((LoggingAndConfig)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["APPOINTMENTLOG"] != null)) {
                    base.Tables.Add(new APPOINTMENTLOGDataTable(ds.Tables["APPOINTMENTLOG"]));
                }
                if ((ds.Tables["ARCHIVELOG"] != null)) {
                    base.Tables.Add(new ARCHIVELOGDataTable(ds.Tables["ARCHIVELOG"]));
                }
                if ((ds.Tables["ARCHIVESTUDYLOG"] != null)) {
                    base.Tables.Add(new ARCHIVESTUDYLOGDataTable(ds.Tables["ARCHIVESTUDYLOG"]));
                }
                if ((ds.Tables["AUTOQUERYRETRIEVELOG"] != null)) {
                    base.Tables.Add(new AUTOQUERYRETRIEVELOGDataTable(ds.Tables["AUTOQUERYRETRIEVELOG"]));
                }
                if ((ds.Tables["COMMUNICATIONLOG"] != null)) {
                    base.Tables.Add(new COMMUNICATIONLOGDataTable(ds.Tables["COMMUNICATIONLOG"]));
                }
                if ((ds.Tables["CONFIG"] != null)) {
                    base.Tables.Add(new CONFIGDataTable(ds.Tables["CONFIG"]));
                }
                if ((ds.Tables["CONFIGDISPLAY"] != null)) {
                    base.Tables.Add(new CONFIGDISPLAYDataTable(ds.Tables["CONFIGDISPLAY"]));
                }
                if ((ds.Tables["HEALTHVAULTSUMMARYEXPORTLOG"] != null)) {
                    base.Tables.Add(new HEALTHVAULTSUMMARYEXPORTLOGDataTable(ds.Tables["HEALTHVAULTSUMMARYEXPORTLOG"]));
                }
                if ((ds.Tables["MDINTOUCHLOG"] != null)) {
                    base.Tables.Add(new MDINTOUCHLOGDataTable(ds.Tables["MDINTOUCHLOG"]));
                }
                if ((ds.Tables["MIRTH_HL7_LOG"] != null)) {
                    base.Tables.Add(new MIRTH_HL7_LOGDataTable(ds.Tables["MIRTH_HL7_LOG"]));
                }
                if ((ds.Tables["MPPSTRANSMITLOG"] != null)) {
                    base.Tables.Add(new MPPSTRANSMITLOGDataTable(ds.Tables["MPPSTRANSMITLOG"]));
                }
                if ((ds.Tables["NETSUITEERRORLOG"] != null)) {
                    base.Tables.Add(new NETSUITEERRORLOGDataTable(ds.Tables["NETSUITEERRORLOG"]));
                }
                if ((ds.Tables["NETSUITELOG"] != null)) {
                    base.Tables.Add(new NETSUITELOGDataTable(ds.Tables["NETSUITELOG"]));
                }
                if ((ds.Tables["PATIENTDIRECTLOG"] != null)) {
                    base.Tables.Add(new PATIENTDIRECTLOGDataTable(ds.Tables["PATIENTDIRECTLOG"]));
                }
                if ((ds.Tables["PATIENTMERGELOG"] != null)) {
                    base.Tables.Add(new PATIENTMERGELOGDataTable(ds.Tables["PATIENTMERGELOG"]));
                }
                if ((ds.Tables["PRINTLOG"] != null)) {
                    base.Tables.Add(new PRINTLOGDataTable(ds.Tables["PRINTLOG"]));
                }
                if ((ds.Tables["PRRELEASE"] != null)) {
                    base.Tables.Add(new PRRELEASEDataTable(ds.Tables["PRRELEASE"]));
                }
                if ((ds.Tables["PRVERSION"] != null)) {
                    base.Tables.Add(new PRVERSIONDataTable(ds.Tables["PRVERSION"]));
                }
                if ((ds.Tables["RECEIVESTUDYLOG"] != null)) {
                    base.Tables.Add(new RECEIVESTUDYLOGDataTable(ds.Tables["RECEIVESTUDYLOG"]));
                }
                if ((ds.Tables["REFERRALINBOXLOG"] != null)) {
                    base.Tables.Add(new REFERRALINBOXLOGDataTable(ds.Tables["REFERRALINBOXLOG"]));
                }
                if ((ds.Tables["REQUESTFAILLOG"] != null)) {
                    base.Tables.Add(new REQUESTFAILLOGDataTable(ds.Tables["REQUESTFAILLOG"]));
                }
                if ((ds.Tables["REQUESTLOG"] != null)) {
                    base.Tables.Add(new REQUESTLOGDataTable(ds.Tables["REQUESTLOG"]));
                }
                if ((ds.Tables["RETRIEVESTUDYLOG"] != null)) {
                    base.Tables.Add(new RETRIEVESTUDYLOGDataTable(ds.Tables["RETRIEVESTUDYLOG"]));
                }
                if ((ds.Tables["RPTEXPORTLOG"] != null)) {
                    base.Tables.Add(new RPTEXPORTLOGDataTable(ds.Tables["RPTEXPORTLOG"]));
                }
                if ((ds.Tables["STORAGECOMMITLOG"] != null)) {
                    base.Tables.Add(new STORAGECOMMITLOGDataTable(ds.Tables["STORAGECOMMITLOG"]));
                }
                if ((ds.Tables["STUDYACCESS"] != null)) {
                    base.Tables.Add(new STUDYACCESSDataTable(ds.Tables["STUDYACCESS"]));
                }
                if ((ds.Tables["SYSTEMLOG"] != null)) {
                    base.Tables.Add(new SYSTEMLOGDataTable(ds.Tables["SYSTEMLOG"]));
                }
                if ((ds.Tables["TRANSMITLOG"] != null)) {
                    base.Tables.Add(new TRANSMITLOGDataTable(ds.Tables["TRANSMITLOG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableAPPOINTMENTLOG = ((APPOINTMENTLOGDataTable)(base.Tables["APPOINTMENTLOG"]));
            if ((initTable == true)) {
                if ((this.tableAPPOINTMENTLOG != null)) {
                    this.tableAPPOINTMENTLOG.InitVars();
                }
            }
            this.tableARCHIVELOG = ((ARCHIVELOGDataTable)(base.Tables["ARCHIVELOG"]));
            if ((initTable == true)) {
                if ((this.tableARCHIVELOG != null)) {
                    this.tableARCHIVELOG.InitVars();
                }
            }
            this.tableARCHIVESTUDYLOG = ((ARCHIVESTUDYLOGDataTable)(base.Tables["ARCHIVESTUDYLOG"]));
            if ((initTable == true)) {
                if ((this.tableARCHIVESTUDYLOG != null)) {
                    this.tableARCHIVESTUDYLOG.InitVars();
                }
            }
            this.tableAUTOQUERYRETRIEVELOG = ((AUTOQUERYRETRIEVELOGDataTable)(base.Tables["AUTOQUERYRETRIEVELOG"]));
            if ((initTable == true)) {
                if ((this.tableAUTOQUERYRETRIEVELOG != null)) {
                    this.tableAUTOQUERYRETRIEVELOG.InitVars();
                }
            }
            this.tableCOMMUNICATIONLOG = ((COMMUNICATIONLOGDataTable)(base.Tables["COMMUNICATIONLOG"]));
            if ((initTable == true)) {
                if ((this.tableCOMMUNICATIONLOG != null)) {
                    this.tableCOMMUNICATIONLOG.InitVars();
                }
            }
            this.tableCONFIG = ((CONFIGDataTable)(base.Tables["CONFIG"]));
            if ((initTable == true)) {
                if ((this.tableCONFIG != null)) {
                    this.tableCONFIG.InitVars();
                }
            }
            this.tableCONFIGDISPLAY = ((CONFIGDISPLAYDataTable)(base.Tables["CONFIGDISPLAY"]));
            if ((initTable == true)) {
                if ((this.tableCONFIGDISPLAY != null)) {
                    this.tableCONFIGDISPLAY.InitVars();
                }
            }
            this.tableHEALTHVAULTSUMMARYEXPORTLOG = ((HEALTHVAULTSUMMARYEXPORTLOGDataTable)(base.Tables["HEALTHVAULTSUMMARYEXPORTLOG"]));
            if ((initTable == true)) {
                if ((this.tableHEALTHVAULTSUMMARYEXPORTLOG != null)) {
                    this.tableHEALTHVAULTSUMMARYEXPORTLOG.InitVars();
                }
            }
            this.tableMDINTOUCHLOG = ((MDINTOUCHLOGDataTable)(base.Tables["MDINTOUCHLOG"]));
            if ((initTable == true)) {
                if ((this.tableMDINTOUCHLOG != null)) {
                    this.tableMDINTOUCHLOG.InitVars();
                }
            }
            this.tableMIRTH_HL7_LOG = ((MIRTH_HL7_LOGDataTable)(base.Tables["MIRTH_HL7_LOG"]));
            if ((initTable == true)) {
                if ((this.tableMIRTH_HL7_LOG != null)) {
                    this.tableMIRTH_HL7_LOG.InitVars();
                }
            }
            this.tableMPPSTRANSMITLOG = ((MPPSTRANSMITLOGDataTable)(base.Tables["MPPSTRANSMITLOG"]));
            if ((initTable == true)) {
                if ((this.tableMPPSTRANSMITLOG != null)) {
                    this.tableMPPSTRANSMITLOG.InitVars();
                }
            }
            this.tableNETSUITEERRORLOG = ((NETSUITEERRORLOGDataTable)(base.Tables["NETSUITEERRORLOG"]));
            if ((initTable == true)) {
                if ((this.tableNETSUITEERRORLOG != null)) {
                    this.tableNETSUITEERRORLOG.InitVars();
                }
            }
            this.tableNETSUITELOG = ((NETSUITELOGDataTable)(base.Tables["NETSUITELOG"]));
            if ((initTable == true)) {
                if ((this.tableNETSUITELOG != null)) {
                    this.tableNETSUITELOG.InitVars();
                }
            }
            this.tablePATIENTDIRECTLOG = ((PATIENTDIRECTLOGDataTable)(base.Tables["PATIENTDIRECTLOG"]));
            if ((initTable == true)) {
                if ((this.tablePATIENTDIRECTLOG != null)) {
                    this.tablePATIENTDIRECTLOG.InitVars();
                }
            }
            this.tablePATIENTMERGELOG = ((PATIENTMERGELOGDataTable)(base.Tables["PATIENTMERGELOG"]));
            if ((initTable == true)) {
                if ((this.tablePATIENTMERGELOG != null)) {
                    this.tablePATIENTMERGELOG.InitVars();
                }
            }
            this.tablePRINTLOG = ((PRINTLOGDataTable)(base.Tables["PRINTLOG"]));
            if ((initTable == true)) {
                if ((this.tablePRINTLOG != null)) {
                    this.tablePRINTLOG.InitVars();
                }
            }
            this.tablePRRELEASE = ((PRRELEASEDataTable)(base.Tables["PRRELEASE"]));
            if ((initTable == true)) {
                if ((this.tablePRRELEASE != null)) {
                    this.tablePRRELEASE.InitVars();
                }
            }
            this.tablePRVERSION = ((PRVERSIONDataTable)(base.Tables["PRVERSION"]));
            if ((initTable == true)) {
                if ((this.tablePRVERSION != null)) {
                    this.tablePRVERSION.InitVars();
                }
            }
            this.tableRECEIVESTUDYLOG = ((RECEIVESTUDYLOGDataTable)(base.Tables["RECEIVESTUDYLOG"]));
            if ((initTable == true)) {
                if ((this.tableRECEIVESTUDYLOG != null)) {
                    this.tableRECEIVESTUDYLOG.InitVars();
                }
            }
            this.tableREFERRALINBOXLOG = ((REFERRALINBOXLOGDataTable)(base.Tables["REFERRALINBOXLOG"]));
            if ((initTable == true)) {
                if ((this.tableREFERRALINBOXLOG != null)) {
                    this.tableREFERRALINBOXLOG.InitVars();
                }
            }
            this.tableREQUESTFAILLOG = ((REQUESTFAILLOGDataTable)(base.Tables["REQUESTFAILLOG"]));
            if ((initTable == true)) {
                if ((this.tableREQUESTFAILLOG != null)) {
                    this.tableREQUESTFAILLOG.InitVars();
                }
            }
            this.tableREQUESTLOG = ((REQUESTLOGDataTable)(base.Tables["REQUESTLOG"]));
            if ((initTable == true)) {
                if ((this.tableREQUESTLOG != null)) {
                    this.tableREQUESTLOG.InitVars();
                }
            }
            this.tableRETRIEVESTUDYLOG = ((RETRIEVESTUDYLOGDataTable)(base.Tables["RETRIEVESTUDYLOG"]));
            if ((initTable == true)) {
                if ((this.tableRETRIEVESTUDYLOG != null)) {
                    this.tableRETRIEVESTUDYLOG.InitVars();
                }
            }
            this.tableRPTEXPORTLOG = ((RPTEXPORTLOGDataTable)(base.Tables["RPTEXPORTLOG"]));
            if ((initTable == true)) {
                if ((this.tableRPTEXPORTLOG != null)) {
                    this.tableRPTEXPORTLOG.InitVars();
                }
            }
            this.tableSTORAGECOMMITLOG = ((STORAGECOMMITLOGDataTable)(base.Tables["STORAGECOMMITLOG"]));
            if ((initTable == true)) {
                if ((this.tableSTORAGECOMMITLOG != null)) {
                    this.tableSTORAGECOMMITLOG.InitVars();
                }
            }
            this.tableSTUDYACCESS = ((STUDYACCESSDataTable)(base.Tables["STUDYACCESS"]));
            if ((initTable == true)) {
                if ((this.tableSTUDYACCESS != null)) {
                    this.tableSTUDYACCESS.InitVars();
                }
            }
            this.tableSYSTEMLOG = ((SYSTEMLOGDataTable)(base.Tables["SYSTEMLOG"]));
            if ((initTable == true)) {
                if ((this.tableSYSTEMLOG != null)) {
                    this.tableSYSTEMLOG.InitVars();
                }
            }
            this.tableTRANSMITLOG = ((TRANSMITLOGDataTable)(base.Tables["TRANSMITLOG"]));
            if ((initTable == true)) {
                if ((this.tableTRANSMITLOG != null)) {
                    this.tableTRANSMITLOG.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "LoggingAndConfig";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LoggingAndConfig.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAPPOINTMENTLOG = new APPOINTMENTLOGDataTable();
            base.Tables.Add(this.tableAPPOINTMENTLOG);
            this.tableARCHIVELOG = new ARCHIVELOGDataTable();
            base.Tables.Add(this.tableARCHIVELOG);
            this.tableARCHIVESTUDYLOG = new ARCHIVESTUDYLOGDataTable();
            base.Tables.Add(this.tableARCHIVESTUDYLOG);
            this.tableAUTOQUERYRETRIEVELOG = new AUTOQUERYRETRIEVELOGDataTable();
            base.Tables.Add(this.tableAUTOQUERYRETRIEVELOG);
            this.tableCOMMUNICATIONLOG = new COMMUNICATIONLOGDataTable();
            base.Tables.Add(this.tableCOMMUNICATIONLOG);
            this.tableCONFIG = new CONFIGDataTable();
            base.Tables.Add(this.tableCONFIG);
            this.tableCONFIGDISPLAY = new CONFIGDISPLAYDataTable();
            base.Tables.Add(this.tableCONFIGDISPLAY);
            this.tableHEALTHVAULTSUMMARYEXPORTLOG = new HEALTHVAULTSUMMARYEXPORTLOGDataTable();
            base.Tables.Add(this.tableHEALTHVAULTSUMMARYEXPORTLOG);
            this.tableMDINTOUCHLOG = new MDINTOUCHLOGDataTable();
            base.Tables.Add(this.tableMDINTOUCHLOG);
            this.tableMIRTH_HL7_LOG = new MIRTH_HL7_LOGDataTable();
            base.Tables.Add(this.tableMIRTH_HL7_LOG);
            this.tableMPPSTRANSMITLOG = new MPPSTRANSMITLOGDataTable();
            base.Tables.Add(this.tableMPPSTRANSMITLOG);
            this.tableNETSUITEERRORLOG = new NETSUITEERRORLOGDataTable();
            base.Tables.Add(this.tableNETSUITEERRORLOG);
            this.tableNETSUITELOG = new NETSUITELOGDataTable();
            base.Tables.Add(this.tableNETSUITELOG);
            this.tablePATIENTDIRECTLOG = new PATIENTDIRECTLOGDataTable();
            base.Tables.Add(this.tablePATIENTDIRECTLOG);
            this.tablePATIENTMERGELOG = new PATIENTMERGELOGDataTable();
            base.Tables.Add(this.tablePATIENTMERGELOG);
            this.tablePRINTLOG = new PRINTLOGDataTable();
            base.Tables.Add(this.tablePRINTLOG);
            this.tablePRRELEASE = new PRRELEASEDataTable();
            base.Tables.Add(this.tablePRRELEASE);
            this.tablePRVERSION = new PRVERSIONDataTable();
            base.Tables.Add(this.tablePRVERSION);
            this.tableRECEIVESTUDYLOG = new RECEIVESTUDYLOGDataTable();
            base.Tables.Add(this.tableRECEIVESTUDYLOG);
            this.tableREFERRALINBOXLOG = new REFERRALINBOXLOGDataTable();
            base.Tables.Add(this.tableREFERRALINBOXLOG);
            this.tableREQUESTFAILLOG = new REQUESTFAILLOGDataTable();
            base.Tables.Add(this.tableREQUESTFAILLOG);
            this.tableREQUESTLOG = new REQUESTLOGDataTable();
            base.Tables.Add(this.tableREQUESTLOG);
            this.tableRETRIEVESTUDYLOG = new RETRIEVESTUDYLOGDataTable();
            base.Tables.Add(this.tableRETRIEVESTUDYLOG);
            this.tableRPTEXPORTLOG = new RPTEXPORTLOGDataTable();
            base.Tables.Add(this.tableRPTEXPORTLOG);
            this.tableSTORAGECOMMITLOG = new STORAGECOMMITLOGDataTable();
            base.Tables.Add(this.tableSTORAGECOMMITLOG);
            this.tableSTUDYACCESS = new STUDYACCESSDataTable();
            base.Tables.Add(this.tableSTUDYACCESS);
            this.tableSYSTEMLOG = new SYSTEMLOGDataTable();
            base.Tables.Add(this.tableSYSTEMLOG);
            this.tableTRANSMITLOG = new TRANSMITLOGDataTable();
            base.Tables.Add(this.tableTRANSMITLOG);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAPPOINTMENTLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeARCHIVELOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeARCHIVESTUDYLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAUTOQUERYRETRIEVELOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCOMMUNICATIONLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCONFIG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCONFIGDISPLAY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeHEALTHVAULTSUMMARYEXPORTLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMDINTOUCHLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMIRTH_HL7_LOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMPPSTRANSMITLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeNETSUITEERRORLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeNETSUITELOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePATIENTDIRECTLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePATIENTMERGELOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePRINTLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePRRELEASE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePRVERSION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRECEIVESTUDYLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeREFERRALINBOXLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeREQUESTFAILLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeREQUESTLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRETRIEVESTUDYLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRPTEXPORTLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSTORAGECOMMITLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSTUDYACCESS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSYSTEMLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTRANSMITLOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LoggingAndConfig ds = new LoggingAndConfig();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void APPOINTMENTLOGRowChangeEventHandler(object sender, APPOINTMENTLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ARCHIVELOGRowChangeEventHandler(object sender, ARCHIVELOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ARCHIVESTUDYLOGRowChangeEventHandler(object sender, ARCHIVESTUDYLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AUTOQUERYRETRIEVELOGRowChangeEventHandler(object sender, AUTOQUERYRETRIEVELOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void COMMUNICATIONLOGRowChangeEventHandler(object sender, COMMUNICATIONLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CONFIGRowChangeEventHandler(object sender, CONFIGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CONFIGDISPLAYRowChangeEventHandler(object sender, CONFIGDISPLAYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void HEALTHVAULTSUMMARYEXPORTLOGRowChangeEventHandler(object sender, HEALTHVAULTSUMMARYEXPORTLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MDINTOUCHLOGRowChangeEventHandler(object sender, MDINTOUCHLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MIRTH_HL7_LOGRowChangeEventHandler(object sender, MIRTH_HL7_LOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MPPSTRANSMITLOGRowChangeEventHandler(object sender, MPPSTRANSMITLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void NETSUITEERRORLOGRowChangeEventHandler(object sender, NETSUITEERRORLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void NETSUITELOGRowChangeEventHandler(object sender, NETSUITELOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PATIENTDIRECTLOGRowChangeEventHandler(object sender, PATIENTDIRECTLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PATIENTMERGELOGRowChangeEventHandler(object sender, PATIENTMERGELOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PRINTLOGRowChangeEventHandler(object sender, PRINTLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PRRELEASERowChangeEventHandler(object sender, PRRELEASERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PRVERSIONRowChangeEventHandler(object sender, PRVERSIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RECEIVESTUDYLOGRowChangeEventHandler(object sender, RECEIVESTUDYLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void REFERRALINBOXLOGRowChangeEventHandler(object sender, REFERRALINBOXLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void REQUESTFAILLOGRowChangeEventHandler(object sender, REQUESTFAILLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void REQUESTLOGRowChangeEventHandler(object sender, REQUESTLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RETRIEVESTUDYLOGRowChangeEventHandler(object sender, RETRIEVESTUDYLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RPTEXPORTLOGRowChangeEventHandler(object sender, RPTEXPORTLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void STORAGECOMMITLOGRowChangeEventHandler(object sender, STORAGECOMMITLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void STUDYACCESSRowChangeEventHandler(object sender, STUDYACCESSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SYSTEMLOGRowChangeEventHandler(object sender, SYSTEMLOGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TRANSMITLOGRowChangeEventHandler(object sender, TRANSMITLOGRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class APPOINTMENTLOGDataTable : global::System.Data.TypedTableBase<APPOINTMENTLOGRow> {
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnSTARTTIME;
            
            private global::System.Data.DataColumn columnFINISHTIME;
            
            private global::System.Data.DataColumn columnRESOURCENAME;
            
            private global::System.Data.DataColumn columnINTERNALSTUDYID;
            
            private global::System.Data.DataColumn columnAPPOINTMENTSTATE;
            
            private global::System.Data.DataColumn columnUPDATEUSERNAME;
            
            private global::System.Data.DataColumn columnBLOCKEDREASON;
            
            private global::System.Data.DataColumn columnACCESSTIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public APPOINTMENTLOGDataTable() {
                this.TableName = "APPOINTMENTLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal APPOINTMENTLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected APPOINTMENTLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STARTTIMEColumn {
                get {
                    return this.columnSTARTTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FINISHTIMEColumn {
                get {
                    return this.columnFINISHTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RESOURCENAMEColumn {
                get {
                    return this.columnRESOURCENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTERNALSTUDYIDColumn {
                get {
                    return this.columnINTERNALSTUDYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APPOINTMENTSTATEColumn {
                get {
                    return this.columnAPPOINTMENTSTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UPDATEUSERNAMEColumn {
                get {
                    return this.columnUPDATEUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BLOCKEDREASONColumn {
                get {
                    return this.columnBLOCKEDREASON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSTIMEColumn {
                get {
                    return this.columnACCESSTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public APPOINTMENTLOGRow this[int index] {
                get {
                    return ((APPOINTMENTLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event APPOINTMENTLOGRowChangeEventHandler APPOINTMENTLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event APPOINTMENTLOGRowChangeEventHandler APPOINTMENTLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event APPOINTMENTLOGRowChangeEventHandler APPOINTMENTLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event APPOINTMENTLOGRowChangeEventHandler APPOINTMENTLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAPPOINTMENTLOGRow(APPOINTMENTLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public APPOINTMENTLOGRow AddAPPOINTMENTLOGRow(int ENTRYID, System.DateTime STARTTIME, System.DateTime FINISHTIME, string RESOURCENAME, int INTERNALSTUDYID, int APPOINTMENTSTATE, string UPDATEUSERNAME, string BLOCKEDREASON, System.DateTime ACCESSTIME) {
                APPOINTMENTLOGRow rowAPPOINTMENTLOGRow = ((APPOINTMENTLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ENTRYID,
                        STARTTIME,
                        FINISHTIME,
                        RESOURCENAME,
                        INTERNALSTUDYID,
                        APPOINTMENTSTATE,
                        UPDATEUSERNAME,
                        BLOCKEDREASON,
                        ACCESSTIME};
                rowAPPOINTMENTLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAPPOINTMENTLOGRow);
                return rowAPPOINTMENTLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public APPOINTMENTLOGRow FindByENTRYID(int ENTRYID) {
                return ((APPOINTMENTLOGRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                APPOINTMENTLOGDataTable cln = ((APPOINTMENTLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new APPOINTMENTLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnSTARTTIME = base.Columns["STARTTIME"];
                this.columnFINISHTIME = base.Columns["FINISHTIME"];
                this.columnRESOURCENAME = base.Columns["RESOURCENAME"];
                this.columnINTERNALSTUDYID = base.Columns["INTERNALSTUDYID"];
                this.columnAPPOINTMENTSTATE = base.Columns["APPOINTMENTSTATE"];
                this.columnUPDATEUSERNAME = base.Columns["UPDATEUSERNAME"];
                this.columnBLOCKEDREASON = base.Columns["BLOCKEDREASON"];
                this.columnACCESSTIME = base.Columns["ACCESSTIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnSTARTTIME = new global::System.Data.DataColumn("STARTTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTARTTIME);
                this.columnFINISHTIME = new global::System.Data.DataColumn("FINISHTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINISHTIME);
                this.columnRESOURCENAME = new global::System.Data.DataColumn("RESOURCENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESOURCENAME);
                this.columnINTERNALSTUDYID = new global::System.Data.DataColumn("INTERNALSTUDYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERNALSTUDYID);
                this.columnAPPOINTMENTSTATE = new global::System.Data.DataColumn("APPOINTMENTSTATE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPOINTMENTSTATE);
                this.columnUPDATEUSERNAME = new global::System.Data.DataColumn("UPDATEUSERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEUSERNAME);
                this.columnBLOCKEDREASON = new global::System.Data.DataColumn("BLOCKEDREASON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOCKEDREASON);
                this.columnACCESSTIME = new global::System.Data.DataColumn("ACCESSTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSTIME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnRESOURCENAME.MaxLength = 64;
                this.columnAPPOINTMENTSTATE.AllowDBNull = false;
                this.columnUPDATEUSERNAME.MaxLength = 64;
                this.columnBLOCKEDREASON.MaxLength = 64;
                this.columnACCESSTIME.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public APPOINTMENTLOGRow NewAPPOINTMENTLOGRow() {
                return ((APPOINTMENTLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new APPOINTMENTLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(APPOINTMENTLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.APPOINTMENTLOGRowChanged != null)) {
                    this.APPOINTMENTLOGRowChanged(this, new APPOINTMENTLOGRowChangeEvent(((APPOINTMENTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.APPOINTMENTLOGRowChanging != null)) {
                    this.APPOINTMENTLOGRowChanging(this, new APPOINTMENTLOGRowChangeEvent(((APPOINTMENTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.APPOINTMENTLOGRowDeleted != null)) {
                    this.APPOINTMENTLOGRowDeleted(this, new APPOINTMENTLOGRowChangeEvent(((APPOINTMENTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.APPOINTMENTLOGRowDeleting != null)) {
                    this.APPOINTMENTLOGRowDeleting(this, new APPOINTMENTLOGRowChangeEvent(((APPOINTMENTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAPPOINTMENTLOGRow(APPOINTMENTLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "APPOINTMENTLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ARCHIVELOGDataTable : global::System.Data.TypedTableBase<ARCHIVELOGRow> {
            
            private global::System.Data.DataColumn columnSOPINSTANCEUID;
            
            private global::System.Data.DataColumn columnINSERTTIME;
            
            private global::System.Data.DataColumn columnTOKEN;
            
            private global::System.Data.DataColumn columnLOGTYPE;
            
            private global::System.Data.DataColumn columnENTRYID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVELOGDataTable() {
                this.TableName = "ARCHIVELOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ARCHIVELOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ARCHIVELOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SOPINSTANCEUIDColumn {
                get {
                    return this.columnSOPINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSERTTIMEColumn {
                get {
                    return this.columnINSERTTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOKENColumn {
                get {
                    return this.columnTOKEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOGTYPEColumn {
                get {
                    return this.columnLOGTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVELOGRow this[int index] {
                get {
                    return ((ARCHIVELOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ARCHIVELOGRowChangeEventHandler ARCHIVELOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ARCHIVELOGRowChangeEventHandler ARCHIVELOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ARCHIVELOGRowChangeEventHandler ARCHIVELOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ARCHIVELOGRowChangeEventHandler ARCHIVELOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddARCHIVELOGRow(ARCHIVELOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVELOGRow AddARCHIVELOGRow(string SOPINSTANCEUID, System.DateTime INSERTTIME, byte[] TOKEN, string LOGTYPE, int ENTRYID) {
                ARCHIVELOGRow rowARCHIVELOGRow = ((ARCHIVELOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SOPINSTANCEUID,
                        INSERTTIME,
                        TOKEN,
                        LOGTYPE,
                        ENTRYID};
                rowARCHIVELOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowARCHIVELOGRow);
                return rowARCHIVELOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVELOGRow FindByENTRYID(int ENTRYID) {
                return ((ARCHIVELOGRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ARCHIVELOGDataTable cln = ((ARCHIVELOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ARCHIVELOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSOPINSTANCEUID = base.Columns["SOPINSTANCEUID"];
                this.columnINSERTTIME = base.Columns["INSERTTIME"];
                this.columnTOKEN = base.Columns["TOKEN"];
                this.columnLOGTYPE = base.Columns["LOGTYPE"];
                this.columnENTRYID = base.Columns["ENTRYID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSOPINSTANCEUID = new global::System.Data.DataColumn("SOPINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPINSTANCEUID);
                this.columnINSERTTIME = new global::System.Data.DataColumn("INSERTTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSERTTIME);
                this.columnTOKEN = new global::System.Data.DataColumn("TOKEN", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOKEN);
                this.columnLOGTYPE = new global::System.Data.DataColumn("LOGTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGTYPE);
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnSOPINSTANCEUID.AllowDBNull = false;
                this.columnSOPINSTANCEUID.MaxLength = 64;
                this.columnINSERTTIME.AllowDBNull = false;
                this.columnLOGTYPE.AllowDBNull = false;
                this.columnLOGTYPE.MaxLength = 64;
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVELOGRow NewARCHIVELOGRow() {
                return ((ARCHIVELOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ARCHIVELOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ARCHIVELOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ARCHIVELOGRowChanged != null)) {
                    this.ARCHIVELOGRowChanged(this, new ARCHIVELOGRowChangeEvent(((ARCHIVELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ARCHIVELOGRowChanging != null)) {
                    this.ARCHIVELOGRowChanging(this, new ARCHIVELOGRowChangeEvent(((ARCHIVELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ARCHIVELOGRowDeleted != null)) {
                    this.ARCHIVELOGRowDeleted(this, new ARCHIVELOGRowChangeEvent(((ARCHIVELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ARCHIVELOGRowDeleting != null)) {
                    this.ARCHIVELOGRowDeleting(this, new ARCHIVELOGRowChangeEvent(((ARCHIVELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveARCHIVELOGRow(ARCHIVELOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ARCHIVELOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ARCHIVESTUDYLOGDataTable : global::System.Data.TypedTableBase<ARCHIVESTUDYLOGRow> {
            
            private global::System.Data.DataColumn columnADDEDID;
            
            private global::System.Data.DataColumn columnSTUDYINSTANCEUID;
            
            private global::System.Data.DataColumn columnSTUDYDATETIME;
            
            private global::System.Data.DataColumn columnFINISHTIME;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnNUMOBJECTS;
            
            private global::System.Data.DataColumn columnACCESSIONNUMBER;
            
            private global::System.Data.DataColumn columnPATIENTID;
            
            private global::System.Data.DataColumn columnISSUEROFPATIENTID;
            
            private global::System.Data.DataColumn columnFIRSTNAME;
            
            private global::System.Data.DataColumn columnLASTNAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVESTUDYLOGDataTable() {
                this.TableName = "ARCHIVESTUDYLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ARCHIVESTUDYLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ARCHIVESTUDYLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADDEDIDColumn {
                get {
                    return this.columnADDEDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYINSTANCEUIDColumn {
                get {
                    return this.columnSTUDYINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYDATETIMEColumn {
                get {
                    return this.columnSTUDYDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FINISHTIMEColumn {
                get {
                    return this.columnFINISHTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMOBJECTSColumn {
                get {
                    return this.columnNUMOBJECTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSIONNUMBERColumn {
                get {
                    return this.columnACCESSIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTIDColumn {
                get {
                    return this.columnPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ISSUEROFPATIENTIDColumn {
                get {
                    return this.columnISSUEROFPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIRSTNAMEColumn {
                get {
                    return this.columnFIRSTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LASTNAMEColumn {
                get {
                    return this.columnLASTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVESTUDYLOGRow this[int index] {
                get {
                    return ((ARCHIVESTUDYLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ARCHIVESTUDYLOGRowChangeEventHandler ARCHIVESTUDYLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ARCHIVESTUDYLOGRowChangeEventHandler ARCHIVESTUDYLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ARCHIVESTUDYLOGRowChangeEventHandler ARCHIVESTUDYLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ARCHIVESTUDYLOGRowChangeEventHandler ARCHIVESTUDYLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddARCHIVESTUDYLOGRow(ARCHIVESTUDYLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVESTUDYLOGRow AddARCHIVESTUDYLOGRow(int ADDEDID, string STUDYINSTANCEUID, System.DateTime STUDYDATETIME, System.DateTime FINISHTIME, int STATUS, int NUMOBJECTS, string ACCESSIONNUMBER, string PATIENTID, string ISSUEROFPATIENTID, string FIRSTNAME, string LASTNAME) {
                ARCHIVESTUDYLOGRow rowARCHIVESTUDYLOGRow = ((ARCHIVESTUDYLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ADDEDID,
                        STUDYINSTANCEUID,
                        STUDYDATETIME,
                        FINISHTIME,
                        STATUS,
                        NUMOBJECTS,
                        ACCESSIONNUMBER,
                        PATIENTID,
                        ISSUEROFPATIENTID,
                        FIRSTNAME,
                        LASTNAME};
                rowARCHIVESTUDYLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowARCHIVESTUDYLOGRow);
                return rowARCHIVESTUDYLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVESTUDYLOGRow FindByADDEDID(int ADDEDID) {
                return ((ARCHIVESTUDYLOGRow)(this.Rows.Find(new object[] {
                            ADDEDID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ARCHIVESTUDYLOGDataTable cln = ((ARCHIVESTUDYLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ARCHIVESTUDYLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnADDEDID = base.Columns["ADDEDID"];
                this.columnSTUDYINSTANCEUID = base.Columns["STUDYINSTANCEUID"];
                this.columnSTUDYDATETIME = base.Columns["STUDYDATETIME"];
                this.columnFINISHTIME = base.Columns["FINISHTIME"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnNUMOBJECTS = base.Columns["NUMOBJECTS"];
                this.columnACCESSIONNUMBER = base.Columns["ACCESSIONNUMBER"];
                this.columnPATIENTID = base.Columns["PATIENTID"];
                this.columnISSUEROFPATIENTID = base.Columns["ISSUEROFPATIENTID"];
                this.columnFIRSTNAME = base.Columns["FIRSTNAME"];
                this.columnLASTNAME = base.Columns["LASTNAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnADDEDID = new global::System.Data.DataColumn("ADDEDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDEDID);
                this.columnSTUDYINSTANCEUID = new global::System.Data.DataColumn("STUDYINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYINSTANCEUID);
                this.columnSTUDYDATETIME = new global::System.Data.DataColumn("STUDYDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYDATETIME);
                this.columnFINISHTIME = new global::System.Data.DataColumn("FINISHTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINISHTIME);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnNUMOBJECTS = new global::System.Data.DataColumn("NUMOBJECTS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMOBJECTS);
                this.columnACCESSIONNUMBER = new global::System.Data.DataColumn("ACCESSIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSIONNUMBER);
                this.columnPATIENTID = new global::System.Data.DataColumn("PATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTID);
                this.columnISSUEROFPATIENTID = new global::System.Data.DataColumn("ISSUEROFPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUEROFPATIENTID);
                this.columnFIRSTNAME = new global::System.Data.DataColumn("FIRSTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIRSTNAME);
                this.columnLASTNAME = new global::System.Data.DataColumn("LASTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTNAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnADDEDID}, true));
                this.columnADDEDID.AllowDBNull = false;
                this.columnADDEDID.Unique = true;
                this.columnSTUDYINSTANCEUID.AllowDBNull = false;
                this.columnSTUDYINSTANCEUID.MaxLength = 64;
                this.columnACCESSIONNUMBER.MaxLength = 16;
                this.columnPATIENTID.MaxLength = 64;
                this.columnISSUEROFPATIENTID.MaxLength = 64;
                this.columnFIRSTNAME.MaxLength = 64;
                this.columnLASTNAME.MaxLength = 64;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVESTUDYLOGRow NewARCHIVESTUDYLOGRow() {
                return ((ARCHIVESTUDYLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ARCHIVESTUDYLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ARCHIVESTUDYLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ARCHIVESTUDYLOGRowChanged != null)) {
                    this.ARCHIVESTUDYLOGRowChanged(this, new ARCHIVESTUDYLOGRowChangeEvent(((ARCHIVESTUDYLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ARCHIVESTUDYLOGRowChanging != null)) {
                    this.ARCHIVESTUDYLOGRowChanging(this, new ARCHIVESTUDYLOGRowChangeEvent(((ARCHIVESTUDYLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ARCHIVESTUDYLOGRowDeleted != null)) {
                    this.ARCHIVESTUDYLOGRowDeleted(this, new ARCHIVESTUDYLOGRowChangeEvent(((ARCHIVESTUDYLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ARCHIVESTUDYLOGRowDeleting != null)) {
                    this.ARCHIVESTUDYLOGRowDeleting(this, new ARCHIVESTUDYLOGRowChangeEvent(((ARCHIVESTUDYLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveARCHIVESTUDYLOGRow(ARCHIVESTUDYLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ARCHIVESTUDYLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AUTOQUERYRETRIEVELOGDataTable : global::System.Data.TypedTableBase<AUTOQUERYRETRIEVELOGRow> {
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnSERVICEID;
            
            private global::System.Data.DataColumn columnENTRYTIME;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AUTOQUERYRETRIEVELOGDataTable() {
                this.TableName = "AUTOQUERYRETRIEVELOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AUTOQUERYRETRIEVELOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AUTOQUERYRETRIEVELOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SERVICEIDColumn {
                get {
                    return this.columnSERVICEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYTIMEColumn {
                get {
                    return this.columnENTRYTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AUTOQUERYRETRIEVELOGRow this[int index] {
                get {
                    return ((AUTOQUERYRETRIEVELOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AUTOQUERYRETRIEVELOGRowChangeEventHandler AUTOQUERYRETRIEVELOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AUTOQUERYRETRIEVELOGRowChangeEventHandler AUTOQUERYRETRIEVELOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AUTOQUERYRETRIEVELOGRowChangeEventHandler AUTOQUERYRETRIEVELOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AUTOQUERYRETRIEVELOGRowChangeEventHandler AUTOQUERYRETRIEVELOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAUTOQUERYRETRIEVELOGRow(AUTOQUERYRETRIEVELOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AUTOQUERYRETRIEVELOGRow AddAUTOQUERYRETRIEVELOGRow(int ENTRYID, int SERVICEID, System.DateTime ENTRYTIME, string DESCRIPTION) {
                AUTOQUERYRETRIEVELOGRow rowAUTOQUERYRETRIEVELOGRow = ((AUTOQUERYRETRIEVELOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ENTRYID,
                        SERVICEID,
                        ENTRYTIME,
                        DESCRIPTION};
                rowAUTOQUERYRETRIEVELOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAUTOQUERYRETRIEVELOGRow);
                return rowAUTOQUERYRETRIEVELOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AUTOQUERYRETRIEVELOGRow FindByENTRYID(int ENTRYID) {
                return ((AUTOQUERYRETRIEVELOGRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AUTOQUERYRETRIEVELOGDataTable cln = ((AUTOQUERYRETRIEVELOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AUTOQUERYRETRIEVELOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnSERVICEID = base.Columns["SERVICEID"];
                this.columnENTRYTIME = base.Columns["ENTRYTIME"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnSERVICEID = new global::System.Data.DataColumn("SERVICEID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICEID);
                this.columnENTRYTIME = new global::System.Data.DataColumn("ENTRYTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYTIME);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnSERVICEID.AllowDBNull = false;
                this.columnENTRYTIME.AllowDBNull = false;
                this.columnDESCRIPTION.AllowDBNull = false;
                this.columnDESCRIPTION.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AUTOQUERYRETRIEVELOGRow NewAUTOQUERYRETRIEVELOGRow() {
                return ((AUTOQUERYRETRIEVELOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AUTOQUERYRETRIEVELOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AUTOQUERYRETRIEVELOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AUTOQUERYRETRIEVELOGRowChanged != null)) {
                    this.AUTOQUERYRETRIEVELOGRowChanged(this, new AUTOQUERYRETRIEVELOGRowChangeEvent(((AUTOQUERYRETRIEVELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AUTOQUERYRETRIEVELOGRowChanging != null)) {
                    this.AUTOQUERYRETRIEVELOGRowChanging(this, new AUTOQUERYRETRIEVELOGRowChangeEvent(((AUTOQUERYRETRIEVELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AUTOQUERYRETRIEVELOGRowDeleted != null)) {
                    this.AUTOQUERYRETRIEVELOGRowDeleted(this, new AUTOQUERYRETRIEVELOGRowChangeEvent(((AUTOQUERYRETRIEVELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AUTOQUERYRETRIEVELOGRowDeleting != null)) {
                    this.AUTOQUERYRETRIEVELOGRowDeleting(this, new AUTOQUERYRETRIEVELOGRowChangeEvent(((AUTOQUERYRETRIEVELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAUTOQUERYRETRIEVELOGRow(AUTOQUERYRETRIEVELOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AUTOQUERYRETRIEVELOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class COMMUNICATIONLOGDataTable : global::System.Data.TypedTableBase<COMMUNICATIONLOGRow> {
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnENTRYTIME;
            
            private global::System.Data.DataColumn columnSTUDYINSTANCEUID;
            
            private global::System.Data.DataColumn columnLINKID;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnSERVICENAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMMUNICATIONLOGDataTable() {
                this.TableName = "COMMUNICATIONLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal COMMUNICATIONLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected COMMUNICATIONLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYTIMEColumn {
                get {
                    return this.columnENTRYTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYINSTANCEUIDColumn {
                get {
                    return this.columnSTUDYINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LINKIDColumn {
                get {
                    return this.columnLINKID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SERVICENAMEColumn {
                get {
                    return this.columnSERVICENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMMUNICATIONLOGRow this[int index] {
                get {
                    return ((COMMUNICATIONLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event COMMUNICATIONLOGRowChangeEventHandler COMMUNICATIONLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event COMMUNICATIONLOGRowChangeEventHandler COMMUNICATIONLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event COMMUNICATIONLOGRowChangeEventHandler COMMUNICATIONLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event COMMUNICATIONLOGRowChangeEventHandler COMMUNICATIONLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCOMMUNICATIONLOGRow(COMMUNICATIONLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMMUNICATIONLOGRow AddCOMMUNICATIONLOGRow(int ENTRYID, System.DateTime ENTRYTIME, string STUDYINSTANCEUID, int LINKID, string DESCRIPTION, string SERVICENAME) {
                COMMUNICATIONLOGRow rowCOMMUNICATIONLOGRow = ((COMMUNICATIONLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ENTRYID,
                        ENTRYTIME,
                        STUDYINSTANCEUID,
                        LINKID,
                        DESCRIPTION,
                        SERVICENAME};
                rowCOMMUNICATIONLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCOMMUNICATIONLOGRow);
                return rowCOMMUNICATIONLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMMUNICATIONLOGRow FindByENTRYID(int ENTRYID) {
                return ((COMMUNICATIONLOGRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                COMMUNICATIONLOGDataTable cln = ((COMMUNICATIONLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new COMMUNICATIONLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnENTRYTIME = base.Columns["ENTRYTIME"];
                this.columnSTUDYINSTANCEUID = base.Columns["STUDYINSTANCEUID"];
                this.columnLINKID = base.Columns["LINKID"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnSERVICENAME = base.Columns["SERVICENAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnENTRYTIME = new global::System.Data.DataColumn("ENTRYTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYTIME);
                this.columnSTUDYINSTANCEUID = new global::System.Data.DataColumn("STUDYINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYINSTANCEUID);
                this.columnLINKID = new global::System.Data.DataColumn("LINKID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLINKID);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnSERVICENAME = new global::System.Data.DataColumn("SERVICENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICENAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnENTRYTIME.AllowDBNull = false;
                this.columnSTUDYINSTANCEUID.MaxLength = 64;
                this.columnDESCRIPTION.AllowDBNull = false;
                this.columnDESCRIPTION.MaxLength = 255;
                this.columnSERVICENAME.AllowDBNull = false;
                this.columnSERVICENAME.MaxLength = 64;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMMUNICATIONLOGRow NewCOMMUNICATIONLOGRow() {
                return ((COMMUNICATIONLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new COMMUNICATIONLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(COMMUNICATIONLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.COMMUNICATIONLOGRowChanged != null)) {
                    this.COMMUNICATIONLOGRowChanged(this, new COMMUNICATIONLOGRowChangeEvent(((COMMUNICATIONLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.COMMUNICATIONLOGRowChanging != null)) {
                    this.COMMUNICATIONLOGRowChanging(this, new COMMUNICATIONLOGRowChangeEvent(((COMMUNICATIONLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.COMMUNICATIONLOGRowDeleted != null)) {
                    this.COMMUNICATIONLOGRowDeleted(this, new COMMUNICATIONLOGRowChangeEvent(((COMMUNICATIONLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.COMMUNICATIONLOGRowDeleting != null)) {
                    this.COMMUNICATIONLOGRowDeleting(this, new COMMUNICATIONLOGRowChangeEvent(((COMMUNICATIONLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCOMMUNICATIONLOGRow(COMMUNICATIONLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "COMMUNICATIONLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CONFIGDataTable : global::System.Data.TypedTableBase<CONFIGRow> {
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnITEM;
            
            private global::System.Data.DataColumn columnSTRVALUE;
            
            private global::System.Data.DataColumn columnINTVALUE;
            
            private global::System.Data.DataColumn columnFLOATVALUE;
            
            private global::System.Data.DataColumn columnBOOLVALUE;
            
            private global::System.Data.DataColumn columnBLOBVALUE;
            
            private global::System.Data.DataColumn columnBLOBSTRING;
            
            private global::System.Data.DataColumn columnFIRSTCAT;
            
            private global::System.Data.DataColumn columnSECONDCAT;
            
            private global::System.Data.DataColumn columnTHIRDCAT;
            
            private global::System.Data.DataColumn columnMINVALUE;
            
            private global::System.Data.DataColumn columnMAXVALUE;
            
            private global::System.Data.DataColumn columnVALUETYPE;
            
            private global::System.Data.DataColumn columnMAXSTRINGLENGTH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGDataTable() {
                this.TableName = "CONFIG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CONFIGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CONFIGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ITEMColumn {
                get {
                    return this.columnITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STRVALUEColumn {
                get {
                    return this.columnSTRVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTVALUEColumn {
                get {
                    return this.columnINTVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FLOATVALUEColumn {
                get {
                    return this.columnFLOATVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BOOLVALUEColumn {
                get {
                    return this.columnBOOLVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BLOBVALUEColumn {
                get {
                    return this.columnBLOBVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BLOBSTRINGColumn {
                get {
                    return this.columnBLOBSTRING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIRSTCATColumn {
                get {
                    return this.columnFIRSTCAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SECONDCATColumn {
                get {
                    return this.columnSECONDCAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn THIRDCATColumn {
                get {
                    return this.columnTHIRDCAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MINVALUEColumn {
                get {
                    return this.columnMINVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MAXVALUEColumn {
                get {
                    return this.columnMAXVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALUETYPEColumn {
                get {
                    return this.columnVALUETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MAXSTRINGLENGTHColumn {
                get {
                    return this.columnMAXSTRINGLENGTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGRow this[int index] {
                get {
                    return ((CONFIGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CONFIGRowChangeEventHandler CONFIGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CONFIGRowChangeEventHandler CONFIGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CONFIGRowChangeEventHandler CONFIGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CONFIGRowChangeEventHandler CONFIGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCONFIGRow(CONFIGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGRow AddCONFIGRow(string USERNAME, string ITEM, string STRVALUE, int INTVALUE, float FLOATVALUE, string BOOLVALUE, byte[] BLOBVALUE, string BLOBSTRING, string FIRSTCAT, string SECONDCAT, string THIRDCAT, int MINVALUE, int MAXVALUE, int VALUETYPE, int MAXSTRINGLENGTH) {
                CONFIGRow rowCONFIGRow = ((CONFIGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        USERNAME,
                        ITEM,
                        STRVALUE,
                        INTVALUE,
                        FLOATVALUE,
                        BOOLVALUE,
                        BLOBVALUE,
                        BLOBSTRING,
                        FIRSTCAT,
                        SECONDCAT,
                        THIRDCAT,
                        MINVALUE,
                        MAXVALUE,
                        VALUETYPE,
                        MAXSTRINGLENGTH};
                rowCONFIGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCONFIGRow);
                return rowCONFIGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGRow FindByUSERNAMEITEM(string USERNAME, string ITEM) {
                return ((CONFIGRow)(this.Rows.Find(new object[] {
                            USERNAME,
                            ITEM})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CONFIGDataTable cln = ((CONFIGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CONFIGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnITEM = base.Columns["ITEM"];
                this.columnSTRVALUE = base.Columns["STRVALUE"];
                this.columnINTVALUE = base.Columns["INTVALUE"];
                this.columnFLOATVALUE = base.Columns["FLOATVALUE"];
                this.columnBOOLVALUE = base.Columns["BOOLVALUE"];
                this.columnBLOBVALUE = base.Columns["BLOBVALUE"];
                this.columnBLOBSTRING = base.Columns["BLOBSTRING"];
                this.columnFIRSTCAT = base.Columns["FIRSTCAT"];
                this.columnSECONDCAT = base.Columns["SECONDCAT"];
                this.columnTHIRDCAT = base.Columns["THIRDCAT"];
                this.columnMINVALUE = base.Columns["MINVALUE"];
                this.columnMAXVALUE = base.Columns["MAXVALUE"];
                this.columnVALUETYPE = base.Columns["VALUETYPE"];
                this.columnMAXSTRINGLENGTH = base.Columns["MAXSTRINGLENGTH"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnITEM = new global::System.Data.DataColumn("ITEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM);
                this.columnSTRVALUE = new global::System.Data.DataColumn("STRVALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTRVALUE);
                this.columnINTVALUE = new global::System.Data.DataColumn("INTVALUE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTVALUE);
                this.columnFLOATVALUE = new global::System.Data.DataColumn("FLOATVALUE", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOATVALUE);
                this.columnBOOLVALUE = new global::System.Data.DataColumn("BOOLVALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOOLVALUE);
                this.columnBLOBVALUE = new global::System.Data.DataColumn("BLOBVALUE", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOBVALUE);
                this.columnBLOBSTRING = new global::System.Data.DataColumn("BLOBSTRING", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOBSTRING);
                this.columnFIRSTCAT = new global::System.Data.DataColumn("FIRSTCAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIRSTCAT);
                this.columnSECONDCAT = new global::System.Data.DataColumn("SECONDCAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECONDCAT);
                this.columnTHIRDCAT = new global::System.Data.DataColumn("THIRDCAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHIRDCAT);
                this.columnMINVALUE = new global::System.Data.DataColumn("MINVALUE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMINVALUE);
                this.columnMAXVALUE = new global::System.Data.DataColumn("MAXVALUE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAXVALUE);
                this.columnVALUETYPE = new global::System.Data.DataColumn("VALUETYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUETYPE);
                this.columnMAXSTRINGLENGTH = new global::System.Data.DataColumn("MAXSTRINGLENGTH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAXSTRINGLENGTH);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUSERNAME,
                                this.columnITEM}, true));
                this.columnUSERNAME.AllowDBNull = false;
                this.columnUSERNAME.MaxLength = 64;
                this.columnITEM.AllowDBNull = false;
                this.columnITEM.MaxLength = 128;
                this.columnSTRVALUE.MaxLength = 256;
                this.columnBOOLVALUE.MaxLength = 1;
                this.columnBLOBSTRING.MaxLength = 2147483647;
                this.columnFIRSTCAT.AllowDBNull = false;
                this.columnFIRSTCAT.MaxLength = 64;
                this.columnSECONDCAT.AllowDBNull = false;
                this.columnSECONDCAT.MaxLength = 64;
                this.columnTHIRDCAT.AllowDBNull = false;
                this.columnTHIRDCAT.MaxLength = 64;
                this.columnVALUETYPE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGRow NewCONFIGRow() {
                return ((CONFIGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CONFIGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CONFIGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CONFIGRowChanged != null)) {
                    this.CONFIGRowChanged(this, new CONFIGRowChangeEvent(((CONFIGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CONFIGRowChanging != null)) {
                    this.CONFIGRowChanging(this, new CONFIGRowChangeEvent(((CONFIGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CONFIGRowDeleted != null)) {
                    this.CONFIGRowDeleted(this, new CONFIGRowChangeEvent(((CONFIGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CONFIGRowDeleting != null)) {
                    this.CONFIGRowDeleting(this, new CONFIGRowChangeEvent(((CONFIGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCONFIGRow(CONFIGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CONFIGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CONFIGDISPLAYDataTable : global::System.Data.TypedTableBase<CONFIGDISPLAYRow> {
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnITEM;
            
            private global::System.Data.DataColumn columnDESKTOPLEFT;
            
            private global::System.Data.DataColumn columnDESKTOPTOP;
            
            private global::System.Data.DataColumn columnDESKTOPRIGHT;
            
            private global::System.Data.DataColumn columnDESKTOPBOTTOM;
            
            private global::System.Data.DataColumn columnBLOBVALUE;
            
            private global::System.Data.DataColumn columnBLOBSTRING;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGDISPLAYDataTable() {
                this.TableName = "CONFIGDISPLAY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CONFIGDISPLAYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CONFIGDISPLAYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ITEMColumn {
                get {
                    return this.columnITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESKTOPLEFTColumn {
                get {
                    return this.columnDESKTOPLEFT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESKTOPTOPColumn {
                get {
                    return this.columnDESKTOPTOP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESKTOPRIGHTColumn {
                get {
                    return this.columnDESKTOPRIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESKTOPBOTTOMColumn {
                get {
                    return this.columnDESKTOPBOTTOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BLOBVALUEColumn {
                get {
                    return this.columnBLOBVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BLOBSTRINGColumn {
                get {
                    return this.columnBLOBSTRING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGDISPLAYRow this[int index] {
                get {
                    return ((CONFIGDISPLAYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CONFIGDISPLAYRowChangeEventHandler CONFIGDISPLAYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CONFIGDISPLAYRowChangeEventHandler CONFIGDISPLAYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CONFIGDISPLAYRowChangeEventHandler CONFIGDISPLAYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CONFIGDISPLAYRowChangeEventHandler CONFIGDISPLAYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCONFIGDISPLAYRow(CONFIGDISPLAYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGDISPLAYRow AddCONFIGDISPLAYRow(int ENTRYID, string USERNAME, string ITEM, int DESKTOPLEFT, int DESKTOPTOP, int DESKTOPRIGHT, int DESKTOPBOTTOM, byte[] BLOBVALUE, string BLOBSTRING) {
                CONFIGDISPLAYRow rowCONFIGDISPLAYRow = ((CONFIGDISPLAYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ENTRYID,
                        USERNAME,
                        ITEM,
                        DESKTOPLEFT,
                        DESKTOPTOP,
                        DESKTOPRIGHT,
                        DESKTOPBOTTOM,
                        BLOBVALUE,
                        BLOBSTRING};
                rowCONFIGDISPLAYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCONFIGDISPLAYRow);
                return rowCONFIGDISPLAYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGDISPLAYRow FindByENTRYID(int ENTRYID) {
                return ((CONFIGDISPLAYRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CONFIGDISPLAYDataTable cln = ((CONFIGDISPLAYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CONFIGDISPLAYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnITEM = base.Columns["ITEM"];
                this.columnDESKTOPLEFT = base.Columns["DESKTOPLEFT"];
                this.columnDESKTOPTOP = base.Columns["DESKTOPTOP"];
                this.columnDESKTOPRIGHT = base.Columns["DESKTOPRIGHT"];
                this.columnDESKTOPBOTTOM = base.Columns["DESKTOPBOTTOM"];
                this.columnBLOBVALUE = base.Columns["BLOBVALUE"];
                this.columnBLOBSTRING = base.Columns["BLOBSTRING"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnITEM = new global::System.Data.DataColumn("ITEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM);
                this.columnDESKTOPLEFT = new global::System.Data.DataColumn("DESKTOPLEFT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESKTOPLEFT);
                this.columnDESKTOPTOP = new global::System.Data.DataColumn("DESKTOPTOP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESKTOPTOP);
                this.columnDESKTOPRIGHT = new global::System.Data.DataColumn("DESKTOPRIGHT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESKTOPRIGHT);
                this.columnDESKTOPBOTTOM = new global::System.Data.DataColumn("DESKTOPBOTTOM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESKTOPBOTTOM);
                this.columnBLOBVALUE = new global::System.Data.DataColumn("BLOBVALUE", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOBVALUE);
                this.columnBLOBSTRING = new global::System.Data.DataColumn("BLOBSTRING", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOBSTRING);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUSERNAME}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnITEM}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint3", new global::System.Data.DataColumn[] {
                                this.columnDESKTOPLEFT}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint4", new global::System.Data.DataColumn[] {
                                this.columnDESKTOPTOP}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint5", new global::System.Data.DataColumn[] {
                                this.columnDESKTOPRIGHT}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint6", new global::System.Data.DataColumn[] {
                                this.columnDESKTOPBOTTOM}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint7", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnUSERNAME.AllowDBNull = false;
                this.columnUSERNAME.Unique = true;
                this.columnUSERNAME.MaxLength = 64;
                this.columnITEM.AllowDBNull = false;
                this.columnITEM.Unique = true;
                this.columnITEM.MaxLength = 64;
                this.columnDESKTOPLEFT.AllowDBNull = false;
                this.columnDESKTOPLEFT.Unique = true;
                this.columnDESKTOPTOP.AllowDBNull = false;
                this.columnDESKTOPTOP.Unique = true;
                this.columnDESKTOPRIGHT.AllowDBNull = false;
                this.columnDESKTOPRIGHT.Unique = true;
                this.columnDESKTOPBOTTOM.AllowDBNull = false;
                this.columnDESKTOPBOTTOM.Unique = true;
                this.columnBLOBSTRING.AllowDBNull = false;
                this.columnBLOBSTRING.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGDISPLAYRow NewCONFIGDISPLAYRow() {
                return ((CONFIGDISPLAYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CONFIGDISPLAYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CONFIGDISPLAYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CONFIGDISPLAYRowChanged != null)) {
                    this.CONFIGDISPLAYRowChanged(this, new CONFIGDISPLAYRowChangeEvent(((CONFIGDISPLAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CONFIGDISPLAYRowChanging != null)) {
                    this.CONFIGDISPLAYRowChanging(this, new CONFIGDISPLAYRowChangeEvent(((CONFIGDISPLAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CONFIGDISPLAYRowDeleted != null)) {
                    this.CONFIGDISPLAYRowDeleted(this, new CONFIGDISPLAYRowChangeEvent(((CONFIGDISPLAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CONFIGDISPLAYRowDeleting != null)) {
                    this.CONFIGDISPLAYRowDeleting(this, new CONFIGDISPLAYRowChangeEvent(((CONFIGDISPLAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCONFIGDISPLAYRow(CONFIGDISPLAYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CONFIGDISPLAYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HEALTHVAULTSUMMARYEXPORTLOGDataTable : global::System.Data.TypedTableBase<HEALTHVAULTSUMMARYEXPORTLOGRow> {
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnINTERNALPATIENTID;
            
            private global::System.Data.DataColumn columnACTION;
            
            private global::System.Data.DataColumn columnACTIONDATETIME;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HEALTHVAULTSUMMARYEXPORTLOGDataTable() {
                this.TableName = "HEALTHVAULTSUMMARYEXPORTLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal HEALTHVAULTSUMMARYEXPORTLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected HEALTHVAULTSUMMARYEXPORTLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTERNALPATIENTIDColumn {
                get {
                    return this.columnINTERNALPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACTIONColumn {
                get {
                    return this.columnACTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACTIONDATETIMEColumn {
                get {
                    return this.columnACTIONDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HEALTHVAULTSUMMARYEXPORTLOGRow this[int index] {
                get {
                    return ((HEALTHVAULTSUMMARYEXPORTLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HEALTHVAULTSUMMARYEXPORTLOGRowChangeEventHandler HEALTHVAULTSUMMARYEXPORTLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HEALTHVAULTSUMMARYEXPORTLOGRowChangeEventHandler HEALTHVAULTSUMMARYEXPORTLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HEALTHVAULTSUMMARYEXPORTLOGRowChangeEventHandler HEALTHVAULTSUMMARYEXPORTLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HEALTHVAULTSUMMARYEXPORTLOGRowChangeEventHandler HEALTHVAULTSUMMARYEXPORTLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddHEALTHVAULTSUMMARYEXPORTLOGRow(HEALTHVAULTSUMMARYEXPORTLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HEALTHVAULTSUMMARYEXPORTLOGRow AddHEALTHVAULTSUMMARYEXPORTLOGRow(int ENTRYID, int INTERNALPATIENTID, string ACTION, System.DateTime ACTIONDATETIME, string DESCRIPTION) {
                HEALTHVAULTSUMMARYEXPORTLOGRow rowHEALTHVAULTSUMMARYEXPORTLOGRow = ((HEALTHVAULTSUMMARYEXPORTLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ENTRYID,
                        INTERNALPATIENTID,
                        ACTION,
                        ACTIONDATETIME,
                        DESCRIPTION};
                rowHEALTHVAULTSUMMARYEXPORTLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHEALTHVAULTSUMMARYEXPORTLOGRow);
                return rowHEALTHVAULTSUMMARYEXPORTLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HEALTHVAULTSUMMARYEXPORTLOGRow FindByENTRYID(int ENTRYID) {
                return ((HEALTHVAULTSUMMARYEXPORTLOGRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                HEALTHVAULTSUMMARYEXPORTLOGDataTable cln = ((HEALTHVAULTSUMMARYEXPORTLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HEALTHVAULTSUMMARYEXPORTLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnINTERNALPATIENTID = base.Columns["INTERNALPATIENTID"];
                this.columnACTION = base.Columns["ACTION"];
                this.columnACTIONDATETIME = base.Columns["ACTIONDATETIME"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnINTERNALPATIENTID = new global::System.Data.DataColumn("INTERNALPATIENTID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERNALPATIENTID);
                this.columnACTION = new global::System.Data.DataColumn("ACTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTION);
                this.columnACTIONDATETIME = new global::System.Data.DataColumn("ACTIONDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIONDATETIME);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnINTERNALPATIENTID.AllowDBNull = false;
                this.columnACTION.AllowDBNull = false;
                this.columnACTION.MaxLength = 256;
                this.columnACTIONDATETIME.AllowDBNull = false;
                this.columnDESCRIPTION.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HEALTHVAULTSUMMARYEXPORTLOGRow NewHEALTHVAULTSUMMARYEXPORTLOGRow() {
                return ((HEALTHVAULTSUMMARYEXPORTLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HEALTHVAULTSUMMARYEXPORTLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(HEALTHVAULTSUMMARYEXPORTLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HEALTHVAULTSUMMARYEXPORTLOGRowChanged != null)) {
                    this.HEALTHVAULTSUMMARYEXPORTLOGRowChanged(this, new HEALTHVAULTSUMMARYEXPORTLOGRowChangeEvent(((HEALTHVAULTSUMMARYEXPORTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HEALTHVAULTSUMMARYEXPORTLOGRowChanging != null)) {
                    this.HEALTHVAULTSUMMARYEXPORTLOGRowChanging(this, new HEALTHVAULTSUMMARYEXPORTLOGRowChangeEvent(((HEALTHVAULTSUMMARYEXPORTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HEALTHVAULTSUMMARYEXPORTLOGRowDeleted != null)) {
                    this.HEALTHVAULTSUMMARYEXPORTLOGRowDeleted(this, new HEALTHVAULTSUMMARYEXPORTLOGRowChangeEvent(((HEALTHVAULTSUMMARYEXPORTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HEALTHVAULTSUMMARYEXPORTLOGRowDeleting != null)) {
                    this.HEALTHVAULTSUMMARYEXPORTLOGRowDeleting(this, new HEALTHVAULTSUMMARYEXPORTLOGRowChangeEvent(((HEALTHVAULTSUMMARYEXPORTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveHEALTHVAULTSUMMARYEXPORTLOGRow(HEALTHVAULTSUMMARYEXPORTLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HEALTHVAULTSUMMARYEXPORTLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MDINTOUCHLOGDataTable : global::System.Data.TypedTableBase<MDINTOUCHLOGRow> {
            
            private global::System.Data.DataColumn columnINTERNALMDINTOUCHLOGID;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnMSGTEXT;
            
            private global::System.Data.DataColumn columnDATETIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MDINTOUCHLOGDataTable() {
                this.TableName = "MDINTOUCHLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MDINTOUCHLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MDINTOUCHLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTERNALMDINTOUCHLOGIDColumn {
                get {
                    return this.columnINTERNALMDINTOUCHLOGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MSGTEXTColumn {
                get {
                    return this.columnMSGTEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATETIMEColumn {
                get {
                    return this.columnDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MDINTOUCHLOGRow this[int index] {
                get {
                    return ((MDINTOUCHLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MDINTOUCHLOGRowChangeEventHandler MDINTOUCHLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MDINTOUCHLOGRowChangeEventHandler MDINTOUCHLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MDINTOUCHLOGRowChangeEventHandler MDINTOUCHLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MDINTOUCHLOGRowChangeEventHandler MDINTOUCHLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMDINTOUCHLOGRow(MDINTOUCHLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MDINTOUCHLOGRow AddMDINTOUCHLOGRow(int INTERNALMDINTOUCHLOGID, string STATUS, string MSGTEXT, System.DateTime DATETIME) {
                MDINTOUCHLOGRow rowMDINTOUCHLOGRow = ((MDINTOUCHLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        INTERNALMDINTOUCHLOGID,
                        STATUS,
                        MSGTEXT,
                        DATETIME};
                rowMDINTOUCHLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMDINTOUCHLOGRow);
                return rowMDINTOUCHLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MDINTOUCHLOGRow FindByINTERNALMDINTOUCHLOGID(int INTERNALMDINTOUCHLOGID) {
                return ((MDINTOUCHLOGRow)(this.Rows.Find(new object[] {
                            INTERNALMDINTOUCHLOGID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MDINTOUCHLOGDataTable cln = ((MDINTOUCHLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MDINTOUCHLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnINTERNALMDINTOUCHLOGID = base.Columns["INTERNALMDINTOUCHLOGID"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnMSGTEXT = base.Columns["MSGTEXT"];
                this.columnDATETIME = base.Columns["DATETIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnINTERNALMDINTOUCHLOGID = new global::System.Data.DataColumn("INTERNALMDINTOUCHLOGID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERNALMDINTOUCHLOGID);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnMSGTEXT = new global::System.Data.DataColumn("MSGTEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSGTEXT);
                this.columnDATETIME = new global::System.Data.DataColumn("DATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATETIME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnINTERNALMDINTOUCHLOGID}, true));
                this.columnINTERNALMDINTOUCHLOGID.AllowDBNull = false;
                this.columnINTERNALMDINTOUCHLOGID.Unique = true;
                this.columnSTATUS.AllowDBNull = false;
                this.columnSTATUS.MaxLength = 64;
                this.columnMSGTEXT.AllowDBNull = false;
                this.columnMSGTEXT.MaxLength = 64;
                this.columnDATETIME.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MDINTOUCHLOGRow NewMDINTOUCHLOGRow() {
                return ((MDINTOUCHLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MDINTOUCHLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MDINTOUCHLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MDINTOUCHLOGRowChanged != null)) {
                    this.MDINTOUCHLOGRowChanged(this, new MDINTOUCHLOGRowChangeEvent(((MDINTOUCHLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MDINTOUCHLOGRowChanging != null)) {
                    this.MDINTOUCHLOGRowChanging(this, new MDINTOUCHLOGRowChangeEvent(((MDINTOUCHLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MDINTOUCHLOGRowDeleted != null)) {
                    this.MDINTOUCHLOGRowDeleted(this, new MDINTOUCHLOGRowChangeEvent(((MDINTOUCHLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MDINTOUCHLOGRowDeleting != null)) {
                    this.MDINTOUCHLOGRowDeleting(this, new MDINTOUCHLOGRowChangeEvent(((MDINTOUCHLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMDINTOUCHLOGRow(MDINTOUCHLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MDINTOUCHLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MIRTH_HL7_LOGDataTable : global::System.Data.TypedTableBase<MIRTH_HL7_LOGRow> {
            
            private global::System.Data.DataColumn columnMIRTHHL7LOGID;
            
            private global::System.Data.DataColumn columnRECORDID;
            
            private global::System.Data.DataColumn columnTIMECOMPLETED;
            
            private global::System.Data.DataColumn columnPATIENTLASTNAME;
            
            private global::System.Data.DataColumn columnPATIENTFIRSTNAME;
            
            private global::System.Data.DataColumn columnPATIENTID;
            
            private global::System.Data.DataColumn columnISSUEROFPATIENTID;
            
            private global::System.Data.DataColumn columnACCESSIONNUMBER;
            
            private global::System.Data.DataColumn columnREPORTTITLE;
            
            private global::System.Data.DataColumn columnDESTINATIONNAMES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MIRTH_HL7_LOGDataTable() {
                this.TableName = "MIRTH_HL7_LOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MIRTH_HL7_LOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MIRTH_HL7_LOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MIRTHHL7LOGIDColumn {
                get {
                    return this.columnMIRTHHL7LOGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RECORDIDColumn {
                get {
                    return this.columnRECORDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMECOMPLETEDColumn {
                get {
                    return this.columnTIMECOMPLETED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTLASTNAMEColumn {
                get {
                    return this.columnPATIENTLASTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTFIRSTNAMEColumn {
                get {
                    return this.columnPATIENTFIRSTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTIDColumn {
                get {
                    return this.columnPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ISSUEROFPATIENTIDColumn {
                get {
                    return this.columnISSUEROFPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSIONNUMBERColumn {
                get {
                    return this.columnACCESSIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REPORTTITLEColumn {
                get {
                    return this.columnREPORTTITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESTINATIONNAMESColumn {
                get {
                    return this.columnDESTINATIONNAMES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MIRTH_HL7_LOGRow this[int index] {
                get {
                    return ((MIRTH_HL7_LOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MIRTH_HL7_LOGRowChangeEventHandler MIRTH_HL7_LOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MIRTH_HL7_LOGRowChangeEventHandler MIRTH_HL7_LOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MIRTH_HL7_LOGRowChangeEventHandler MIRTH_HL7_LOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MIRTH_HL7_LOGRowChangeEventHandler MIRTH_HL7_LOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMIRTH_HL7_LOGRow(MIRTH_HL7_LOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MIRTH_HL7_LOGRow AddMIRTH_HL7_LOGRow(int MIRTHHL7LOGID, int RECORDID, System.DateTime TIMECOMPLETED, string PATIENTLASTNAME, string PATIENTFIRSTNAME, string PATIENTID, string ISSUEROFPATIENTID, string ACCESSIONNUMBER, string REPORTTITLE, string DESTINATIONNAMES) {
                MIRTH_HL7_LOGRow rowMIRTH_HL7_LOGRow = ((MIRTH_HL7_LOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MIRTHHL7LOGID,
                        RECORDID,
                        TIMECOMPLETED,
                        PATIENTLASTNAME,
                        PATIENTFIRSTNAME,
                        PATIENTID,
                        ISSUEROFPATIENTID,
                        ACCESSIONNUMBER,
                        REPORTTITLE,
                        DESTINATIONNAMES};
                rowMIRTH_HL7_LOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMIRTH_HL7_LOGRow);
                return rowMIRTH_HL7_LOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MIRTH_HL7_LOGRow FindByMIRTHHL7LOGID(int MIRTHHL7LOGID) {
                return ((MIRTH_HL7_LOGRow)(this.Rows.Find(new object[] {
                            MIRTHHL7LOGID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MIRTH_HL7_LOGDataTable cln = ((MIRTH_HL7_LOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MIRTH_HL7_LOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMIRTHHL7LOGID = base.Columns["MIRTHHL7LOGID"];
                this.columnRECORDID = base.Columns["RECORDID"];
                this.columnTIMECOMPLETED = base.Columns["TIMECOMPLETED"];
                this.columnPATIENTLASTNAME = base.Columns["PATIENTLASTNAME"];
                this.columnPATIENTFIRSTNAME = base.Columns["PATIENTFIRSTNAME"];
                this.columnPATIENTID = base.Columns["PATIENTID"];
                this.columnISSUEROFPATIENTID = base.Columns["ISSUEROFPATIENTID"];
                this.columnACCESSIONNUMBER = base.Columns["ACCESSIONNUMBER"];
                this.columnREPORTTITLE = base.Columns["REPORTTITLE"];
                this.columnDESTINATIONNAMES = base.Columns["DESTINATIONNAMES"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMIRTHHL7LOGID = new global::System.Data.DataColumn("MIRTHHL7LOGID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIRTHHL7LOGID);
                this.columnRECORDID = new global::System.Data.DataColumn("RECORDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECORDID);
                this.columnTIMECOMPLETED = new global::System.Data.DataColumn("TIMECOMPLETED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMECOMPLETED);
                this.columnPATIENTLASTNAME = new global::System.Data.DataColumn("PATIENTLASTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTLASTNAME);
                this.columnPATIENTFIRSTNAME = new global::System.Data.DataColumn("PATIENTFIRSTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTFIRSTNAME);
                this.columnPATIENTID = new global::System.Data.DataColumn("PATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTID);
                this.columnISSUEROFPATIENTID = new global::System.Data.DataColumn("ISSUEROFPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUEROFPATIENTID);
                this.columnACCESSIONNUMBER = new global::System.Data.DataColumn("ACCESSIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSIONNUMBER);
                this.columnREPORTTITLE = new global::System.Data.DataColumn("REPORTTITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPORTTITLE);
                this.columnDESTINATIONNAMES = new global::System.Data.DataColumn("DESTINATIONNAMES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESTINATIONNAMES);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMIRTHHL7LOGID}, true));
                this.columnMIRTHHL7LOGID.AllowDBNull = false;
                this.columnMIRTHHL7LOGID.Unique = true;
                this.columnPATIENTLASTNAME.MaxLength = 64;
                this.columnPATIENTFIRSTNAME.MaxLength = 64;
                this.columnPATIENTID.MaxLength = 64;
                this.columnISSUEROFPATIENTID.MaxLength = 64;
                this.columnACCESSIONNUMBER.MaxLength = 16;
                this.columnREPORTTITLE.MaxLength = 64;
                this.columnDESTINATIONNAMES.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MIRTH_HL7_LOGRow NewMIRTH_HL7_LOGRow() {
                return ((MIRTH_HL7_LOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MIRTH_HL7_LOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MIRTH_HL7_LOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MIRTH_HL7_LOGRowChanged != null)) {
                    this.MIRTH_HL7_LOGRowChanged(this, new MIRTH_HL7_LOGRowChangeEvent(((MIRTH_HL7_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MIRTH_HL7_LOGRowChanging != null)) {
                    this.MIRTH_HL7_LOGRowChanging(this, new MIRTH_HL7_LOGRowChangeEvent(((MIRTH_HL7_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MIRTH_HL7_LOGRowDeleted != null)) {
                    this.MIRTH_HL7_LOGRowDeleted(this, new MIRTH_HL7_LOGRowChangeEvent(((MIRTH_HL7_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MIRTH_HL7_LOGRowDeleting != null)) {
                    this.MIRTH_HL7_LOGRowDeleting(this, new MIRTH_HL7_LOGRowChangeEvent(((MIRTH_HL7_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMIRTH_HL7_LOGRow(MIRTH_HL7_LOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MIRTH_HL7_LOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MPPSTRANSMITLOGDataTable : global::System.Data.TypedTableBase<MPPSTRANSMITLOGRow> {
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnTIMESTARTED;
            
            private global::System.Data.DataColumn columnTIMEFINISHED;
            
            private global::System.Data.DataColumn columnPATIENTID;
            
            private global::System.Data.DataColumn columnISSUEROFPATIENTID;
            
            private global::System.Data.DataColumn columnSTUDYINSTANCEUID;
            
            private global::System.Data.DataColumn columnACCESSIONNUMBER;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnSERVICENAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MPPSTRANSMITLOGDataTable() {
                this.TableName = "MPPSTRANSMITLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MPPSTRANSMITLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MPPSTRANSMITLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMESTARTEDColumn {
                get {
                    return this.columnTIMESTARTED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMEFINISHEDColumn {
                get {
                    return this.columnTIMEFINISHED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTIDColumn {
                get {
                    return this.columnPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ISSUEROFPATIENTIDColumn {
                get {
                    return this.columnISSUEROFPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYINSTANCEUIDColumn {
                get {
                    return this.columnSTUDYINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSIONNUMBERColumn {
                get {
                    return this.columnACCESSIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SERVICENAMEColumn {
                get {
                    return this.columnSERVICENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MPPSTRANSMITLOGRow this[int index] {
                get {
                    return ((MPPSTRANSMITLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MPPSTRANSMITLOGRowChangeEventHandler MPPSTRANSMITLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MPPSTRANSMITLOGRowChangeEventHandler MPPSTRANSMITLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MPPSTRANSMITLOGRowChangeEventHandler MPPSTRANSMITLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MPPSTRANSMITLOGRowChangeEventHandler MPPSTRANSMITLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMPPSTRANSMITLOGRow(MPPSTRANSMITLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MPPSTRANSMITLOGRow AddMPPSTRANSMITLOGRow(int ENTRYID, System.DateTime TIMESTARTED, System.DateTime TIMEFINISHED, string PATIENTID, string ISSUEROFPATIENTID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, string USERNAME, string SERVICENAME) {
                MPPSTRANSMITLOGRow rowMPPSTRANSMITLOGRow = ((MPPSTRANSMITLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ENTRYID,
                        TIMESTARTED,
                        TIMEFINISHED,
                        PATIENTID,
                        ISSUEROFPATIENTID,
                        STUDYINSTANCEUID,
                        ACCESSIONNUMBER,
                        USERNAME,
                        SERVICENAME};
                rowMPPSTRANSMITLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMPPSTRANSMITLOGRow);
                return rowMPPSTRANSMITLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MPPSTRANSMITLOGRow FindByENTRYID(int ENTRYID) {
                return ((MPPSTRANSMITLOGRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MPPSTRANSMITLOGDataTable cln = ((MPPSTRANSMITLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MPPSTRANSMITLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnTIMESTARTED = base.Columns["TIMESTARTED"];
                this.columnTIMEFINISHED = base.Columns["TIMEFINISHED"];
                this.columnPATIENTID = base.Columns["PATIENTID"];
                this.columnISSUEROFPATIENTID = base.Columns["ISSUEROFPATIENTID"];
                this.columnSTUDYINSTANCEUID = base.Columns["STUDYINSTANCEUID"];
                this.columnACCESSIONNUMBER = base.Columns["ACCESSIONNUMBER"];
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnSERVICENAME = base.Columns["SERVICENAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnTIMESTARTED = new global::System.Data.DataColumn("TIMESTARTED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMESTARTED);
                this.columnTIMEFINISHED = new global::System.Data.DataColumn("TIMEFINISHED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMEFINISHED);
                this.columnPATIENTID = new global::System.Data.DataColumn("PATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTID);
                this.columnISSUEROFPATIENTID = new global::System.Data.DataColumn("ISSUEROFPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUEROFPATIENTID);
                this.columnSTUDYINSTANCEUID = new global::System.Data.DataColumn("STUDYINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYINSTANCEUID);
                this.columnACCESSIONNUMBER = new global::System.Data.DataColumn("ACCESSIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSIONNUMBER);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnSERVICENAME = new global::System.Data.DataColumn("SERVICENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICENAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnTIMESTARTED.AllowDBNull = false;
                this.columnTIMEFINISHED.AllowDBNull = false;
                this.columnPATIENTID.AllowDBNull = false;
                this.columnPATIENTID.MaxLength = 64;
                this.columnISSUEROFPATIENTID.AllowDBNull = false;
                this.columnISSUEROFPATIENTID.MaxLength = 64;
                this.columnSTUDYINSTANCEUID.AllowDBNull = false;
                this.columnSTUDYINSTANCEUID.MaxLength = 64;
                this.columnACCESSIONNUMBER.AllowDBNull = false;
                this.columnACCESSIONNUMBER.MaxLength = 16;
                this.columnUSERNAME.AllowDBNull = false;
                this.columnUSERNAME.MaxLength = 64;
                this.columnSERVICENAME.AllowDBNull = false;
                this.columnSERVICENAME.MaxLength = 64;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MPPSTRANSMITLOGRow NewMPPSTRANSMITLOGRow() {
                return ((MPPSTRANSMITLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MPPSTRANSMITLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MPPSTRANSMITLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MPPSTRANSMITLOGRowChanged != null)) {
                    this.MPPSTRANSMITLOGRowChanged(this, new MPPSTRANSMITLOGRowChangeEvent(((MPPSTRANSMITLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MPPSTRANSMITLOGRowChanging != null)) {
                    this.MPPSTRANSMITLOGRowChanging(this, new MPPSTRANSMITLOGRowChangeEvent(((MPPSTRANSMITLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MPPSTRANSMITLOGRowDeleted != null)) {
                    this.MPPSTRANSMITLOGRowDeleted(this, new MPPSTRANSMITLOGRowChangeEvent(((MPPSTRANSMITLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MPPSTRANSMITLOGRowDeleting != null)) {
                    this.MPPSTRANSMITLOGRowDeleting(this, new MPPSTRANSMITLOGRowChangeEvent(((MPPSTRANSMITLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMPPSTRANSMITLOGRow(MPPSTRANSMITLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MPPSTRANSMITLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NETSUITEERRORLOGDataTable : global::System.Data.TypedTableBase<NETSUITEERRORLOGRow> {
            
            private global::System.Data.DataColumn columnLOGID;
            
            private global::System.Data.DataColumn columnSTUDYINSTANCEUID;
            
            private global::System.Data.DataColumn columnACCESSIONNUMBER;
            
            private global::System.Data.DataColumn columnTRANSACTIONTYPE;
            
            private global::System.Data.DataColumn columnERRORMESSAGE;
            
            private global::System.Data.DataColumn columnERRORDATETIME;
            
            private global::System.Data.DataColumn columnINSTITUTION;
            
            private global::System.Data.DataColumn columnPATIENTID;
            
            private global::System.Data.DataColumn columnISSUEROFPATIENTID;
            
            private global::System.Data.DataColumn columnSCHEDULEDMODALITY;
            
            private global::System.Data.DataColumn columnSCHEDULEDBODYPART;
            
            private global::System.Data.DataColumn columnMULTIACQUISITION;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnSTUDYTRANSITIONDATETIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITEERRORLOGDataTable() {
                this.TableName = "NETSUITEERRORLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NETSUITEERRORLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected NETSUITEERRORLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOGIDColumn {
                get {
                    return this.columnLOGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYINSTANCEUIDColumn {
                get {
                    return this.columnSTUDYINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSIONNUMBERColumn {
                get {
                    return this.columnACCESSIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRANSACTIONTYPEColumn {
                get {
                    return this.columnTRANSACTIONTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ERRORMESSAGEColumn {
                get {
                    return this.columnERRORMESSAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ERRORDATETIMEColumn {
                get {
                    return this.columnERRORDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSTITUTIONColumn {
                get {
                    return this.columnINSTITUTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTIDColumn {
                get {
                    return this.columnPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ISSUEROFPATIENTIDColumn {
                get {
                    return this.columnISSUEROFPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCHEDULEDMODALITYColumn {
                get {
                    return this.columnSCHEDULEDMODALITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCHEDULEDBODYPARTColumn {
                get {
                    return this.columnSCHEDULEDBODYPART;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MULTIACQUISITIONColumn {
                get {
                    return this.columnMULTIACQUISITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYTRANSITIONDATETIMEColumn {
                get {
                    return this.columnSTUDYTRANSITIONDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITEERRORLOGRow this[int index] {
                get {
                    return ((NETSUITEERRORLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NETSUITEERRORLOGRowChangeEventHandler NETSUITEERRORLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NETSUITEERRORLOGRowChangeEventHandler NETSUITEERRORLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NETSUITEERRORLOGRowChangeEventHandler NETSUITEERRORLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NETSUITEERRORLOGRowChangeEventHandler NETSUITEERRORLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddNETSUITEERRORLOGRow(NETSUITEERRORLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITEERRORLOGRow AddNETSUITEERRORLOGRow(int LOGID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, int TRANSACTIONTYPE, string ERRORMESSAGE, System.DateTime ERRORDATETIME, string INSTITUTION, string PATIENTID, string ISSUEROFPATIENTID, string SCHEDULEDMODALITY, string SCHEDULEDBODYPART, string MULTIACQUISITION, string STATUS, System.DateTime STUDYTRANSITIONDATETIME) {
                NETSUITEERRORLOGRow rowNETSUITEERRORLOGRow = ((NETSUITEERRORLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LOGID,
                        STUDYINSTANCEUID,
                        ACCESSIONNUMBER,
                        TRANSACTIONTYPE,
                        ERRORMESSAGE,
                        ERRORDATETIME,
                        INSTITUTION,
                        PATIENTID,
                        ISSUEROFPATIENTID,
                        SCHEDULEDMODALITY,
                        SCHEDULEDBODYPART,
                        MULTIACQUISITION,
                        STATUS,
                        STUDYTRANSITIONDATETIME};
                rowNETSUITEERRORLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNETSUITEERRORLOGRow);
                return rowNETSUITEERRORLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITEERRORLOGRow FindByLOGID(int LOGID) {
                return ((NETSUITEERRORLOGRow)(this.Rows.Find(new object[] {
                            LOGID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NETSUITEERRORLOGDataTable cln = ((NETSUITEERRORLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NETSUITEERRORLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLOGID = base.Columns["LOGID"];
                this.columnSTUDYINSTANCEUID = base.Columns["STUDYINSTANCEUID"];
                this.columnACCESSIONNUMBER = base.Columns["ACCESSIONNUMBER"];
                this.columnTRANSACTIONTYPE = base.Columns["TRANSACTIONTYPE"];
                this.columnERRORMESSAGE = base.Columns["ERRORMESSAGE"];
                this.columnERRORDATETIME = base.Columns["ERRORDATETIME"];
                this.columnINSTITUTION = base.Columns["INSTITUTION"];
                this.columnPATIENTID = base.Columns["PATIENTID"];
                this.columnISSUEROFPATIENTID = base.Columns["ISSUEROFPATIENTID"];
                this.columnSCHEDULEDMODALITY = base.Columns["SCHEDULEDMODALITY"];
                this.columnSCHEDULEDBODYPART = base.Columns["SCHEDULEDBODYPART"];
                this.columnMULTIACQUISITION = base.Columns["MULTIACQUISITION"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnSTUDYTRANSITIONDATETIME = base.Columns["STUDYTRANSITIONDATETIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLOGID = new global::System.Data.DataColumn("LOGID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGID);
                this.columnSTUDYINSTANCEUID = new global::System.Data.DataColumn("STUDYINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYINSTANCEUID);
                this.columnACCESSIONNUMBER = new global::System.Data.DataColumn("ACCESSIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSIONNUMBER);
                this.columnTRANSACTIONTYPE = new global::System.Data.DataColumn("TRANSACTIONTYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTIONTYPE);
                this.columnERRORMESSAGE = new global::System.Data.DataColumn("ERRORMESSAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnERRORMESSAGE);
                this.columnERRORDATETIME = new global::System.Data.DataColumn("ERRORDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnERRORDATETIME);
                this.columnINSTITUTION = new global::System.Data.DataColumn("INSTITUTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTITUTION);
                this.columnPATIENTID = new global::System.Data.DataColumn("PATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTID);
                this.columnISSUEROFPATIENTID = new global::System.Data.DataColumn("ISSUEROFPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUEROFPATIENTID);
                this.columnSCHEDULEDMODALITY = new global::System.Data.DataColumn("SCHEDULEDMODALITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHEDULEDMODALITY);
                this.columnSCHEDULEDBODYPART = new global::System.Data.DataColumn("SCHEDULEDBODYPART", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHEDULEDBODYPART);
                this.columnMULTIACQUISITION = new global::System.Data.DataColumn("MULTIACQUISITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMULTIACQUISITION);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnSTUDYTRANSITIONDATETIME = new global::System.Data.DataColumn("STUDYTRANSITIONDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYTRANSITIONDATETIME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLOGID}, true));
                this.columnLOGID.AllowDBNull = false;
                this.columnLOGID.Unique = true;
                this.columnSTUDYINSTANCEUID.MaxLength = 64;
                this.columnACCESSIONNUMBER.MaxLength = 16;
                this.columnTRANSACTIONTYPE.AllowDBNull = false;
                this.columnERRORMESSAGE.MaxLength = 255;
                this.columnERRORDATETIME.AllowDBNull = false;
                this.columnINSTITUTION.MaxLength = 64;
                this.columnPATIENTID.MaxLength = 64;
                this.columnISSUEROFPATIENTID.MaxLength = 64;
                this.columnSCHEDULEDMODALITY.MaxLength = 64;
                this.columnSCHEDULEDBODYPART.MaxLength = 64;
                this.columnMULTIACQUISITION.MaxLength = 1;
                this.columnSTATUS.MaxLength = 16;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITEERRORLOGRow NewNETSUITEERRORLOGRow() {
                return ((NETSUITEERRORLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NETSUITEERRORLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NETSUITEERRORLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NETSUITEERRORLOGRowChanged != null)) {
                    this.NETSUITEERRORLOGRowChanged(this, new NETSUITEERRORLOGRowChangeEvent(((NETSUITEERRORLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NETSUITEERRORLOGRowChanging != null)) {
                    this.NETSUITEERRORLOGRowChanging(this, new NETSUITEERRORLOGRowChangeEvent(((NETSUITEERRORLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NETSUITEERRORLOGRowDeleted != null)) {
                    this.NETSUITEERRORLOGRowDeleted(this, new NETSUITEERRORLOGRowChangeEvent(((NETSUITEERRORLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NETSUITEERRORLOGRowDeleting != null)) {
                    this.NETSUITEERRORLOGRowDeleting(this, new NETSUITEERRORLOGRowChangeEvent(((NETSUITEERRORLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveNETSUITEERRORLOGRow(NETSUITEERRORLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NETSUITEERRORLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NETSUITELOGDataTable : global::System.Data.TypedTableBase<NETSUITELOGRow> {
            
            private global::System.Data.DataColumn columnLOGID;
            
            private global::System.Data.DataColumn columnSTUDYINSTANCEUID;
            
            private global::System.Data.DataColumn columnACCESSIONNUMBER;
            
            private global::System.Data.DataColumn columnTRANSACTIONTYPE;
            
            private global::System.Data.DataColumn columnFINISHTIME;
            
            private global::System.Data.DataColumn columnINSTITUTION;
            
            private global::System.Data.DataColumn columnPATIENTID;
            
            private global::System.Data.DataColumn columnISSUEROFPATIENTID;
            
            private global::System.Data.DataColumn columnSCHEDULEDMODALITY;
            
            private global::System.Data.DataColumn columnSCHEDULEDBODYPART;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnMULTIACQUISITION;
            
            private global::System.Data.DataColumn columnSTUDYTRANSITIONDATETIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITELOGDataTable() {
                this.TableName = "NETSUITELOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NETSUITELOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected NETSUITELOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOGIDColumn {
                get {
                    return this.columnLOGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYINSTANCEUIDColumn {
                get {
                    return this.columnSTUDYINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSIONNUMBERColumn {
                get {
                    return this.columnACCESSIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRANSACTIONTYPEColumn {
                get {
                    return this.columnTRANSACTIONTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FINISHTIMEColumn {
                get {
                    return this.columnFINISHTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSTITUTIONColumn {
                get {
                    return this.columnINSTITUTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTIDColumn {
                get {
                    return this.columnPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ISSUEROFPATIENTIDColumn {
                get {
                    return this.columnISSUEROFPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCHEDULEDMODALITYColumn {
                get {
                    return this.columnSCHEDULEDMODALITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCHEDULEDBODYPARTColumn {
                get {
                    return this.columnSCHEDULEDBODYPART;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MULTIACQUISITIONColumn {
                get {
                    return this.columnMULTIACQUISITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYTRANSITIONDATETIMEColumn {
                get {
                    return this.columnSTUDYTRANSITIONDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITELOGRow this[int index] {
                get {
                    return ((NETSUITELOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NETSUITELOGRowChangeEventHandler NETSUITELOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NETSUITELOGRowChangeEventHandler NETSUITELOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NETSUITELOGRowChangeEventHandler NETSUITELOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NETSUITELOGRowChangeEventHandler NETSUITELOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddNETSUITELOGRow(NETSUITELOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITELOGRow AddNETSUITELOGRow(int LOGID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, int TRANSACTIONTYPE, System.DateTime FINISHTIME, string INSTITUTION, string PATIENTID, string ISSUEROFPATIENTID, string SCHEDULEDMODALITY, string SCHEDULEDBODYPART, string STATUS, string MULTIACQUISITION, System.DateTime STUDYTRANSITIONDATETIME) {
                NETSUITELOGRow rowNETSUITELOGRow = ((NETSUITELOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LOGID,
                        STUDYINSTANCEUID,
                        ACCESSIONNUMBER,
                        TRANSACTIONTYPE,
                        FINISHTIME,
                        INSTITUTION,
                        PATIENTID,
                        ISSUEROFPATIENTID,
                        SCHEDULEDMODALITY,
                        SCHEDULEDBODYPART,
                        STATUS,
                        MULTIACQUISITION,
                        STUDYTRANSITIONDATETIME};
                rowNETSUITELOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNETSUITELOGRow);
                return rowNETSUITELOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITELOGRow FindByLOGID(int LOGID) {
                return ((NETSUITELOGRow)(this.Rows.Find(new object[] {
                            LOGID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NETSUITELOGDataTable cln = ((NETSUITELOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NETSUITELOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLOGID = base.Columns["LOGID"];
                this.columnSTUDYINSTANCEUID = base.Columns["STUDYINSTANCEUID"];
                this.columnACCESSIONNUMBER = base.Columns["ACCESSIONNUMBER"];
                this.columnTRANSACTIONTYPE = base.Columns["TRANSACTIONTYPE"];
                this.columnFINISHTIME = base.Columns["FINISHTIME"];
                this.columnINSTITUTION = base.Columns["INSTITUTION"];
                this.columnPATIENTID = base.Columns["PATIENTID"];
                this.columnISSUEROFPATIENTID = base.Columns["ISSUEROFPATIENTID"];
                this.columnSCHEDULEDMODALITY = base.Columns["SCHEDULEDMODALITY"];
                this.columnSCHEDULEDBODYPART = base.Columns["SCHEDULEDBODYPART"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnMULTIACQUISITION = base.Columns["MULTIACQUISITION"];
                this.columnSTUDYTRANSITIONDATETIME = base.Columns["STUDYTRANSITIONDATETIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLOGID = new global::System.Data.DataColumn("LOGID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGID);
                this.columnSTUDYINSTANCEUID = new global::System.Data.DataColumn("STUDYINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYINSTANCEUID);
                this.columnACCESSIONNUMBER = new global::System.Data.DataColumn("ACCESSIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSIONNUMBER);
                this.columnTRANSACTIONTYPE = new global::System.Data.DataColumn("TRANSACTIONTYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTIONTYPE);
                this.columnFINISHTIME = new global::System.Data.DataColumn("FINISHTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINISHTIME);
                this.columnINSTITUTION = new global::System.Data.DataColumn("INSTITUTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTITUTION);
                this.columnPATIENTID = new global::System.Data.DataColumn("PATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTID);
                this.columnISSUEROFPATIENTID = new global::System.Data.DataColumn("ISSUEROFPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUEROFPATIENTID);
                this.columnSCHEDULEDMODALITY = new global::System.Data.DataColumn("SCHEDULEDMODALITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHEDULEDMODALITY);
                this.columnSCHEDULEDBODYPART = new global::System.Data.DataColumn("SCHEDULEDBODYPART", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHEDULEDBODYPART);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnMULTIACQUISITION = new global::System.Data.DataColumn("MULTIACQUISITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMULTIACQUISITION);
                this.columnSTUDYTRANSITIONDATETIME = new global::System.Data.DataColumn("STUDYTRANSITIONDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYTRANSITIONDATETIME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLOGID}, true));
                this.columnLOGID.AllowDBNull = false;
                this.columnLOGID.Unique = true;
                this.columnSTUDYINSTANCEUID.MaxLength = 64;
                this.columnACCESSIONNUMBER.MaxLength = 16;
                this.columnINSTITUTION.MaxLength = 64;
                this.columnPATIENTID.MaxLength = 64;
                this.columnISSUEROFPATIENTID.MaxLength = 64;
                this.columnSCHEDULEDMODALITY.MaxLength = 64;
                this.columnSCHEDULEDBODYPART.MaxLength = 64;
                this.columnSTATUS.MaxLength = 16;
                this.columnMULTIACQUISITION.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITELOGRow NewNETSUITELOGRow() {
                return ((NETSUITELOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NETSUITELOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NETSUITELOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NETSUITELOGRowChanged != null)) {
                    this.NETSUITELOGRowChanged(this, new NETSUITELOGRowChangeEvent(((NETSUITELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NETSUITELOGRowChanging != null)) {
                    this.NETSUITELOGRowChanging(this, new NETSUITELOGRowChangeEvent(((NETSUITELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NETSUITELOGRowDeleted != null)) {
                    this.NETSUITELOGRowDeleted(this, new NETSUITELOGRowChangeEvent(((NETSUITELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NETSUITELOGRowDeleting != null)) {
                    this.NETSUITELOGRowDeleting(this, new NETSUITELOGRowChangeEvent(((NETSUITELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveNETSUITELOGRow(NETSUITELOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NETSUITELOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PATIENTDIRECTLOGDataTable : global::System.Data.TypedTableBase<PATIENTDIRECTLOGRow> {
            
            private global::System.Data.DataColumn columnINTERNALPATIENTID;
            
            private global::System.Data.DataColumn columnRECEIVEDDATETIME;
            
            private global::System.Data.DataColumn columnMESSAGEID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTDIRECTLOGDataTable() {
                this.TableName = "PATIENTDIRECTLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PATIENTDIRECTLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PATIENTDIRECTLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTERNALPATIENTIDColumn {
                get {
                    return this.columnINTERNALPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RECEIVEDDATETIMEColumn {
                get {
                    return this.columnRECEIVEDDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MESSAGEIDColumn {
                get {
                    return this.columnMESSAGEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTDIRECTLOGRow this[int index] {
                get {
                    return ((PATIENTDIRECTLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PATIENTDIRECTLOGRowChangeEventHandler PATIENTDIRECTLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PATIENTDIRECTLOGRowChangeEventHandler PATIENTDIRECTLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PATIENTDIRECTLOGRowChangeEventHandler PATIENTDIRECTLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PATIENTDIRECTLOGRowChangeEventHandler PATIENTDIRECTLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPATIENTDIRECTLOGRow(PATIENTDIRECTLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTDIRECTLOGRow AddPATIENTDIRECTLOGRow(int INTERNALPATIENTID, System.DateTime RECEIVEDDATETIME, int MESSAGEID) {
                PATIENTDIRECTLOGRow rowPATIENTDIRECTLOGRow = ((PATIENTDIRECTLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        INTERNALPATIENTID,
                        RECEIVEDDATETIME,
                        MESSAGEID};
                rowPATIENTDIRECTLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPATIENTDIRECTLOGRow);
                return rowPATIENTDIRECTLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTDIRECTLOGRow FindByINTERNALPATIENTIDRECEIVEDDATETIME(int INTERNALPATIENTID, System.DateTime RECEIVEDDATETIME) {
                return ((PATIENTDIRECTLOGRow)(this.Rows.Find(new object[] {
                            INTERNALPATIENTID,
                            RECEIVEDDATETIME})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PATIENTDIRECTLOGDataTable cln = ((PATIENTDIRECTLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PATIENTDIRECTLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnINTERNALPATIENTID = base.Columns["INTERNALPATIENTID"];
                this.columnRECEIVEDDATETIME = base.Columns["RECEIVEDDATETIME"];
                this.columnMESSAGEID = base.Columns["MESSAGEID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnINTERNALPATIENTID = new global::System.Data.DataColumn("INTERNALPATIENTID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERNALPATIENTID);
                this.columnRECEIVEDDATETIME = new global::System.Data.DataColumn("RECEIVEDDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIVEDDATETIME);
                this.columnMESSAGEID = new global::System.Data.DataColumn("MESSAGEID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMESSAGEID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnINTERNALPATIENTID,
                                this.columnRECEIVEDDATETIME}, true));
                this.columnINTERNALPATIENTID.AllowDBNull = false;
                this.columnRECEIVEDDATETIME.AllowDBNull = false;
                this.columnMESSAGEID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTDIRECTLOGRow NewPATIENTDIRECTLOGRow() {
                return ((PATIENTDIRECTLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PATIENTDIRECTLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PATIENTDIRECTLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PATIENTDIRECTLOGRowChanged != null)) {
                    this.PATIENTDIRECTLOGRowChanged(this, new PATIENTDIRECTLOGRowChangeEvent(((PATIENTDIRECTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PATIENTDIRECTLOGRowChanging != null)) {
                    this.PATIENTDIRECTLOGRowChanging(this, new PATIENTDIRECTLOGRowChangeEvent(((PATIENTDIRECTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PATIENTDIRECTLOGRowDeleted != null)) {
                    this.PATIENTDIRECTLOGRowDeleted(this, new PATIENTDIRECTLOGRowChangeEvent(((PATIENTDIRECTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PATIENTDIRECTLOGRowDeleting != null)) {
                    this.PATIENTDIRECTLOGRowDeleting(this, new PATIENTDIRECTLOGRowChangeEvent(((PATIENTDIRECTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePATIENTDIRECTLOGRow(PATIENTDIRECTLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PATIENTDIRECTLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PATIENTMERGELOGDataTable : global::System.Data.TypedTableBase<PATIENTMERGELOGRow> {
            
            private global::System.Data.DataColumn columnINTERNALPATIENTID;
            
            private global::System.Data.DataColumn columnOLDPATIENTID;
            
            private global::System.Data.DataColumn columnOLDISSUEROFPATIENTID;
            
            private global::System.Data.DataColumn columnMERGEDTIME;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTMERGELOGDataTable() {
                this.TableName = "PATIENTMERGELOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PATIENTMERGELOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PATIENTMERGELOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTERNALPATIENTIDColumn {
                get {
                    return this.columnINTERNALPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OLDPATIENTIDColumn {
                get {
                    return this.columnOLDPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OLDISSUEROFPATIENTIDColumn {
                get {
                    return this.columnOLDISSUEROFPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MERGEDTIMEColumn {
                get {
                    return this.columnMERGEDTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTMERGELOGRow this[int index] {
                get {
                    return ((PATIENTMERGELOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PATIENTMERGELOGRowChangeEventHandler PATIENTMERGELOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PATIENTMERGELOGRowChangeEventHandler PATIENTMERGELOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PATIENTMERGELOGRowChangeEventHandler PATIENTMERGELOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PATIENTMERGELOGRowChangeEventHandler PATIENTMERGELOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPATIENTMERGELOGRow(PATIENTMERGELOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTMERGELOGRow AddPATIENTMERGELOGRow(int INTERNALPATIENTID, string OLDPATIENTID, string OLDISSUEROFPATIENTID, System.DateTime MERGEDTIME, string USERNAME) {
                PATIENTMERGELOGRow rowPATIENTMERGELOGRow = ((PATIENTMERGELOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        INTERNALPATIENTID,
                        OLDPATIENTID,
                        OLDISSUEROFPATIENTID,
                        MERGEDTIME,
                        USERNAME};
                rowPATIENTMERGELOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPATIENTMERGELOGRow);
                return rowPATIENTMERGELOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTMERGELOGRow FindByINTERNALPATIENTID(int INTERNALPATIENTID) {
                return ((PATIENTMERGELOGRow)(this.Rows.Find(new object[] {
                            INTERNALPATIENTID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PATIENTMERGELOGDataTable cln = ((PATIENTMERGELOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PATIENTMERGELOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnINTERNALPATIENTID = base.Columns["INTERNALPATIENTID"];
                this.columnOLDPATIENTID = base.Columns["OLDPATIENTID"];
                this.columnOLDISSUEROFPATIENTID = base.Columns["OLDISSUEROFPATIENTID"];
                this.columnMERGEDTIME = base.Columns["MERGEDTIME"];
                this.columnUSERNAME = base.Columns["USERNAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnINTERNALPATIENTID = new global::System.Data.DataColumn("INTERNALPATIENTID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERNALPATIENTID);
                this.columnOLDPATIENTID = new global::System.Data.DataColumn("OLDPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLDPATIENTID);
                this.columnOLDISSUEROFPATIENTID = new global::System.Data.DataColumn("OLDISSUEROFPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLDISSUEROFPATIENTID);
                this.columnMERGEDTIME = new global::System.Data.DataColumn("MERGEDTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMERGEDTIME);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnINTERNALPATIENTID}, true));
                this.columnINTERNALPATIENTID.AllowDBNull = false;
                this.columnINTERNALPATIENTID.Unique = true;
                this.columnOLDPATIENTID.AllowDBNull = false;
                this.columnOLDPATIENTID.MaxLength = 64;
                this.columnOLDISSUEROFPATIENTID.AllowDBNull = false;
                this.columnOLDISSUEROFPATIENTID.MaxLength = 64;
                this.columnUSERNAME.MaxLength = 64;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTMERGELOGRow NewPATIENTMERGELOGRow() {
                return ((PATIENTMERGELOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PATIENTMERGELOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PATIENTMERGELOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PATIENTMERGELOGRowChanged != null)) {
                    this.PATIENTMERGELOGRowChanged(this, new PATIENTMERGELOGRowChangeEvent(((PATIENTMERGELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PATIENTMERGELOGRowChanging != null)) {
                    this.PATIENTMERGELOGRowChanging(this, new PATIENTMERGELOGRowChangeEvent(((PATIENTMERGELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PATIENTMERGELOGRowDeleted != null)) {
                    this.PATIENTMERGELOGRowDeleted(this, new PATIENTMERGELOGRowChangeEvent(((PATIENTMERGELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PATIENTMERGELOGRowDeleting != null)) {
                    this.PATIENTMERGELOGRowDeleting(this, new PATIENTMERGELOGRowChangeEvent(((PATIENTMERGELOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePATIENTMERGELOGRow(PATIENTMERGELOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PATIENTMERGELOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PRINTLOGDataTable : global::System.Data.TypedTableBase<PRINTLOGRow> {
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnTIMESTARTED;
            
            private global::System.Data.DataColumn columnTIMEFINISHED;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnNUMOFPRINT;
            
            private global::System.Data.DataColumn columnSERVICENAME;
            
            private global::System.Data.DataColumn columnPRINTJOBID;
            
            private global::System.Data.DataColumn columnPRINTPAGES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRINTLOGDataTable() {
                this.TableName = "PRINTLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PRINTLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PRINTLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMESTARTEDColumn {
                get {
                    return this.columnTIMESTARTED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMEFINISHEDColumn {
                get {
                    return this.columnTIMEFINISHED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMOFPRINTColumn {
                get {
                    return this.columnNUMOFPRINT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SERVICENAMEColumn {
                get {
                    return this.columnSERVICENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PRINTJOBIDColumn {
                get {
                    return this.columnPRINTJOBID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PRINTPAGESColumn {
                get {
                    return this.columnPRINTPAGES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRINTLOGRow this[int index] {
                get {
                    return ((PRINTLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRINTLOGRowChangeEventHandler PRINTLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRINTLOGRowChangeEventHandler PRINTLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRINTLOGRowChangeEventHandler PRINTLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRINTLOGRowChangeEventHandler PRINTLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPRINTLOGRow(PRINTLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRINTLOGRow AddPRINTLOGRow(int ENTRYID, System.DateTime TIMESTARTED, System.DateTime TIMEFINISHED, string USERNAME, int NUMOFPRINT, string SERVICENAME, int PRINTJOBID, int PRINTPAGES) {
                PRINTLOGRow rowPRINTLOGRow = ((PRINTLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ENTRYID,
                        TIMESTARTED,
                        TIMEFINISHED,
                        USERNAME,
                        NUMOFPRINT,
                        SERVICENAME,
                        PRINTJOBID,
                        PRINTPAGES};
                rowPRINTLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPRINTLOGRow);
                return rowPRINTLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRINTLOGRow FindByENTRYID(int ENTRYID) {
                return ((PRINTLOGRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PRINTLOGDataTable cln = ((PRINTLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PRINTLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnTIMESTARTED = base.Columns["TIMESTARTED"];
                this.columnTIMEFINISHED = base.Columns["TIMEFINISHED"];
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnNUMOFPRINT = base.Columns["NUMOFPRINT"];
                this.columnSERVICENAME = base.Columns["SERVICENAME"];
                this.columnPRINTJOBID = base.Columns["PRINTJOBID"];
                this.columnPRINTPAGES = base.Columns["PRINTPAGES"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnTIMESTARTED = new global::System.Data.DataColumn("TIMESTARTED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMESTARTED);
                this.columnTIMEFINISHED = new global::System.Data.DataColumn("TIMEFINISHED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMEFINISHED);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnNUMOFPRINT = new global::System.Data.DataColumn("NUMOFPRINT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMOFPRINT);
                this.columnSERVICENAME = new global::System.Data.DataColumn("SERVICENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICENAME);
                this.columnPRINTJOBID = new global::System.Data.DataColumn("PRINTJOBID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRINTJOBID);
                this.columnPRINTPAGES = new global::System.Data.DataColumn("PRINTPAGES", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRINTPAGES);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnTIMESTARTED.AllowDBNull = false;
                this.columnTIMEFINISHED.AllowDBNull = false;
                this.columnUSERNAME.AllowDBNull = false;
                this.columnUSERNAME.MaxLength = 64;
                this.columnNUMOFPRINT.AllowDBNull = false;
                this.columnSERVICENAME.MaxLength = 64;
                this.columnPRINTJOBID.AllowDBNull = false;
                this.columnPRINTPAGES.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRINTLOGRow NewPRINTLOGRow() {
                return ((PRINTLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PRINTLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PRINTLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PRINTLOGRowChanged != null)) {
                    this.PRINTLOGRowChanged(this, new PRINTLOGRowChangeEvent(((PRINTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PRINTLOGRowChanging != null)) {
                    this.PRINTLOGRowChanging(this, new PRINTLOGRowChangeEvent(((PRINTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PRINTLOGRowDeleted != null)) {
                    this.PRINTLOGRowDeleted(this, new PRINTLOGRowChangeEvent(((PRINTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PRINTLOGRowDeleting != null)) {
                    this.PRINTLOGRowDeleting(this, new PRINTLOGRowChangeEvent(((PRINTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePRINTLOGRow(PRINTLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PRINTLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PRRELEASEDataTable : global::System.Data.TypedTableBase<PRRELEASERow> {
            
            private global::System.Data.DataColumn columnTARGET;
            
            private global::System.Data.DataColumn columnVERNUM;
            
            private global::System.Data.DataColumn columnLASTUPDATED;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRRELEASEDataTable() {
                this.TableName = "PRRELEASE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PRRELEASEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PRRELEASEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TARGETColumn {
                get {
                    return this.columnTARGET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VERNUMColumn {
                get {
                    return this.columnVERNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LASTUPDATEDColumn {
                get {
                    return this.columnLASTUPDATED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRRELEASERow this[int index] {
                get {
                    return ((PRRELEASERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRRELEASERowChangeEventHandler PRRELEASERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRRELEASERowChangeEventHandler PRRELEASERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRRELEASERowChangeEventHandler PRRELEASERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRRELEASERowChangeEventHandler PRRELEASERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPRRELEASERow(PRRELEASERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRRELEASERow AddPRRELEASERow(string TARGET, int VERNUM, System.DateTime LASTUPDATED, string DESCRIPTION) {
                PRRELEASERow rowPRRELEASERow = ((PRRELEASERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TARGET,
                        VERNUM,
                        LASTUPDATED,
                        DESCRIPTION};
                rowPRRELEASERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPRRELEASERow);
                return rowPRRELEASERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRRELEASERow FindByTARGET(string TARGET) {
                return ((PRRELEASERow)(this.Rows.Find(new object[] {
                            TARGET})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PRRELEASEDataTable cln = ((PRRELEASEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PRRELEASEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTARGET = base.Columns["TARGET"];
                this.columnVERNUM = base.Columns["VERNUM"];
                this.columnLASTUPDATED = base.Columns["LASTUPDATED"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTARGET = new global::System.Data.DataColumn("TARGET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTARGET);
                this.columnVERNUM = new global::System.Data.DataColumn("VERNUM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERNUM);
                this.columnLASTUPDATED = new global::System.Data.DataColumn("LASTUPDATED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTUPDATED);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTARGET}, true));
                this.columnTARGET.AllowDBNull = false;
                this.columnTARGET.Unique = true;
                this.columnTARGET.MaxLength = 64;
                this.columnVERNUM.AllowDBNull = false;
                this.columnDESCRIPTION.MaxLength = 256;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRRELEASERow NewPRRELEASERow() {
                return ((PRRELEASERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PRRELEASERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PRRELEASERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PRRELEASERowChanged != null)) {
                    this.PRRELEASERowChanged(this, new PRRELEASERowChangeEvent(((PRRELEASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PRRELEASERowChanging != null)) {
                    this.PRRELEASERowChanging(this, new PRRELEASERowChangeEvent(((PRRELEASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PRRELEASERowDeleted != null)) {
                    this.PRRELEASERowDeleted(this, new PRRELEASERowChangeEvent(((PRRELEASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PRRELEASERowDeleting != null)) {
                    this.PRRELEASERowDeleting(this, new PRRELEASERowChangeEvent(((PRRELEASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePRRELEASERow(PRRELEASERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PRRELEASEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PRVERSIONDataTable : global::System.Data.TypedTableBase<PRVERSIONRow> {
            
            private global::System.Data.DataColumn columnVERNUM;
            
            private global::System.Data.DataColumn columnLASTUPDATED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRVERSIONDataTable() {
                this.TableName = "PRVERSION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PRVERSIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PRVERSIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VERNUMColumn {
                get {
                    return this.columnVERNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LASTUPDATEDColumn {
                get {
                    return this.columnLASTUPDATED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRVERSIONRow this[int index] {
                get {
                    return ((PRVERSIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRVERSIONRowChangeEventHandler PRVERSIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRVERSIONRowChangeEventHandler PRVERSIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRVERSIONRowChangeEventHandler PRVERSIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRVERSIONRowChangeEventHandler PRVERSIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPRVERSIONRow(PRVERSIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRVERSIONRow AddPRVERSIONRow(int VERNUM, System.DateTime LASTUPDATED) {
                PRVERSIONRow rowPRVERSIONRow = ((PRVERSIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VERNUM,
                        LASTUPDATED};
                rowPRVERSIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPRVERSIONRow);
                return rowPRVERSIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRVERSIONRow FindByVERNUM(int VERNUM) {
                return ((PRVERSIONRow)(this.Rows.Find(new object[] {
                            VERNUM})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PRVERSIONDataTable cln = ((PRVERSIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PRVERSIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnVERNUM = base.Columns["VERNUM"];
                this.columnLASTUPDATED = base.Columns["LASTUPDATED"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnVERNUM = new global::System.Data.DataColumn("VERNUM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERNUM);
                this.columnLASTUPDATED = new global::System.Data.DataColumn("LASTUPDATED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTUPDATED);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVERNUM}, true));
                this.columnVERNUM.AllowDBNull = false;
                this.columnVERNUM.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRVERSIONRow NewPRVERSIONRow() {
                return ((PRVERSIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PRVERSIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PRVERSIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PRVERSIONRowChanged != null)) {
                    this.PRVERSIONRowChanged(this, new PRVERSIONRowChangeEvent(((PRVERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PRVERSIONRowChanging != null)) {
                    this.PRVERSIONRowChanging(this, new PRVERSIONRowChangeEvent(((PRVERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PRVERSIONRowDeleted != null)) {
                    this.PRVERSIONRowDeleted(this, new PRVERSIONRowChangeEvent(((PRVERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PRVERSIONRowDeleting != null)) {
                    this.PRVERSIONRowDeleting(this, new PRVERSIONRowChangeEvent(((PRVERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePRVERSIONRow(PRVERSIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PRVERSIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RECEIVESTUDYLOGDataTable : global::System.Data.TypedTableBase<RECEIVESTUDYLOGRow> {
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnISSUEROFPATIENTID;
            
            private global::System.Data.DataColumn columnPATIENTID;
            
            private global::System.Data.DataColumn columnSTUDYINSTANCEUID;
            
            private global::System.Data.DataColumn columnACCESSIONNUMBER;
            
            private global::System.Data.DataColumn columnSERVICENAME;
            
            private global::System.Data.DataColumn columnTIMESTARTED;
            
            private global::System.Data.DataColumn columnTIMEFINISHED;
            
            private global::System.Data.DataColumn columnNUMOBJECTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RECEIVESTUDYLOGDataTable() {
                this.TableName = "RECEIVESTUDYLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RECEIVESTUDYLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RECEIVESTUDYLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ISSUEROFPATIENTIDColumn {
                get {
                    return this.columnISSUEROFPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTIDColumn {
                get {
                    return this.columnPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYINSTANCEUIDColumn {
                get {
                    return this.columnSTUDYINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSIONNUMBERColumn {
                get {
                    return this.columnACCESSIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SERVICENAMEColumn {
                get {
                    return this.columnSERVICENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMESTARTEDColumn {
                get {
                    return this.columnTIMESTARTED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMEFINISHEDColumn {
                get {
                    return this.columnTIMEFINISHED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMOBJECTSColumn {
                get {
                    return this.columnNUMOBJECTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RECEIVESTUDYLOGRow this[int index] {
                get {
                    return ((RECEIVESTUDYLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RECEIVESTUDYLOGRowChangeEventHandler RECEIVESTUDYLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RECEIVESTUDYLOGRowChangeEventHandler RECEIVESTUDYLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RECEIVESTUDYLOGRowChangeEventHandler RECEIVESTUDYLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RECEIVESTUDYLOGRowChangeEventHandler RECEIVESTUDYLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRECEIVESTUDYLOGRow(RECEIVESTUDYLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RECEIVESTUDYLOGRow AddRECEIVESTUDYLOGRow(int ENTRYID, string ISSUEROFPATIENTID, string PATIENTID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, string SERVICENAME, System.DateTime TIMESTARTED, System.DateTime TIMEFINISHED, int NUMOBJECTS) {
                RECEIVESTUDYLOGRow rowRECEIVESTUDYLOGRow = ((RECEIVESTUDYLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ENTRYID,
                        ISSUEROFPATIENTID,
                        PATIENTID,
                        STUDYINSTANCEUID,
                        ACCESSIONNUMBER,
                        SERVICENAME,
                        TIMESTARTED,
                        TIMEFINISHED,
                        NUMOBJECTS};
                rowRECEIVESTUDYLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRECEIVESTUDYLOGRow);
                return rowRECEIVESTUDYLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RECEIVESTUDYLOGRow FindByENTRYID(int ENTRYID) {
                return ((RECEIVESTUDYLOGRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RECEIVESTUDYLOGDataTable cln = ((RECEIVESTUDYLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RECEIVESTUDYLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnISSUEROFPATIENTID = base.Columns["ISSUEROFPATIENTID"];
                this.columnPATIENTID = base.Columns["PATIENTID"];
                this.columnSTUDYINSTANCEUID = base.Columns["STUDYINSTANCEUID"];
                this.columnACCESSIONNUMBER = base.Columns["ACCESSIONNUMBER"];
                this.columnSERVICENAME = base.Columns["SERVICENAME"];
                this.columnTIMESTARTED = base.Columns["TIMESTARTED"];
                this.columnTIMEFINISHED = base.Columns["TIMEFINISHED"];
                this.columnNUMOBJECTS = base.Columns["NUMOBJECTS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnISSUEROFPATIENTID = new global::System.Data.DataColumn("ISSUEROFPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUEROFPATIENTID);
                this.columnPATIENTID = new global::System.Data.DataColumn("PATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTID);
                this.columnSTUDYINSTANCEUID = new global::System.Data.DataColumn("STUDYINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYINSTANCEUID);
                this.columnACCESSIONNUMBER = new global::System.Data.DataColumn("ACCESSIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSIONNUMBER);
                this.columnSERVICENAME = new global::System.Data.DataColumn("SERVICENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICENAME);
                this.columnTIMESTARTED = new global::System.Data.DataColumn("TIMESTARTED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMESTARTED);
                this.columnTIMEFINISHED = new global::System.Data.DataColumn("TIMEFINISHED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMEFINISHED);
                this.columnNUMOBJECTS = new global::System.Data.DataColumn("NUMOBJECTS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMOBJECTS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnISSUEROFPATIENTID.AllowDBNull = false;
                this.columnISSUEROFPATIENTID.MaxLength = 64;
                this.columnPATIENTID.AllowDBNull = false;
                this.columnPATIENTID.MaxLength = 64;
                this.columnSTUDYINSTANCEUID.AllowDBNull = false;
                this.columnSTUDYINSTANCEUID.MaxLength = 64;
                this.columnACCESSIONNUMBER.AllowDBNull = false;
                this.columnACCESSIONNUMBER.MaxLength = 16;
                this.columnSERVICENAME.MaxLength = 64;
                this.columnTIMESTARTED.AllowDBNull = false;
                this.columnTIMEFINISHED.AllowDBNull = false;
                this.columnNUMOBJECTS.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RECEIVESTUDYLOGRow NewRECEIVESTUDYLOGRow() {
                return ((RECEIVESTUDYLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RECEIVESTUDYLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RECEIVESTUDYLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RECEIVESTUDYLOGRowChanged != null)) {
                    this.RECEIVESTUDYLOGRowChanged(this, new RECEIVESTUDYLOGRowChangeEvent(((RECEIVESTUDYLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RECEIVESTUDYLOGRowChanging != null)) {
                    this.RECEIVESTUDYLOGRowChanging(this, new RECEIVESTUDYLOGRowChangeEvent(((RECEIVESTUDYLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RECEIVESTUDYLOGRowDeleted != null)) {
                    this.RECEIVESTUDYLOGRowDeleted(this, new RECEIVESTUDYLOGRowChangeEvent(((RECEIVESTUDYLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RECEIVESTUDYLOGRowDeleting != null)) {
                    this.RECEIVESTUDYLOGRowDeleting(this, new RECEIVESTUDYLOGRowChangeEvent(((RECEIVESTUDYLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRECEIVESTUDYLOGRow(RECEIVESTUDYLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RECEIVESTUDYLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class REFERRALINBOXLOGDataTable : global::System.Data.TypedTableBase<REFERRALINBOXLOGRow> {
            
            private global::System.Data.DataColumn columnLOGID;
            
            private global::System.Data.DataColumn columnPATIENTFIRSTNAME;
            
            private global::System.Data.DataColumn columnPATIENTLASTNAME;
            
            private global::System.Data.DataColumn columnLOGDATETIME;
            
            private global::System.Data.DataColumn columnPATIENTPHONE;
            
            private global::System.Data.DataColumn columnREQUESTEDDATETIME;
            
            private global::System.Data.DataColumn columnAUTHORIZATIONNUMBER;
            
            private global::System.Data.DataColumn columnFACILITY;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnUSERFIRSTNAME;
            
            private global::System.Data.DataColumn columnUSERLASTNAME;
            
            private global::System.Data.DataColumn columnSTUDYTYPE;
            
            private global::System.Data.DataColumn columnACTIONTYPE;
            
            private global::System.Data.DataColumn columnCANCELLATIONUSER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REFERRALINBOXLOGDataTable() {
                this.TableName = "REFERRALINBOXLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal REFERRALINBOXLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected REFERRALINBOXLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOGIDColumn {
                get {
                    return this.columnLOGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTFIRSTNAMEColumn {
                get {
                    return this.columnPATIENTFIRSTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTLASTNAMEColumn {
                get {
                    return this.columnPATIENTLASTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOGDATETIMEColumn {
                get {
                    return this.columnLOGDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTPHONEColumn {
                get {
                    return this.columnPATIENTPHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REQUESTEDDATETIMEColumn {
                get {
                    return this.columnREQUESTEDDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AUTHORIZATIONNUMBERColumn {
                get {
                    return this.columnAUTHORIZATIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FACILITYColumn {
                get {
                    return this.columnFACILITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERFIRSTNAMEColumn {
                get {
                    return this.columnUSERFIRSTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERLASTNAMEColumn {
                get {
                    return this.columnUSERLASTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYTYPEColumn {
                get {
                    return this.columnSTUDYTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACTIONTYPEColumn {
                get {
                    return this.columnACTIONTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CANCELLATIONUSERColumn {
                get {
                    return this.columnCANCELLATIONUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REFERRALINBOXLOGRow this[int index] {
                get {
                    return ((REFERRALINBOXLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REFERRALINBOXLOGRowChangeEventHandler REFERRALINBOXLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REFERRALINBOXLOGRowChangeEventHandler REFERRALINBOXLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REFERRALINBOXLOGRowChangeEventHandler REFERRALINBOXLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REFERRALINBOXLOGRowChangeEventHandler REFERRALINBOXLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddREFERRALINBOXLOGRow(REFERRALINBOXLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REFERRALINBOXLOGRow AddREFERRALINBOXLOGRow(int LOGID, string PATIENTFIRSTNAME, string PATIENTLASTNAME, System.DateTime LOGDATETIME, string PATIENTPHONE, System.DateTime REQUESTEDDATETIME, string AUTHORIZATIONNUMBER, string FACILITY, string USERNAME, string USERFIRSTNAME, string USERLASTNAME, string STUDYTYPE, int ACTIONTYPE, int CANCELLATIONUSER) {
                REFERRALINBOXLOGRow rowREFERRALINBOXLOGRow = ((REFERRALINBOXLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LOGID,
                        PATIENTFIRSTNAME,
                        PATIENTLASTNAME,
                        LOGDATETIME,
                        PATIENTPHONE,
                        REQUESTEDDATETIME,
                        AUTHORIZATIONNUMBER,
                        FACILITY,
                        USERNAME,
                        USERFIRSTNAME,
                        USERLASTNAME,
                        STUDYTYPE,
                        ACTIONTYPE,
                        CANCELLATIONUSER};
                rowREFERRALINBOXLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowREFERRALINBOXLOGRow);
                return rowREFERRALINBOXLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REFERRALINBOXLOGRow FindByLOGID(int LOGID) {
                return ((REFERRALINBOXLOGRow)(this.Rows.Find(new object[] {
                            LOGID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                REFERRALINBOXLOGDataTable cln = ((REFERRALINBOXLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new REFERRALINBOXLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLOGID = base.Columns["LOGID"];
                this.columnPATIENTFIRSTNAME = base.Columns["PATIENTFIRSTNAME"];
                this.columnPATIENTLASTNAME = base.Columns["PATIENTLASTNAME"];
                this.columnLOGDATETIME = base.Columns["LOGDATETIME"];
                this.columnPATIENTPHONE = base.Columns["PATIENTPHONE"];
                this.columnREQUESTEDDATETIME = base.Columns["REQUESTEDDATETIME"];
                this.columnAUTHORIZATIONNUMBER = base.Columns["AUTHORIZATIONNUMBER"];
                this.columnFACILITY = base.Columns["FACILITY"];
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnUSERFIRSTNAME = base.Columns["USERFIRSTNAME"];
                this.columnUSERLASTNAME = base.Columns["USERLASTNAME"];
                this.columnSTUDYTYPE = base.Columns["STUDYTYPE"];
                this.columnACTIONTYPE = base.Columns["ACTIONTYPE"];
                this.columnCANCELLATIONUSER = base.Columns["CANCELLATIONUSER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLOGID = new global::System.Data.DataColumn("LOGID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGID);
                this.columnPATIENTFIRSTNAME = new global::System.Data.DataColumn("PATIENTFIRSTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTFIRSTNAME);
                this.columnPATIENTLASTNAME = new global::System.Data.DataColumn("PATIENTLASTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTLASTNAME);
                this.columnLOGDATETIME = new global::System.Data.DataColumn("LOGDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGDATETIME);
                this.columnPATIENTPHONE = new global::System.Data.DataColumn("PATIENTPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTPHONE);
                this.columnREQUESTEDDATETIME = new global::System.Data.DataColumn("REQUESTEDDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREQUESTEDDATETIME);
                this.columnAUTHORIZATIONNUMBER = new global::System.Data.DataColumn("AUTHORIZATIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTHORIZATIONNUMBER);
                this.columnFACILITY = new global::System.Data.DataColumn("FACILITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFACILITY);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnUSERFIRSTNAME = new global::System.Data.DataColumn("USERFIRSTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERFIRSTNAME);
                this.columnUSERLASTNAME = new global::System.Data.DataColumn("USERLASTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERLASTNAME);
                this.columnSTUDYTYPE = new global::System.Data.DataColumn("STUDYTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYTYPE);
                this.columnACTIONTYPE = new global::System.Data.DataColumn("ACTIONTYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIONTYPE);
                this.columnCANCELLATIONUSER = new global::System.Data.DataColumn("CANCELLATIONUSER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCELLATIONUSER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLOGID}, true));
                this.columnLOGID.AllowDBNull = false;
                this.columnLOGID.Unique = true;
                this.columnPATIENTFIRSTNAME.MaxLength = 64;
                this.columnPATIENTLASTNAME.MaxLength = 64;
                this.columnPATIENTPHONE.MaxLength = 64;
                this.columnAUTHORIZATIONNUMBER.MaxLength = 64;
                this.columnFACILITY.MaxLength = 64;
                this.columnUSERNAME.MaxLength = 64;
                this.columnUSERFIRSTNAME.MaxLength = 64;
                this.columnUSERLASTNAME.MaxLength = 64;
                this.columnSTUDYTYPE.MaxLength = 64;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REFERRALINBOXLOGRow NewREFERRALINBOXLOGRow() {
                return ((REFERRALINBOXLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new REFERRALINBOXLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(REFERRALINBOXLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.REFERRALINBOXLOGRowChanged != null)) {
                    this.REFERRALINBOXLOGRowChanged(this, new REFERRALINBOXLOGRowChangeEvent(((REFERRALINBOXLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.REFERRALINBOXLOGRowChanging != null)) {
                    this.REFERRALINBOXLOGRowChanging(this, new REFERRALINBOXLOGRowChangeEvent(((REFERRALINBOXLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.REFERRALINBOXLOGRowDeleted != null)) {
                    this.REFERRALINBOXLOGRowDeleted(this, new REFERRALINBOXLOGRowChangeEvent(((REFERRALINBOXLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.REFERRALINBOXLOGRowDeleting != null)) {
                    this.REFERRALINBOXLOGRowDeleting(this, new REFERRALINBOXLOGRowChangeEvent(((REFERRALINBOXLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveREFERRALINBOXLOGRow(REFERRALINBOXLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "REFERRALINBOXLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class REQUESTFAILLOGDataTable : global::System.Data.TypedTableBase<REQUESTFAILLOGRow> {
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnTIMESTARTED;
            
            private global::System.Data.DataColumn columnTIMEFAILED;
            
            private global::System.Data.DataColumn columnISSUEROFPATIENTID;
            
            private global::System.Data.DataColumn columnPATIENTID;
            
            private global::System.Data.DataColumn columnSTUDYINSTANCEUID;
            
            private global::System.Data.DataColumn columnACCESSIONNUMBER;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnSERVICENAME;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnPARTIALFAILURE;
            
            private global::System.Data.DataColumn columnNUMFAILURES;
            
            private global::System.Data.DataColumn columnAUTOQUERY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTFAILLOGDataTable() {
                this.TableName = "REQUESTFAILLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal REQUESTFAILLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected REQUESTFAILLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMESTARTEDColumn {
                get {
                    return this.columnTIMESTARTED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMEFAILEDColumn {
                get {
                    return this.columnTIMEFAILED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ISSUEROFPATIENTIDColumn {
                get {
                    return this.columnISSUEROFPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTIDColumn {
                get {
                    return this.columnPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYINSTANCEUIDColumn {
                get {
                    return this.columnSTUDYINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSIONNUMBERColumn {
                get {
                    return this.columnACCESSIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SERVICENAMEColumn {
                get {
                    return this.columnSERVICENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PARTIALFAILUREColumn {
                get {
                    return this.columnPARTIALFAILURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMFAILURESColumn {
                get {
                    return this.columnNUMFAILURES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AUTOQUERYColumn {
                get {
                    return this.columnAUTOQUERY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTFAILLOGRow this[int index] {
                get {
                    return ((REQUESTFAILLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REQUESTFAILLOGRowChangeEventHandler REQUESTFAILLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REQUESTFAILLOGRowChangeEventHandler REQUESTFAILLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REQUESTFAILLOGRowChangeEventHandler REQUESTFAILLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REQUESTFAILLOGRowChangeEventHandler REQUESTFAILLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddREQUESTFAILLOGRow(REQUESTFAILLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTFAILLOGRow AddREQUESTFAILLOGRow(int ENTRYID, System.DateTime TIMESTARTED, System.DateTime TIMEFAILED, string ISSUEROFPATIENTID, string PATIENTID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, string USERNAME, string SERVICENAME, string DESCRIPTION, string PARTIALFAILURE, int NUMFAILURES, string AUTOQUERY) {
                REQUESTFAILLOGRow rowREQUESTFAILLOGRow = ((REQUESTFAILLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ENTRYID,
                        TIMESTARTED,
                        TIMEFAILED,
                        ISSUEROFPATIENTID,
                        PATIENTID,
                        STUDYINSTANCEUID,
                        ACCESSIONNUMBER,
                        USERNAME,
                        SERVICENAME,
                        DESCRIPTION,
                        PARTIALFAILURE,
                        NUMFAILURES,
                        AUTOQUERY};
                rowREQUESTFAILLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowREQUESTFAILLOGRow);
                return rowREQUESTFAILLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTFAILLOGRow FindByENTRYID(int ENTRYID) {
                return ((REQUESTFAILLOGRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                REQUESTFAILLOGDataTable cln = ((REQUESTFAILLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new REQUESTFAILLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnTIMESTARTED = base.Columns["TIMESTARTED"];
                this.columnTIMEFAILED = base.Columns["TIMEFAILED"];
                this.columnISSUEROFPATIENTID = base.Columns["ISSUEROFPATIENTID"];
                this.columnPATIENTID = base.Columns["PATIENTID"];
                this.columnSTUDYINSTANCEUID = base.Columns["STUDYINSTANCEUID"];
                this.columnACCESSIONNUMBER = base.Columns["ACCESSIONNUMBER"];
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnSERVICENAME = base.Columns["SERVICENAME"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnPARTIALFAILURE = base.Columns["PARTIALFAILURE"];
                this.columnNUMFAILURES = base.Columns["NUMFAILURES"];
                this.columnAUTOQUERY = base.Columns["AUTOQUERY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnTIMESTARTED = new global::System.Data.DataColumn("TIMESTARTED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMESTARTED);
                this.columnTIMEFAILED = new global::System.Data.DataColumn("TIMEFAILED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMEFAILED);
                this.columnISSUEROFPATIENTID = new global::System.Data.DataColumn("ISSUEROFPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUEROFPATIENTID);
                this.columnPATIENTID = new global::System.Data.DataColumn("PATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTID);
                this.columnSTUDYINSTANCEUID = new global::System.Data.DataColumn("STUDYINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYINSTANCEUID);
                this.columnACCESSIONNUMBER = new global::System.Data.DataColumn("ACCESSIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSIONNUMBER);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnSERVICENAME = new global::System.Data.DataColumn("SERVICENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICENAME);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnPARTIALFAILURE = new global::System.Data.DataColumn("PARTIALFAILURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTIALFAILURE);
                this.columnNUMFAILURES = new global::System.Data.DataColumn("NUMFAILURES", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMFAILURES);
                this.columnAUTOQUERY = new global::System.Data.DataColumn("AUTOQUERY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTOQUERY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnTIMESTARTED.AllowDBNull = false;
                this.columnTIMEFAILED.AllowDBNull = false;
                this.columnISSUEROFPATIENTID.AllowDBNull = false;
                this.columnISSUEROFPATIENTID.MaxLength = 64;
                this.columnPATIENTID.AllowDBNull = false;
                this.columnPATIENTID.MaxLength = 64;
                this.columnSTUDYINSTANCEUID.AllowDBNull = false;
                this.columnSTUDYINSTANCEUID.MaxLength = 64;
                this.columnACCESSIONNUMBER.AllowDBNull = false;
                this.columnACCESSIONNUMBER.MaxLength = 16;
                this.columnUSERNAME.AllowDBNull = false;
                this.columnUSERNAME.MaxLength = 64;
                this.columnSERVICENAME.MaxLength = 64;
                this.columnDESCRIPTION.MaxLength = 255;
                this.columnPARTIALFAILURE.AllowDBNull = false;
                this.columnPARTIALFAILURE.MaxLength = 1;
                this.columnNUMFAILURES.AllowDBNull = false;
                this.columnAUTOQUERY.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTFAILLOGRow NewREQUESTFAILLOGRow() {
                return ((REQUESTFAILLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new REQUESTFAILLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(REQUESTFAILLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.REQUESTFAILLOGRowChanged != null)) {
                    this.REQUESTFAILLOGRowChanged(this, new REQUESTFAILLOGRowChangeEvent(((REQUESTFAILLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.REQUESTFAILLOGRowChanging != null)) {
                    this.REQUESTFAILLOGRowChanging(this, new REQUESTFAILLOGRowChangeEvent(((REQUESTFAILLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.REQUESTFAILLOGRowDeleted != null)) {
                    this.REQUESTFAILLOGRowDeleted(this, new REQUESTFAILLOGRowChangeEvent(((REQUESTFAILLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.REQUESTFAILLOGRowDeleting != null)) {
                    this.REQUESTFAILLOGRowDeleting(this, new REQUESTFAILLOGRowChangeEvent(((REQUESTFAILLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveREQUESTFAILLOGRow(REQUESTFAILLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "REQUESTFAILLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class REQUESTLOGDataTable : global::System.Data.TypedTableBase<REQUESTLOGRow> {
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnTIMESTARTED;
            
            private global::System.Data.DataColumn columnTIMEFINISHED;
            
            private global::System.Data.DataColumn columnISSUEROFPATIENTID;
            
            private global::System.Data.DataColumn columnPATIENTID;
            
            private global::System.Data.DataColumn columnSTUDYINSTANCEUID;
            
            private global::System.Data.DataColumn columnACCESSIONNUMBER;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnSERVICENAME;
            
            private global::System.Data.DataColumn columnAUTOQUERY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTLOGDataTable() {
                this.TableName = "REQUESTLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal REQUESTLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected REQUESTLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMESTARTEDColumn {
                get {
                    return this.columnTIMESTARTED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMEFINISHEDColumn {
                get {
                    return this.columnTIMEFINISHED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ISSUEROFPATIENTIDColumn {
                get {
                    return this.columnISSUEROFPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTIDColumn {
                get {
                    return this.columnPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYINSTANCEUIDColumn {
                get {
                    return this.columnSTUDYINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSIONNUMBERColumn {
                get {
                    return this.columnACCESSIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SERVICENAMEColumn {
                get {
                    return this.columnSERVICENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AUTOQUERYColumn {
                get {
                    return this.columnAUTOQUERY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTLOGRow this[int index] {
                get {
                    return ((REQUESTLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REQUESTLOGRowChangeEventHandler REQUESTLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REQUESTLOGRowChangeEventHandler REQUESTLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REQUESTLOGRowChangeEventHandler REQUESTLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REQUESTLOGRowChangeEventHandler REQUESTLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddREQUESTLOGRow(REQUESTLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTLOGRow AddREQUESTLOGRow(int ENTRYID, System.DateTime TIMESTARTED, System.DateTime TIMEFINISHED, string ISSUEROFPATIENTID, string PATIENTID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, string USERNAME, string SERVICENAME, string AUTOQUERY) {
                REQUESTLOGRow rowREQUESTLOGRow = ((REQUESTLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ENTRYID,
                        TIMESTARTED,
                        TIMEFINISHED,
                        ISSUEROFPATIENTID,
                        PATIENTID,
                        STUDYINSTANCEUID,
                        ACCESSIONNUMBER,
                        USERNAME,
                        SERVICENAME,
                        AUTOQUERY};
                rowREQUESTLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowREQUESTLOGRow);
                return rowREQUESTLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTLOGRow FindByENTRYID(int ENTRYID) {
                return ((REQUESTLOGRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                REQUESTLOGDataTable cln = ((REQUESTLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new REQUESTLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnTIMESTARTED = base.Columns["TIMESTARTED"];
                this.columnTIMEFINISHED = base.Columns["TIMEFINISHED"];
                this.columnISSUEROFPATIENTID = base.Columns["ISSUEROFPATIENTID"];
                this.columnPATIENTID = base.Columns["PATIENTID"];
                this.columnSTUDYINSTANCEUID = base.Columns["STUDYINSTANCEUID"];
                this.columnACCESSIONNUMBER = base.Columns["ACCESSIONNUMBER"];
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnSERVICENAME = base.Columns["SERVICENAME"];
                this.columnAUTOQUERY = base.Columns["AUTOQUERY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnTIMESTARTED = new global::System.Data.DataColumn("TIMESTARTED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMESTARTED);
                this.columnTIMEFINISHED = new global::System.Data.DataColumn("TIMEFINISHED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMEFINISHED);
                this.columnISSUEROFPATIENTID = new global::System.Data.DataColumn("ISSUEROFPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUEROFPATIENTID);
                this.columnPATIENTID = new global::System.Data.DataColumn("PATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTID);
                this.columnSTUDYINSTANCEUID = new global::System.Data.DataColumn("STUDYINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYINSTANCEUID);
                this.columnACCESSIONNUMBER = new global::System.Data.DataColumn("ACCESSIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSIONNUMBER);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnSERVICENAME = new global::System.Data.DataColumn("SERVICENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICENAME);
                this.columnAUTOQUERY = new global::System.Data.DataColumn("AUTOQUERY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTOQUERY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnTIMESTARTED.AllowDBNull = false;
                this.columnTIMEFINISHED.AllowDBNull = false;
                this.columnISSUEROFPATIENTID.AllowDBNull = false;
                this.columnISSUEROFPATIENTID.MaxLength = 64;
                this.columnPATIENTID.AllowDBNull = false;
                this.columnPATIENTID.MaxLength = 64;
                this.columnSTUDYINSTANCEUID.AllowDBNull = false;
                this.columnSTUDYINSTANCEUID.MaxLength = 64;
                this.columnACCESSIONNUMBER.AllowDBNull = false;
                this.columnACCESSIONNUMBER.MaxLength = 16;
                this.columnUSERNAME.AllowDBNull = false;
                this.columnUSERNAME.MaxLength = 64;
                this.columnSERVICENAME.MaxLength = 64;
                this.columnAUTOQUERY.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTLOGRow NewREQUESTLOGRow() {
                return ((REQUESTLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new REQUESTLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(REQUESTLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.REQUESTLOGRowChanged != null)) {
                    this.REQUESTLOGRowChanged(this, new REQUESTLOGRowChangeEvent(((REQUESTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.REQUESTLOGRowChanging != null)) {
                    this.REQUESTLOGRowChanging(this, new REQUESTLOGRowChangeEvent(((REQUESTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.REQUESTLOGRowDeleted != null)) {
                    this.REQUESTLOGRowDeleted(this, new REQUESTLOGRowChangeEvent(((REQUESTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.REQUESTLOGRowDeleting != null)) {
                    this.REQUESTLOGRowDeleting(this, new REQUESTLOGRowChangeEvent(((REQUESTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveREQUESTLOGRow(REQUESTLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "REQUESTLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RETRIEVESTUDYLOGDataTable : global::System.Data.TypedTableBase<RETRIEVESTUDYLOGRow> {
            
            private global::System.Data.DataColumn columnADDEDID;
            
            private global::System.Data.DataColumn columnSTUDYINSTANCEUID;
            
            private global::System.Data.DataColumn columnSTUDYDATETIME;
            
            private global::System.Data.DataColumn columnFINISHTIME;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnNUMOBJECTS;
            
            private global::System.Data.DataColumn columnACCESSIONNUMBER;
            
            private global::System.Data.DataColumn columnPATIENTID;
            
            private global::System.Data.DataColumn columnISSUEROFPATIENTID;
            
            private global::System.Data.DataColumn columnFIRSTNAME;
            
            private global::System.Data.DataColumn columnLASTNAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RETRIEVESTUDYLOGDataTable() {
                this.TableName = "RETRIEVESTUDYLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RETRIEVESTUDYLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RETRIEVESTUDYLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADDEDIDColumn {
                get {
                    return this.columnADDEDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYINSTANCEUIDColumn {
                get {
                    return this.columnSTUDYINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYDATETIMEColumn {
                get {
                    return this.columnSTUDYDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FINISHTIMEColumn {
                get {
                    return this.columnFINISHTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMOBJECTSColumn {
                get {
                    return this.columnNUMOBJECTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSIONNUMBERColumn {
                get {
                    return this.columnACCESSIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTIDColumn {
                get {
                    return this.columnPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ISSUEROFPATIENTIDColumn {
                get {
                    return this.columnISSUEROFPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIRSTNAMEColumn {
                get {
                    return this.columnFIRSTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LASTNAMEColumn {
                get {
                    return this.columnLASTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RETRIEVESTUDYLOGRow this[int index] {
                get {
                    return ((RETRIEVESTUDYLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RETRIEVESTUDYLOGRowChangeEventHandler RETRIEVESTUDYLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RETRIEVESTUDYLOGRowChangeEventHandler RETRIEVESTUDYLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RETRIEVESTUDYLOGRowChangeEventHandler RETRIEVESTUDYLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RETRIEVESTUDYLOGRowChangeEventHandler RETRIEVESTUDYLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRETRIEVESTUDYLOGRow(RETRIEVESTUDYLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RETRIEVESTUDYLOGRow AddRETRIEVESTUDYLOGRow(int ADDEDID, string STUDYINSTANCEUID, System.DateTime STUDYDATETIME, System.DateTime FINISHTIME, int STATUS, int NUMOBJECTS, string ACCESSIONNUMBER, string PATIENTID, string ISSUEROFPATIENTID, string FIRSTNAME, string LASTNAME) {
                RETRIEVESTUDYLOGRow rowRETRIEVESTUDYLOGRow = ((RETRIEVESTUDYLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ADDEDID,
                        STUDYINSTANCEUID,
                        STUDYDATETIME,
                        FINISHTIME,
                        STATUS,
                        NUMOBJECTS,
                        ACCESSIONNUMBER,
                        PATIENTID,
                        ISSUEROFPATIENTID,
                        FIRSTNAME,
                        LASTNAME};
                rowRETRIEVESTUDYLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRETRIEVESTUDYLOGRow);
                return rowRETRIEVESTUDYLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RETRIEVESTUDYLOGRow FindByADDEDID(int ADDEDID) {
                return ((RETRIEVESTUDYLOGRow)(this.Rows.Find(new object[] {
                            ADDEDID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RETRIEVESTUDYLOGDataTable cln = ((RETRIEVESTUDYLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RETRIEVESTUDYLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnADDEDID = base.Columns["ADDEDID"];
                this.columnSTUDYINSTANCEUID = base.Columns["STUDYINSTANCEUID"];
                this.columnSTUDYDATETIME = base.Columns["STUDYDATETIME"];
                this.columnFINISHTIME = base.Columns["FINISHTIME"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnNUMOBJECTS = base.Columns["NUMOBJECTS"];
                this.columnACCESSIONNUMBER = base.Columns["ACCESSIONNUMBER"];
                this.columnPATIENTID = base.Columns["PATIENTID"];
                this.columnISSUEROFPATIENTID = base.Columns["ISSUEROFPATIENTID"];
                this.columnFIRSTNAME = base.Columns["FIRSTNAME"];
                this.columnLASTNAME = base.Columns["LASTNAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnADDEDID = new global::System.Data.DataColumn("ADDEDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDEDID);
                this.columnSTUDYINSTANCEUID = new global::System.Data.DataColumn("STUDYINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYINSTANCEUID);
                this.columnSTUDYDATETIME = new global::System.Data.DataColumn("STUDYDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYDATETIME);
                this.columnFINISHTIME = new global::System.Data.DataColumn("FINISHTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINISHTIME);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnNUMOBJECTS = new global::System.Data.DataColumn("NUMOBJECTS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMOBJECTS);
                this.columnACCESSIONNUMBER = new global::System.Data.DataColumn("ACCESSIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSIONNUMBER);
                this.columnPATIENTID = new global::System.Data.DataColumn("PATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTID);
                this.columnISSUEROFPATIENTID = new global::System.Data.DataColumn("ISSUEROFPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUEROFPATIENTID);
                this.columnFIRSTNAME = new global::System.Data.DataColumn("FIRSTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIRSTNAME);
                this.columnLASTNAME = new global::System.Data.DataColumn("LASTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTNAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnADDEDID}, true));
                this.columnADDEDID.AllowDBNull = false;
                this.columnADDEDID.Unique = true;
                this.columnSTUDYINSTANCEUID.AllowDBNull = false;
                this.columnSTUDYINSTANCEUID.MaxLength = 64;
                this.columnACCESSIONNUMBER.MaxLength = 16;
                this.columnPATIENTID.MaxLength = 64;
                this.columnISSUEROFPATIENTID.MaxLength = 64;
                this.columnFIRSTNAME.MaxLength = 64;
                this.columnLASTNAME.MaxLength = 64;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RETRIEVESTUDYLOGRow NewRETRIEVESTUDYLOGRow() {
                return ((RETRIEVESTUDYLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RETRIEVESTUDYLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RETRIEVESTUDYLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RETRIEVESTUDYLOGRowChanged != null)) {
                    this.RETRIEVESTUDYLOGRowChanged(this, new RETRIEVESTUDYLOGRowChangeEvent(((RETRIEVESTUDYLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RETRIEVESTUDYLOGRowChanging != null)) {
                    this.RETRIEVESTUDYLOGRowChanging(this, new RETRIEVESTUDYLOGRowChangeEvent(((RETRIEVESTUDYLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RETRIEVESTUDYLOGRowDeleted != null)) {
                    this.RETRIEVESTUDYLOGRowDeleted(this, new RETRIEVESTUDYLOGRowChangeEvent(((RETRIEVESTUDYLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RETRIEVESTUDYLOGRowDeleting != null)) {
                    this.RETRIEVESTUDYLOGRowDeleting(this, new RETRIEVESTUDYLOGRowChangeEvent(((RETRIEVESTUDYLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRETRIEVESTUDYLOGRow(RETRIEVESTUDYLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RETRIEVESTUDYLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RPTEXPORTLOGDataTable : global::System.Data.TypedTableBase<RPTEXPORTLOGRow> {
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnEXPORTID;
            
            private global::System.Data.DataColumn columnSOPINSTANCEUID;
            
            private global::System.Data.DataColumn columnACCESSIONNUMBER;
            
            private global::System.Data.DataColumn columnPATIENTID;
            
            private global::System.Data.DataColumn columnISSUEROFPATIENTID;
            
            private global::System.Data.DataColumn columnTIMECOMPLETED;
            
            private global::System.Data.DataColumn columnEXPORTEDFILEURL;
            
            private global::System.Data.DataColumn columnFACILITYNAME;
            
            private global::System.Data.DataColumn columnEXPORTTYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RPTEXPORTLOGDataTable() {
                this.TableName = "RPTEXPORTLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RPTEXPORTLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RPTEXPORTLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPORTIDColumn {
                get {
                    return this.columnEXPORTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SOPINSTANCEUIDColumn {
                get {
                    return this.columnSOPINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSIONNUMBERColumn {
                get {
                    return this.columnACCESSIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTIDColumn {
                get {
                    return this.columnPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ISSUEROFPATIENTIDColumn {
                get {
                    return this.columnISSUEROFPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMECOMPLETEDColumn {
                get {
                    return this.columnTIMECOMPLETED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPORTEDFILEURLColumn {
                get {
                    return this.columnEXPORTEDFILEURL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FACILITYNAMEColumn {
                get {
                    return this.columnFACILITYNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPORTTYPEColumn {
                get {
                    return this.columnEXPORTTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RPTEXPORTLOGRow this[int index] {
                get {
                    return ((RPTEXPORTLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RPTEXPORTLOGRowChangeEventHandler RPTEXPORTLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RPTEXPORTLOGRowChangeEventHandler RPTEXPORTLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RPTEXPORTLOGRowChangeEventHandler RPTEXPORTLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RPTEXPORTLOGRowChangeEventHandler RPTEXPORTLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRPTEXPORTLOGRow(RPTEXPORTLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RPTEXPORTLOGRow AddRPTEXPORTLOGRow(int ENTRYID, int EXPORTID, string SOPINSTANCEUID, string ACCESSIONNUMBER, string PATIENTID, string ISSUEROFPATIENTID, System.DateTime TIMECOMPLETED, string EXPORTEDFILEURL, string FACILITYNAME, int EXPORTTYPE) {
                RPTEXPORTLOGRow rowRPTEXPORTLOGRow = ((RPTEXPORTLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ENTRYID,
                        EXPORTID,
                        SOPINSTANCEUID,
                        ACCESSIONNUMBER,
                        PATIENTID,
                        ISSUEROFPATIENTID,
                        TIMECOMPLETED,
                        EXPORTEDFILEURL,
                        FACILITYNAME,
                        EXPORTTYPE};
                rowRPTEXPORTLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRPTEXPORTLOGRow);
                return rowRPTEXPORTLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RPTEXPORTLOGRow FindByENTRYID(int ENTRYID) {
                return ((RPTEXPORTLOGRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RPTEXPORTLOGDataTable cln = ((RPTEXPORTLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RPTEXPORTLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnEXPORTID = base.Columns["EXPORTID"];
                this.columnSOPINSTANCEUID = base.Columns["SOPINSTANCEUID"];
                this.columnACCESSIONNUMBER = base.Columns["ACCESSIONNUMBER"];
                this.columnPATIENTID = base.Columns["PATIENTID"];
                this.columnISSUEROFPATIENTID = base.Columns["ISSUEROFPATIENTID"];
                this.columnTIMECOMPLETED = base.Columns["TIMECOMPLETED"];
                this.columnEXPORTEDFILEURL = base.Columns["EXPORTEDFILEURL"];
                this.columnFACILITYNAME = base.Columns["FACILITYNAME"];
                this.columnEXPORTTYPE = base.Columns["EXPORTTYPE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnEXPORTID = new global::System.Data.DataColumn("EXPORTID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPORTID);
                this.columnSOPINSTANCEUID = new global::System.Data.DataColumn("SOPINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPINSTANCEUID);
                this.columnACCESSIONNUMBER = new global::System.Data.DataColumn("ACCESSIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSIONNUMBER);
                this.columnPATIENTID = new global::System.Data.DataColumn("PATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTID);
                this.columnISSUEROFPATIENTID = new global::System.Data.DataColumn("ISSUEROFPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUEROFPATIENTID);
                this.columnTIMECOMPLETED = new global::System.Data.DataColumn("TIMECOMPLETED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMECOMPLETED);
                this.columnEXPORTEDFILEURL = new global::System.Data.DataColumn("EXPORTEDFILEURL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPORTEDFILEURL);
                this.columnFACILITYNAME = new global::System.Data.DataColumn("FACILITYNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFACILITYNAME);
                this.columnEXPORTTYPE = new global::System.Data.DataColumn("EXPORTTYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPORTTYPE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnEXPORTID.AllowDBNull = false;
                this.columnSOPINSTANCEUID.MaxLength = 64;
                this.columnACCESSIONNUMBER.MaxLength = 16;
                this.columnPATIENTID.AllowDBNull = false;
                this.columnPATIENTID.MaxLength = 64;
                this.columnISSUEROFPATIENTID.AllowDBNull = false;
                this.columnISSUEROFPATIENTID.MaxLength = 64;
                this.columnTIMECOMPLETED.AllowDBNull = false;
                this.columnEXPORTEDFILEURL.AllowDBNull = false;
                this.columnEXPORTEDFILEURL.MaxLength = 550;
                this.columnFACILITYNAME.MaxLength = 64;
                this.columnEXPORTTYPE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RPTEXPORTLOGRow NewRPTEXPORTLOGRow() {
                return ((RPTEXPORTLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RPTEXPORTLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RPTEXPORTLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RPTEXPORTLOGRowChanged != null)) {
                    this.RPTEXPORTLOGRowChanged(this, new RPTEXPORTLOGRowChangeEvent(((RPTEXPORTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RPTEXPORTLOGRowChanging != null)) {
                    this.RPTEXPORTLOGRowChanging(this, new RPTEXPORTLOGRowChangeEvent(((RPTEXPORTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RPTEXPORTLOGRowDeleted != null)) {
                    this.RPTEXPORTLOGRowDeleted(this, new RPTEXPORTLOGRowChangeEvent(((RPTEXPORTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RPTEXPORTLOGRowDeleting != null)) {
                    this.RPTEXPORTLOGRowDeleting(this, new RPTEXPORTLOGRowChangeEvent(((RPTEXPORTLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRPTEXPORTLOGRow(RPTEXPORTLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RPTEXPORTLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class STORAGECOMMITLOGDataTable : global::System.Data.TypedTableBase<STORAGECOMMITLOGRow> {
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnSERVICENAME;
            
            private global::System.Data.DataColumn columnSTUDYINSTANCEUID;
            
            private global::System.Data.DataColumn columnACCESSIONNUMBER;
            
            private global::System.Data.DataColumn columnNUMOBJECTS;
            
            private global::System.Data.DataColumn columnTIMEFINISHED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STORAGECOMMITLOGDataTable() {
                this.TableName = "STORAGECOMMITLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal STORAGECOMMITLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected STORAGECOMMITLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SERVICENAMEColumn {
                get {
                    return this.columnSERVICENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYINSTANCEUIDColumn {
                get {
                    return this.columnSTUDYINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSIONNUMBERColumn {
                get {
                    return this.columnACCESSIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMOBJECTSColumn {
                get {
                    return this.columnNUMOBJECTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMEFINISHEDColumn {
                get {
                    return this.columnTIMEFINISHED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STORAGECOMMITLOGRow this[int index] {
                get {
                    return ((STORAGECOMMITLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event STORAGECOMMITLOGRowChangeEventHandler STORAGECOMMITLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event STORAGECOMMITLOGRowChangeEventHandler STORAGECOMMITLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event STORAGECOMMITLOGRowChangeEventHandler STORAGECOMMITLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event STORAGECOMMITLOGRowChangeEventHandler STORAGECOMMITLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSTORAGECOMMITLOGRow(STORAGECOMMITLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STORAGECOMMITLOGRow AddSTORAGECOMMITLOGRow(int ENTRYID, string SERVICENAME, string STUDYINSTANCEUID, string ACCESSIONNUMBER, int NUMOBJECTS, System.DateTime TIMEFINISHED) {
                STORAGECOMMITLOGRow rowSTORAGECOMMITLOGRow = ((STORAGECOMMITLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ENTRYID,
                        SERVICENAME,
                        STUDYINSTANCEUID,
                        ACCESSIONNUMBER,
                        NUMOBJECTS,
                        TIMEFINISHED};
                rowSTORAGECOMMITLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSTORAGECOMMITLOGRow);
                return rowSTORAGECOMMITLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STORAGECOMMITLOGRow FindByENTRYID(int ENTRYID) {
                return ((STORAGECOMMITLOGRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                STORAGECOMMITLOGDataTable cln = ((STORAGECOMMITLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new STORAGECOMMITLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnSERVICENAME = base.Columns["SERVICENAME"];
                this.columnSTUDYINSTANCEUID = base.Columns["STUDYINSTANCEUID"];
                this.columnACCESSIONNUMBER = base.Columns["ACCESSIONNUMBER"];
                this.columnNUMOBJECTS = base.Columns["NUMOBJECTS"];
                this.columnTIMEFINISHED = base.Columns["TIMEFINISHED"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnSERVICENAME = new global::System.Data.DataColumn("SERVICENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICENAME);
                this.columnSTUDYINSTANCEUID = new global::System.Data.DataColumn("STUDYINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYINSTANCEUID);
                this.columnACCESSIONNUMBER = new global::System.Data.DataColumn("ACCESSIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSIONNUMBER);
                this.columnNUMOBJECTS = new global::System.Data.DataColumn("NUMOBJECTS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMOBJECTS);
                this.columnTIMEFINISHED = new global::System.Data.DataColumn("TIMEFINISHED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMEFINISHED);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnSERVICENAME.AllowDBNull = false;
                this.columnSERVICENAME.MaxLength = 64;
                this.columnSTUDYINSTANCEUID.AllowDBNull = false;
                this.columnSTUDYINSTANCEUID.MaxLength = 64;
                this.columnACCESSIONNUMBER.AllowDBNull = false;
                this.columnACCESSIONNUMBER.MaxLength = 16;
                this.columnNUMOBJECTS.AllowDBNull = false;
                this.columnTIMEFINISHED.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STORAGECOMMITLOGRow NewSTORAGECOMMITLOGRow() {
                return ((STORAGECOMMITLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new STORAGECOMMITLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(STORAGECOMMITLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.STORAGECOMMITLOGRowChanged != null)) {
                    this.STORAGECOMMITLOGRowChanged(this, new STORAGECOMMITLOGRowChangeEvent(((STORAGECOMMITLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.STORAGECOMMITLOGRowChanging != null)) {
                    this.STORAGECOMMITLOGRowChanging(this, new STORAGECOMMITLOGRowChangeEvent(((STORAGECOMMITLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.STORAGECOMMITLOGRowDeleted != null)) {
                    this.STORAGECOMMITLOGRowDeleted(this, new STORAGECOMMITLOGRowChangeEvent(((STORAGECOMMITLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.STORAGECOMMITLOGRowDeleting != null)) {
                    this.STORAGECOMMITLOGRowDeleting(this, new STORAGECOMMITLOGRowChangeEvent(((STORAGECOMMITLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSTORAGECOMMITLOGRow(STORAGECOMMITLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "STORAGECOMMITLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class STUDYACCESSDataTable : global::System.Data.TypedTableBase<STUDYACCESSRow> {
            
            private global::System.Data.DataColumn columnSTUDYINSTANCEUID;
            
            private global::System.Data.DataColumn columnACCESSTIME;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnACCESSTYPE;
            
            private global::System.Data.DataColumn columnSTATUSORDER;
            
            private global::System.Data.DataColumn columnSTUDYDATETIME;
            
            private global::System.Data.DataColumn columnACCESSIONNUMBER;
            
            private global::System.Data.DataColumn columnINSTITUTIONNAME;
            
            private global::System.Data.DataColumn columnPATIENTID;
            
            private global::System.Data.DataColumn columnISSUEROFPATIENTID;
            
            private global::System.Data.DataColumn columnPATIENTFULLNAME;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnUSERID;
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnACCESSEDDATA;
            
            private global::System.Data.DataColumn columnMODIFIEDDATA;
            
            private global::System.Data.DataColumn columnIPADDRESS;
            
            private global::System.Data.DataColumn columnAUTHTAG;
            
            private global::System.Data.DataColumn columnORDERDATETIME;
            
            private global::System.Data.DataColumn columnACCESSTIMEUTC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STUDYACCESSDataTable() {
                this.TableName = "STUDYACCESS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal STUDYACCESSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected STUDYACCESSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYINSTANCEUIDColumn {
                get {
                    return this.columnSTUDYINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSTIMEColumn {
                get {
                    return this.columnACCESSTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSTYPEColumn {
                get {
                    return this.columnACCESSTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATUSORDERColumn {
                get {
                    return this.columnSTATUSORDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYDATETIMEColumn {
                get {
                    return this.columnSTUDYDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSIONNUMBERColumn {
                get {
                    return this.columnACCESSIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSTITUTIONNAMEColumn {
                get {
                    return this.columnINSTITUTIONNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTIDColumn {
                get {
                    return this.columnPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ISSUEROFPATIENTIDColumn {
                get {
                    return this.columnISSUEROFPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTFULLNAMEColumn {
                get {
                    return this.columnPATIENTFULLNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERIDColumn {
                get {
                    return this.columnUSERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSEDDATAColumn {
                get {
                    return this.columnACCESSEDDATA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MODIFIEDDATAColumn {
                get {
                    return this.columnMODIFIEDDATA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IPADDRESSColumn {
                get {
                    return this.columnIPADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AUTHTAGColumn {
                get {
                    return this.columnAUTHTAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ORDERDATETIMEColumn {
                get {
                    return this.columnORDERDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSTIMEUTCColumn {
                get {
                    return this.columnACCESSTIMEUTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STUDYACCESSRow this[int index] {
                get {
                    return ((STUDYACCESSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event STUDYACCESSRowChangeEventHandler STUDYACCESSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event STUDYACCESSRowChangeEventHandler STUDYACCESSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event STUDYACCESSRowChangeEventHandler STUDYACCESSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event STUDYACCESSRowChangeEventHandler STUDYACCESSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSTUDYACCESSRow(STUDYACCESSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STUDYACCESSRow AddSTUDYACCESSRow(
                        string STUDYINSTANCEUID, 
                        System.DateTime ACCESSTIME, 
                        string USERNAME, 
                        string ACCESSTYPE, 
                        int STATUSORDER, 
                        System.DateTime STUDYDATETIME, 
                        string ACCESSIONNUMBER, 
                        string INSTITUTIONNAME, 
                        string PATIENTID, 
                        string ISSUEROFPATIENTID, 
                        string PATIENTFULLNAME, 
                        string STATUS, 
                        int USERID, 
                        int ENTRYID, 
                        string ACCESSEDDATA, 
                        string MODIFIEDDATA, 
                        string IPADDRESS, 
                        string AUTHTAG, 
                        System.DateTime ORDERDATETIME, 
                        System.DateTime ACCESSTIMEUTC) {
                STUDYACCESSRow rowSTUDYACCESSRow = ((STUDYACCESSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        STUDYINSTANCEUID,
                        ACCESSTIME,
                        USERNAME,
                        ACCESSTYPE,
                        STATUSORDER,
                        STUDYDATETIME,
                        ACCESSIONNUMBER,
                        INSTITUTIONNAME,
                        PATIENTID,
                        ISSUEROFPATIENTID,
                        PATIENTFULLNAME,
                        STATUS,
                        USERID,
                        ENTRYID,
                        ACCESSEDDATA,
                        MODIFIEDDATA,
                        IPADDRESS,
                        AUTHTAG,
                        ORDERDATETIME,
                        ACCESSTIMEUTC};
                rowSTUDYACCESSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSTUDYACCESSRow);
                return rowSTUDYACCESSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STUDYACCESSRow FindByENTRYID(int ENTRYID) {
                return ((STUDYACCESSRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                STUDYACCESSDataTable cln = ((STUDYACCESSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new STUDYACCESSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSTUDYINSTANCEUID = base.Columns["STUDYINSTANCEUID"];
                this.columnACCESSTIME = base.Columns["ACCESSTIME"];
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnACCESSTYPE = base.Columns["ACCESSTYPE"];
                this.columnSTATUSORDER = base.Columns["STATUSORDER"];
                this.columnSTUDYDATETIME = base.Columns["STUDYDATETIME"];
                this.columnACCESSIONNUMBER = base.Columns["ACCESSIONNUMBER"];
                this.columnINSTITUTIONNAME = base.Columns["INSTITUTIONNAME"];
                this.columnPATIENTID = base.Columns["PATIENTID"];
                this.columnISSUEROFPATIENTID = base.Columns["ISSUEROFPATIENTID"];
                this.columnPATIENTFULLNAME = base.Columns["PATIENTFULLNAME"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnUSERID = base.Columns["USERID"];
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnACCESSEDDATA = base.Columns["ACCESSEDDATA"];
                this.columnMODIFIEDDATA = base.Columns["MODIFIEDDATA"];
                this.columnIPADDRESS = base.Columns["IPADDRESS"];
                this.columnAUTHTAG = base.Columns["AUTHTAG"];
                this.columnORDERDATETIME = base.Columns["ORDERDATETIME"];
                this.columnACCESSTIMEUTC = base.Columns["ACCESSTIMEUTC"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSTUDYINSTANCEUID = new global::System.Data.DataColumn("STUDYINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYINSTANCEUID);
                this.columnACCESSTIME = new global::System.Data.DataColumn("ACCESSTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSTIME);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnACCESSTYPE = new global::System.Data.DataColumn("ACCESSTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSTYPE);
                this.columnSTATUSORDER = new global::System.Data.DataColumn("STATUSORDER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUSORDER);
                this.columnSTUDYDATETIME = new global::System.Data.DataColumn("STUDYDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYDATETIME);
                this.columnACCESSIONNUMBER = new global::System.Data.DataColumn("ACCESSIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSIONNUMBER);
                this.columnINSTITUTIONNAME = new global::System.Data.DataColumn("INSTITUTIONNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTITUTIONNAME);
                this.columnPATIENTID = new global::System.Data.DataColumn("PATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTID);
                this.columnISSUEROFPATIENTID = new global::System.Data.DataColumn("ISSUEROFPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUEROFPATIENTID);
                this.columnPATIENTFULLNAME = new global::System.Data.DataColumn("PATIENTFULLNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTFULLNAME);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnUSERID = new global::System.Data.DataColumn("USERID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERID);
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnACCESSEDDATA = new global::System.Data.DataColumn("ACCESSEDDATA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSEDDATA);
                this.columnMODIFIEDDATA = new global::System.Data.DataColumn("MODIFIEDDATA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIEDDATA);
                this.columnIPADDRESS = new global::System.Data.DataColumn("IPADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPADDRESS);
                this.columnAUTHTAG = new global::System.Data.DataColumn("AUTHTAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTHTAG);
                this.columnORDERDATETIME = new global::System.Data.DataColumn("ORDERDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDERDATETIME);
                this.columnACCESSTIMEUTC = new global::System.Data.DataColumn("ACCESSTIMEUTC", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSTIMEUTC);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnSTUDYINSTANCEUID.AllowDBNull = false;
                this.columnSTUDYINSTANCEUID.MaxLength = 64;
                this.columnACCESSTIME.AllowDBNull = false;
                this.columnUSERNAME.AllowDBNull = false;
                this.columnUSERNAME.MaxLength = 64;
                this.columnACCESSTYPE.AllowDBNull = false;
                this.columnACCESSTYPE.MaxLength = 64;
                this.columnSTATUSORDER.AllowDBNull = false;
                this.columnACCESSIONNUMBER.MaxLength = 16;
                this.columnINSTITUTIONNAME.MaxLength = 64;
                this.columnPATIENTID.MaxLength = 64;
                this.columnISSUEROFPATIENTID.MaxLength = 64;
                this.columnPATIENTFULLNAME.MaxLength = 64;
                this.columnSTATUS.MaxLength = 16;
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnACCESSEDDATA.MaxLength = 64;
                this.columnMODIFIEDDATA.MaxLength = 2147483647;
                this.columnIPADDRESS.MaxLength = 64;
                this.columnAUTHTAG.MaxLength = 128;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STUDYACCESSRow NewSTUDYACCESSRow() {
                return ((STUDYACCESSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new STUDYACCESSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(STUDYACCESSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.STUDYACCESSRowChanged != null)) {
                    this.STUDYACCESSRowChanged(this, new STUDYACCESSRowChangeEvent(((STUDYACCESSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.STUDYACCESSRowChanging != null)) {
                    this.STUDYACCESSRowChanging(this, new STUDYACCESSRowChangeEvent(((STUDYACCESSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.STUDYACCESSRowDeleted != null)) {
                    this.STUDYACCESSRowDeleted(this, new STUDYACCESSRowChangeEvent(((STUDYACCESSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.STUDYACCESSRowDeleting != null)) {
                    this.STUDYACCESSRowDeleting(this, new STUDYACCESSRowChangeEvent(((STUDYACCESSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSTUDYACCESSRow(STUDYACCESSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "STUDYACCESSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SYSTEMLOGDataTable : global::System.Data.TypedTableBase<SYSTEMLOGRow> {
            
            private global::System.Data.DataColumn columnINTERNALSYSTEMLOGID;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnDATETIME;
            
            private global::System.Data.DataColumn columnLOGENTRY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SYSTEMLOGDataTable() {
                this.TableName = "SYSTEMLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SYSTEMLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SYSTEMLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTERNALSYSTEMLOGIDColumn {
                get {
                    return this.columnINTERNALSYSTEMLOGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATETIMEColumn {
                get {
                    return this.columnDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOGENTRYColumn {
                get {
                    return this.columnLOGENTRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SYSTEMLOGRow this[int index] {
                get {
                    return ((SYSTEMLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SYSTEMLOGRowChangeEventHandler SYSTEMLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SYSTEMLOGRowChangeEventHandler SYSTEMLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SYSTEMLOGRowChangeEventHandler SYSTEMLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SYSTEMLOGRowChangeEventHandler SYSTEMLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSYSTEMLOGRow(SYSTEMLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SYSTEMLOGRow AddSYSTEMLOGRow(int INTERNALSYSTEMLOGID, string USERNAME, System.DateTime DATETIME, string LOGENTRY) {
                SYSTEMLOGRow rowSYSTEMLOGRow = ((SYSTEMLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        INTERNALSYSTEMLOGID,
                        USERNAME,
                        DATETIME,
                        LOGENTRY};
                rowSYSTEMLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSYSTEMLOGRow);
                return rowSYSTEMLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SYSTEMLOGRow FindByINTERNALSYSTEMLOGID(int INTERNALSYSTEMLOGID) {
                return ((SYSTEMLOGRow)(this.Rows.Find(new object[] {
                            INTERNALSYSTEMLOGID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SYSTEMLOGDataTable cln = ((SYSTEMLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SYSTEMLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnINTERNALSYSTEMLOGID = base.Columns["INTERNALSYSTEMLOGID"];
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnDATETIME = base.Columns["DATETIME"];
                this.columnLOGENTRY = base.Columns["LOGENTRY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnINTERNALSYSTEMLOGID = new global::System.Data.DataColumn("INTERNALSYSTEMLOGID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERNALSYSTEMLOGID);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnDATETIME = new global::System.Data.DataColumn("DATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATETIME);
                this.columnLOGENTRY = new global::System.Data.DataColumn("LOGENTRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGENTRY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnINTERNALSYSTEMLOGID}, true));
                this.columnINTERNALSYSTEMLOGID.AllowDBNull = false;
                this.columnINTERNALSYSTEMLOGID.Unique = true;
                this.columnUSERNAME.AllowDBNull = false;
                this.columnUSERNAME.MaxLength = 64;
                this.columnDATETIME.AllowDBNull = false;
                this.columnLOGENTRY.AllowDBNull = false;
                this.columnLOGENTRY.MaxLength = 256;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SYSTEMLOGRow NewSYSTEMLOGRow() {
                return ((SYSTEMLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SYSTEMLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SYSTEMLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SYSTEMLOGRowChanged != null)) {
                    this.SYSTEMLOGRowChanged(this, new SYSTEMLOGRowChangeEvent(((SYSTEMLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SYSTEMLOGRowChanging != null)) {
                    this.SYSTEMLOGRowChanging(this, new SYSTEMLOGRowChangeEvent(((SYSTEMLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SYSTEMLOGRowDeleted != null)) {
                    this.SYSTEMLOGRowDeleted(this, new SYSTEMLOGRowChangeEvent(((SYSTEMLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SYSTEMLOGRowDeleting != null)) {
                    this.SYSTEMLOGRowDeleting(this, new SYSTEMLOGRowChangeEvent(((SYSTEMLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSYSTEMLOGRow(SYSTEMLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SYSTEMLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRANSMITLOGDataTable : global::System.Data.TypedTableBase<TRANSMITLOGRow> {
            
            private global::System.Data.DataColumn columnENTRYID;
            
            private global::System.Data.DataColumn columnTIMESTARTED;
            
            private global::System.Data.DataColumn columnTIMEFINISHED;
            
            private global::System.Data.DataColumn columnSOPINSTANCEUID;
            
            private global::System.Data.DataColumn columnISSUEROFPATIENTID;
            
            private global::System.Data.DataColumn columnPATIENTID;
            
            private global::System.Data.DataColumn columnSTUDYINSTANCEUID;
            
            private global::System.Data.DataColumn columnACCESSIONNUMBER;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnSERVICENAME;
            
            private global::System.Data.DataColumn columnNUMOBJECTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRANSMITLOGDataTable() {
                this.TableName = "TRANSMITLOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRANSMITLOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TRANSMITLOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRYIDColumn {
                get {
                    return this.columnENTRYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMESTARTEDColumn {
                get {
                    return this.columnTIMESTARTED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMEFINISHEDColumn {
                get {
                    return this.columnTIMEFINISHED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SOPINSTANCEUIDColumn {
                get {
                    return this.columnSOPINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ISSUEROFPATIENTIDColumn {
                get {
                    return this.columnISSUEROFPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATIENTIDColumn {
                get {
                    return this.columnPATIENTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STUDYINSTANCEUIDColumn {
                get {
                    return this.columnSTUDYINSTANCEUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSIONNUMBERColumn {
                get {
                    return this.columnACCESSIONNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SERVICENAMEColumn {
                get {
                    return this.columnSERVICENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMOBJECTSColumn {
                get {
                    return this.columnNUMOBJECTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRANSMITLOGRow this[int index] {
                get {
                    return ((TRANSMITLOGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRANSMITLOGRowChangeEventHandler TRANSMITLOGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRANSMITLOGRowChangeEventHandler TRANSMITLOGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRANSMITLOGRowChangeEventHandler TRANSMITLOGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRANSMITLOGRowChangeEventHandler TRANSMITLOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTRANSMITLOGRow(TRANSMITLOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRANSMITLOGRow AddTRANSMITLOGRow(int ENTRYID, System.DateTime TIMESTARTED, System.DateTime TIMEFINISHED, string SOPINSTANCEUID, string ISSUEROFPATIENTID, string PATIENTID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, string USERNAME, string SERVICENAME, int NUMOBJECTS) {
                TRANSMITLOGRow rowTRANSMITLOGRow = ((TRANSMITLOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ENTRYID,
                        TIMESTARTED,
                        TIMEFINISHED,
                        SOPINSTANCEUID,
                        ISSUEROFPATIENTID,
                        PATIENTID,
                        STUDYINSTANCEUID,
                        ACCESSIONNUMBER,
                        USERNAME,
                        SERVICENAME,
                        NUMOBJECTS};
                rowTRANSMITLOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRANSMITLOGRow);
                return rowTRANSMITLOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRANSMITLOGRow FindByENTRYID(int ENTRYID) {
                return ((TRANSMITLOGRow)(this.Rows.Find(new object[] {
                            ENTRYID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TRANSMITLOGDataTable cln = ((TRANSMITLOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRANSMITLOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnENTRYID = base.Columns["ENTRYID"];
                this.columnTIMESTARTED = base.Columns["TIMESTARTED"];
                this.columnTIMEFINISHED = base.Columns["TIMEFINISHED"];
                this.columnSOPINSTANCEUID = base.Columns["SOPINSTANCEUID"];
                this.columnISSUEROFPATIENTID = base.Columns["ISSUEROFPATIENTID"];
                this.columnPATIENTID = base.Columns["PATIENTID"];
                this.columnSTUDYINSTANCEUID = base.Columns["STUDYINSTANCEUID"];
                this.columnACCESSIONNUMBER = base.Columns["ACCESSIONNUMBER"];
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnSERVICENAME = base.Columns["SERVICENAME"];
                this.columnNUMOBJECTS = base.Columns["NUMOBJECTS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnENTRYID = new global::System.Data.DataColumn("ENTRYID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRYID);
                this.columnTIMESTARTED = new global::System.Data.DataColumn("TIMESTARTED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMESTARTED);
                this.columnTIMEFINISHED = new global::System.Data.DataColumn("TIMEFINISHED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMEFINISHED);
                this.columnSOPINSTANCEUID = new global::System.Data.DataColumn("SOPINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPINSTANCEUID);
                this.columnISSUEROFPATIENTID = new global::System.Data.DataColumn("ISSUEROFPATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSUEROFPATIENTID);
                this.columnPATIENTID = new global::System.Data.DataColumn("PATIENTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENTID);
                this.columnSTUDYINSTANCEUID = new global::System.Data.DataColumn("STUDYINSTANCEUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDYINSTANCEUID);
                this.columnACCESSIONNUMBER = new global::System.Data.DataColumn("ACCESSIONNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSIONNUMBER);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnSERVICENAME = new global::System.Data.DataColumn("SERVICENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICENAME);
                this.columnNUMOBJECTS = new global::System.Data.DataColumn("NUMOBJECTS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMOBJECTS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnENTRYID}, true));
                this.columnENTRYID.AllowDBNull = false;
                this.columnENTRYID.Unique = true;
                this.columnTIMESTARTED.AllowDBNull = false;
                this.columnTIMEFINISHED.AllowDBNull = false;
                this.columnSOPINSTANCEUID.AllowDBNull = false;
                this.columnSOPINSTANCEUID.MaxLength = 64;
                this.columnISSUEROFPATIENTID.AllowDBNull = false;
                this.columnISSUEROFPATIENTID.MaxLength = 64;
                this.columnPATIENTID.AllowDBNull = false;
                this.columnPATIENTID.MaxLength = 64;
                this.columnSTUDYINSTANCEUID.AllowDBNull = false;
                this.columnSTUDYINSTANCEUID.MaxLength = 64;
                this.columnACCESSIONNUMBER.AllowDBNull = false;
                this.columnACCESSIONNUMBER.MaxLength = 16;
                this.columnUSERNAME.AllowDBNull = false;
                this.columnUSERNAME.MaxLength = 64;
                this.columnSERVICENAME.AllowDBNull = false;
                this.columnSERVICENAME.MaxLength = 64;
                this.columnNUMOBJECTS.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRANSMITLOGRow NewTRANSMITLOGRow() {
                return ((TRANSMITLOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRANSMITLOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TRANSMITLOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRANSMITLOGRowChanged != null)) {
                    this.TRANSMITLOGRowChanged(this, new TRANSMITLOGRowChangeEvent(((TRANSMITLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRANSMITLOGRowChanging != null)) {
                    this.TRANSMITLOGRowChanging(this, new TRANSMITLOGRowChangeEvent(((TRANSMITLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRANSMITLOGRowDeleted != null)) {
                    this.TRANSMITLOGRowDeleted(this, new TRANSMITLOGRowChangeEvent(((TRANSMITLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRANSMITLOGRowDeleting != null)) {
                    this.TRANSMITLOGRowDeleting(this, new TRANSMITLOGRowChangeEvent(((TRANSMITLOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTRANSMITLOGRow(TRANSMITLOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoggingAndConfig ds = new LoggingAndConfig();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRANSMITLOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class APPOINTMENTLOGRow : global::System.Data.DataRow {
            
            private APPOINTMENTLOGDataTable tableAPPOINTMENTLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal APPOINTMENTLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAPPOINTMENTLOG = ((APPOINTMENTLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableAPPOINTMENTLOG.ENTRYIDColumn]));
                }
                set {
                    this[this.tableAPPOINTMENTLOG.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime STARTTIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAPPOINTMENTLOG.STARTTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STARTTIME\' in table \'APPOINTMENTLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENTLOG.STARTTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FINISHTIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAPPOINTMENTLOG.FINISHTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINISHTIME\' in table \'APPOINTMENTLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENTLOG.FINISHTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RESOURCENAME {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENTLOG.RESOURCENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RESOURCENAME\' in table \'APPOINTMENTLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENTLOG.RESOURCENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int INTERNALSTUDYID {
                get {
                    try {
                        return ((int)(this[this.tableAPPOINTMENTLOG.INTERNALSTUDYIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTERNALSTUDYID\' in table \'APPOINTMENTLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENTLOG.INTERNALSTUDYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int APPOINTMENTSTATE {
                get {
                    return ((int)(this[this.tableAPPOINTMENTLOG.APPOINTMENTSTATEColumn]));
                }
                set {
                    this[this.tableAPPOINTMENTLOG.APPOINTMENTSTATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UPDATEUSERNAME {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENTLOG.UPDATEUSERNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATEUSERNAME\' in table \'APPOINTMENTLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENTLOG.UPDATEUSERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BLOCKEDREASON {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENTLOG.BLOCKEDREASONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLOCKEDREASON\' in table \'APPOINTMENTLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENTLOG.BLOCKEDREASONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ACCESSTIME {
                get {
                    return ((global::System.DateTime)(this[this.tableAPPOINTMENTLOG.ACCESSTIMEColumn]));
                }
                set {
                    this[this.tableAPPOINTMENTLOG.ACCESSTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTARTTIMENull() {
                return this.IsNull(this.tableAPPOINTMENTLOG.STARTTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTARTTIMENull() {
                this[this.tableAPPOINTMENTLOG.STARTTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFINISHTIMENull() {
                return this.IsNull(this.tableAPPOINTMENTLOG.FINISHTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFINISHTIMENull() {
                this[this.tableAPPOINTMENTLOG.FINISHTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRESOURCENAMENull() {
                return this.IsNull(this.tableAPPOINTMENTLOG.RESOURCENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRESOURCENAMENull() {
                this[this.tableAPPOINTMENTLOG.RESOURCENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINTERNALSTUDYIDNull() {
                return this.IsNull(this.tableAPPOINTMENTLOG.INTERNALSTUDYIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINTERNALSTUDYIDNull() {
                this[this.tableAPPOINTMENTLOG.INTERNALSTUDYIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUPDATEUSERNAMENull() {
                return this.IsNull(this.tableAPPOINTMENTLOG.UPDATEUSERNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUPDATEUSERNAMENull() {
                this[this.tableAPPOINTMENTLOG.UPDATEUSERNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBLOCKEDREASONNull() {
                return this.IsNull(this.tableAPPOINTMENTLOG.BLOCKEDREASONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBLOCKEDREASONNull() {
                this[this.tableAPPOINTMENTLOG.BLOCKEDREASONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ARCHIVELOGRow : global::System.Data.DataRow {
            
            private ARCHIVELOGDataTable tableARCHIVELOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ARCHIVELOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableARCHIVELOG = ((ARCHIVELOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SOPINSTANCEUID {
                get {
                    return ((string)(this[this.tableARCHIVELOG.SOPINSTANCEUIDColumn]));
                }
                set {
                    this[this.tableARCHIVELOG.SOPINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime INSERTTIME {
                get {
                    return ((global::System.DateTime)(this[this.tableARCHIVELOG.INSERTTIMEColumn]));
                }
                set {
                    this[this.tableARCHIVELOG.INSERTTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] TOKEN {
                get {
                    try {
                        return ((byte[])(this[this.tableARCHIVELOG.TOKENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOKEN\' in table \'ARCHIVELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARCHIVELOG.TOKENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOGTYPE {
                get {
                    return ((string)(this[this.tableARCHIVELOG.LOGTYPEColumn]));
                }
                set {
                    this[this.tableARCHIVELOG.LOGTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableARCHIVELOG.ENTRYIDColumn]));
                }
                set {
                    this[this.tableARCHIVELOG.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOKENNull() {
                return this.IsNull(this.tableARCHIVELOG.TOKENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOKENNull() {
                this[this.tableARCHIVELOG.TOKENColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ARCHIVESTUDYLOGRow : global::System.Data.DataRow {
            
            private ARCHIVESTUDYLOGDataTable tableARCHIVESTUDYLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ARCHIVESTUDYLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableARCHIVESTUDYLOG = ((ARCHIVESTUDYLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ADDEDID {
                get {
                    return ((int)(this[this.tableARCHIVESTUDYLOG.ADDEDIDColumn]));
                }
                set {
                    this[this.tableARCHIVESTUDYLOG.ADDEDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STUDYINSTANCEUID {
                get {
                    return ((string)(this[this.tableARCHIVESTUDYLOG.STUDYINSTANCEUIDColumn]));
                }
                set {
                    this[this.tableARCHIVESTUDYLOG.STUDYINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime STUDYDATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableARCHIVESTUDYLOG.STUDYDATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STUDYDATETIME\' in table \'ARCHIVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARCHIVESTUDYLOG.STUDYDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FINISHTIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableARCHIVESTUDYLOG.FINISHTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINISHTIME\' in table \'ARCHIVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARCHIVESTUDYLOG.FINISHTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int STATUS {
                get {
                    try {
                        return ((int)(this[this.tableARCHIVESTUDYLOG.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'ARCHIVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARCHIVESTUDYLOG.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NUMOBJECTS {
                get {
                    try {
                        return ((int)(this[this.tableARCHIVESTUDYLOG.NUMOBJECTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMOBJECTS\' in table \'ARCHIVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARCHIVESTUDYLOG.NUMOBJECTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSIONNUMBER {
                get {
                    try {
                        return ((string)(this[this.tableARCHIVESTUDYLOG.ACCESSIONNUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCESSIONNUMBER\' in table \'ARCHIVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARCHIVESTUDYLOG.ACCESSIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTID {
                get {
                    try {
                        return ((string)(this[this.tableARCHIVESTUDYLOG.PATIENTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENTID\' in table \'ARCHIVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARCHIVESTUDYLOG.PATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ISSUEROFPATIENTID {
                get {
                    try {
                        return ((string)(this[this.tableARCHIVESTUDYLOG.ISSUEROFPATIENTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISSUEROFPATIENTID\' in table \'ARCHIVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARCHIVESTUDYLOG.ISSUEROFPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIRSTNAME {
                get {
                    try {
                        return ((string)(this[this.tableARCHIVESTUDYLOG.FIRSTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIRSTNAME\' in table \'ARCHIVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARCHIVESTUDYLOG.FIRSTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LASTNAME {
                get {
                    try {
                        return ((string)(this[this.tableARCHIVESTUDYLOG.LASTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LASTNAME\' in table \'ARCHIVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARCHIVESTUDYLOG.LASTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTUDYDATETIMENull() {
                return this.IsNull(this.tableARCHIVESTUDYLOG.STUDYDATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTUDYDATETIMENull() {
                this[this.tableARCHIVESTUDYLOG.STUDYDATETIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFINISHTIMENull() {
                return this.IsNull(this.tableARCHIVESTUDYLOG.FINISHTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFINISHTIMENull() {
                this[this.tableARCHIVESTUDYLOG.FINISHTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableARCHIVESTUDYLOG.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTATUSNull() {
                this[this.tableARCHIVESTUDYLOG.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUMOBJECTSNull() {
                return this.IsNull(this.tableARCHIVESTUDYLOG.NUMOBJECTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUMOBJECTSNull() {
                this[this.tableARCHIVESTUDYLOG.NUMOBJECTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCESSIONNUMBERNull() {
                return this.IsNull(this.tableARCHIVESTUDYLOG.ACCESSIONNUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCESSIONNUMBERNull() {
                this[this.tableARCHIVESTUDYLOG.ACCESSIONNUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPATIENTIDNull() {
                return this.IsNull(this.tableARCHIVESTUDYLOG.PATIENTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPATIENTIDNull() {
                this[this.tableARCHIVESTUDYLOG.PATIENTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsISSUEROFPATIENTIDNull() {
                return this.IsNull(this.tableARCHIVESTUDYLOG.ISSUEROFPATIENTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetISSUEROFPATIENTIDNull() {
                this[this.tableARCHIVESTUDYLOG.ISSUEROFPATIENTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFIRSTNAMENull() {
                return this.IsNull(this.tableARCHIVESTUDYLOG.FIRSTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFIRSTNAMENull() {
                this[this.tableARCHIVESTUDYLOG.FIRSTNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLASTNAMENull() {
                return this.IsNull(this.tableARCHIVESTUDYLOG.LASTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLASTNAMENull() {
                this[this.tableARCHIVESTUDYLOG.LASTNAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AUTOQUERYRETRIEVELOGRow : global::System.Data.DataRow {
            
            private AUTOQUERYRETRIEVELOGDataTable tableAUTOQUERYRETRIEVELOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AUTOQUERYRETRIEVELOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAUTOQUERYRETRIEVELOG = ((AUTOQUERYRETRIEVELOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableAUTOQUERYRETRIEVELOG.ENTRYIDColumn]));
                }
                set {
                    this[this.tableAUTOQUERYRETRIEVELOG.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SERVICEID {
                get {
                    return ((int)(this[this.tableAUTOQUERYRETRIEVELOG.SERVICEIDColumn]));
                }
                set {
                    this[this.tableAUTOQUERYRETRIEVELOG.SERVICEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ENTRYTIME {
                get {
                    return ((global::System.DateTime)(this[this.tableAUTOQUERYRETRIEVELOG.ENTRYTIMEColumn]));
                }
                set {
                    this[this.tableAUTOQUERYRETRIEVELOG.ENTRYTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCRIPTION {
                get {
                    return ((string)(this[this.tableAUTOQUERYRETRIEVELOG.DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableAUTOQUERYRETRIEVELOG.DESCRIPTIONColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class COMMUNICATIONLOGRow : global::System.Data.DataRow {
            
            private COMMUNICATIONLOGDataTable tableCOMMUNICATIONLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal COMMUNICATIONLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCOMMUNICATIONLOG = ((COMMUNICATIONLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableCOMMUNICATIONLOG.ENTRYIDColumn]));
                }
                set {
                    this[this.tableCOMMUNICATIONLOG.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ENTRYTIME {
                get {
                    return ((global::System.DateTime)(this[this.tableCOMMUNICATIONLOG.ENTRYTIMEColumn]));
                }
                set {
                    this[this.tableCOMMUNICATIONLOG.ENTRYTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STUDYINSTANCEUID {
                get {
                    try {
                        return ((string)(this[this.tableCOMMUNICATIONLOG.STUDYINSTANCEUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STUDYINSTANCEUID\' in table \'COMMUNICATIONLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCOMMUNICATIONLOG.STUDYINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LINKID {
                get {
                    try {
                        return ((int)(this[this.tableCOMMUNICATIONLOG.LINKIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LINKID\' in table \'COMMUNICATIONLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCOMMUNICATIONLOG.LINKIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCRIPTION {
                get {
                    return ((string)(this[this.tableCOMMUNICATIONLOG.DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableCOMMUNICATIONLOG.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SERVICENAME {
                get {
                    return ((string)(this[this.tableCOMMUNICATIONLOG.SERVICENAMEColumn]));
                }
                set {
                    this[this.tableCOMMUNICATIONLOG.SERVICENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTUDYINSTANCEUIDNull() {
                return this.IsNull(this.tableCOMMUNICATIONLOG.STUDYINSTANCEUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTUDYINSTANCEUIDNull() {
                this[this.tableCOMMUNICATIONLOG.STUDYINSTANCEUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLINKIDNull() {
                return this.IsNull(this.tableCOMMUNICATIONLOG.LINKIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLINKIDNull() {
                this[this.tableCOMMUNICATIONLOG.LINKIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CONFIGRow : global::System.Data.DataRow {
            
            private CONFIGDataTable tableCONFIG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CONFIGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCONFIG = ((CONFIGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERNAME {
                get {
                    return ((string)(this[this.tableCONFIG.USERNAMEColumn]));
                }
                set {
                    this[this.tableCONFIG.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ITEM {
                get {
                    return ((string)(this[this.tableCONFIG.ITEMColumn]));
                }
                set {
                    this[this.tableCONFIG.ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STRVALUE {
                get {
                    try {
                        return ((string)(this[this.tableCONFIG.STRVALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STRVALUE\' in table \'CONFIG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONFIG.STRVALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int INTVALUE {
                get {
                    try {
                        return ((int)(this[this.tableCONFIG.INTVALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTVALUE\' in table \'CONFIG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONFIG.INTVALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FLOATVALUE {
                get {
                    try {
                        return ((float)(this[this.tableCONFIG.FLOATVALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLOATVALUE\' in table \'CONFIG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONFIG.FLOATVALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BOOLVALUE {
                get {
                    try {
                        return ((string)(this[this.tableCONFIG.BOOLVALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOOLVALUE\' in table \'CONFIG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONFIG.BOOLVALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] BLOBVALUE {
                get {
                    try {
                        return ((byte[])(this[this.tableCONFIG.BLOBVALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLOBVALUE\' in table \'CONFIG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONFIG.BLOBVALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BLOBSTRING {
                get {
                    try {
                        return ((string)(this[this.tableCONFIG.BLOBSTRINGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLOBSTRING\' in table \'CONFIG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONFIG.BLOBSTRINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIRSTCAT {
                get {
                    return ((string)(this[this.tableCONFIG.FIRSTCATColumn]));
                }
                set {
                    this[this.tableCONFIG.FIRSTCATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SECONDCAT {
                get {
                    return ((string)(this[this.tableCONFIG.SECONDCATColumn]));
                }
                set {
                    this[this.tableCONFIG.SECONDCATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string THIRDCAT {
                get {
                    return ((string)(this[this.tableCONFIG.THIRDCATColumn]));
                }
                set {
                    this[this.tableCONFIG.THIRDCATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MINVALUE {
                get {
                    try {
                        return ((int)(this[this.tableCONFIG.MINVALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MINVALUE\' in table \'CONFIG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONFIG.MINVALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MAXVALUE {
                get {
                    try {
                        return ((int)(this[this.tableCONFIG.MAXVALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAXVALUE\' in table \'CONFIG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONFIG.MAXVALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VALUETYPE {
                get {
                    return ((int)(this[this.tableCONFIG.VALUETYPEColumn]));
                }
                set {
                    this[this.tableCONFIG.VALUETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MAXSTRINGLENGTH {
                get {
                    try {
                        return ((int)(this[this.tableCONFIG.MAXSTRINGLENGTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAXSTRINGLENGTH\' in table \'CONFIG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONFIG.MAXSTRINGLENGTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTRVALUENull() {
                return this.IsNull(this.tableCONFIG.STRVALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTRVALUENull() {
                this[this.tableCONFIG.STRVALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINTVALUENull() {
                return this.IsNull(this.tableCONFIG.INTVALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINTVALUENull() {
                this[this.tableCONFIG.INTVALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFLOATVALUENull() {
                return this.IsNull(this.tableCONFIG.FLOATVALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFLOATVALUENull() {
                this[this.tableCONFIG.FLOATVALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBOOLVALUENull() {
                return this.IsNull(this.tableCONFIG.BOOLVALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBOOLVALUENull() {
                this[this.tableCONFIG.BOOLVALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBLOBVALUENull() {
                return this.IsNull(this.tableCONFIG.BLOBVALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBLOBVALUENull() {
                this[this.tableCONFIG.BLOBVALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBLOBSTRINGNull() {
                return this.IsNull(this.tableCONFIG.BLOBSTRINGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBLOBSTRINGNull() {
                this[this.tableCONFIG.BLOBSTRINGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMINVALUENull() {
                return this.IsNull(this.tableCONFIG.MINVALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMINVALUENull() {
                this[this.tableCONFIG.MINVALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMAXVALUENull() {
                return this.IsNull(this.tableCONFIG.MAXVALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMAXVALUENull() {
                this[this.tableCONFIG.MAXVALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMAXSTRINGLENGTHNull() {
                return this.IsNull(this.tableCONFIG.MAXSTRINGLENGTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMAXSTRINGLENGTHNull() {
                this[this.tableCONFIG.MAXSTRINGLENGTHColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CONFIGDISPLAYRow : global::System.Data.DataRow {
            
            private CONFIGDISPLAYDataTable tableCONFIGDISPLAY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CONFIGDISPLAYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCONFIGDISPLAY = ((CONFIGDISPLAYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableCONFIGDISPLAY.ENTRYIDColumn]));
                }
                set {
                    this[this.tableCONFIGDISPLAY.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERNAME {
                get {
                    return ((string)(this[this.tableCONFIGDISPLAY.USERNAMEColumn]));
                }
                set {
                    this[this.tableCONFIGDISPLAY.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ITEM {
                get {
                    return ((string)(this[this.tableCONFIGDISPLAY.ITEMColumn]));
                }
                set {
                    this[this.tableCONFIGDISPLAY.ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DESKTOPLEFT {
                get {
                    return ((int)(this[this.tableCONFIGDISPLAY.DESKTOPLEFTColumn]));
                }
                set {
                    this[this.tableCONFIGDISPLAY.DESKTOPLEFTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DESKTOPTOP {
                get {
                    return ((int)(this[this.tableCONFIGDISPLAY.DESKTOPTOPColumn]));
                }
                set {
                    this[this.tableCONFIGDISPLAY.DESKTOPTOPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DESKTOPRIGHT {
                get {
                    return ((int)(this[this.tableCONFIGDISPLAY.DESKTOPRIGHTColumn]));
                }
                set {
                    this[this.tableCONFIGDISPLAY.DESKTOPRIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DESKTOPBOTTOM {
                get {
                    return ((int)(this[this.tableCONFIGDISPLAY.DESKTOPBOTTOMColumn]));
                }
                set {
                    this[this.tableCONFIGDISPLAY.DESKTOPBOTTOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] BLOBVALUE {
                get {
                    try {
                        return ((byte[])(this[this.tableCONFIGDISPLAY.BLOBVALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLOBVALUE\' in table \'CONFIGDISPLAY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONFIGDISPLAY.BLOBVALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BLOBSTRING {
                get {
                    return ((string)(this[this.tableCONFIGDISPLAY.BLOBSTRINGColumn]));
                }
                set {
                    this[this.tableCONFIGDISPLAY.BLOBSTRINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBLOBVALUENull() {
                return this.IsNull(this.tableCONFIGDISPLAY.BLOBVALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBLOBVALUENull() {
                this[this.tableCONFIGDISPLAY.BLOBVALUEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class HEALTHVAULTSUMMARYEXPORTLOGRow : global::System.Data.DataRow {
            
            private HEALTHVAULTSUMMARYEXPORTLOGDataTable tableHEALTHVAULTSUMMARYEXPORTLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal HEALTHVAULTSUMMARYEXPORTLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHEALTHVAULTSUMMARYEXPORTLOG = ((HEALTHVAULTSUMMARYEXPORTLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableHEALTHVAULTSUMMARYEXPORTLOG.ENTRYIDColumn]));
                }
                set {
                    this[this.tableHEALTHVAULTSUMMARYEXPORTLOG.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int INTERNALPATIENTID {
                get {
                    return ((int)(this[this.tableHEALTHVAULTSUMMARYEXPORTLOG.INTERNALPATIENTIDColumn]));
                }
                set {
                    this[this.tableHEALTHVAULTSUMMARYEXPORTLOG.INTERNALPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACTION {
                get {
                    return ((string)(this[this.tableHEALTHVAULTSUMMARYEXPORTLOG.ACTIONColumn]));
                }
                set {
                    this[this.tableHEALTHVAULTSUMMARYEXPORTLOG.ACTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ACTIONDATETIME {
                get {
                    return ((global::System.DateTime)(this[this.tableHEALTHVAULTSUMMARYEXPORTLOG.ACTIONDATETIMEColumn]));
                }
                set {
                    this[this.tableHEALTHVAULTSUMMARYEXPORTLOG.ACTIONDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableHEALTHVAULTSUMMARYEXPORTLOG.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'HEALTHVAULTSUMMARYEXPORTLOG\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableHEALTHVAULTSUMMARYEXPORTLOG.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableHEALTHVAULTSUMMARYEXPORTLOG.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESCRIPTIONNull() {
                this[this.tableHEALTHVAULTSUMMARYEXPORTLOG.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MDINTOUCHLOGRow : global::System.Data.DataRow {
            
            private MDINTOUCHLOGDataTable tableMDINTOUCHLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MDINTOUCHLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMDINTOUCHLOG = ((MDINTOUCHLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int INTERNALMDINTOUCHLOGID {
                get {
                    return ((int)(this[this.tableMDINTOUCHLOG.INTERNALMDINTOUCHLOGIDColumn]));
                }
                set {
                    this[this.tableMDINTOUCHLOG.INTERNALMDINTOUCHLOGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STATUS {
                get {
                    return ((string)(this[this.tableMDINTOUCHLOG.STATUSColumn]));
                }
                set {
                    this[this.tableMDINTOUCHLOG.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MSGTEXT {
                get {
                    return ((string)(this[this.tableMDINTOUCHLOG.MSGTEXTColumn]));
                }
                set {
                    this[this.tableMDINTOUCHLOG.MSGTEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATETIME {
                get {
                    return ((global::System.DateTime)(this[this.tableMDINTOUCHLOG.DATETIMEColumn]));
                }
                set {
                    this[this.tableMDINTOUCHLOG.DATETIMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MIRTH_HL7_LOGRow : global::System.Data.DataRow {
            
            private MIRTH_HL7_LOGDataTable tableMIRTH_HL7_LOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MIRTH_HL7_LOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMIRTH_HL7_LOG = ((MIRTH_HL7_LOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MIRTHHL7LOGID {
                get {
                    return ((int)(this[this.tableMIRTH_HL7_LOG.MIRTHHL7LOGIDColumn]));
                }
                set {
                    this[this.tableMIRTH_HL7_LOG.MIRTHHL7LOGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RECORDID {
                get {
                    try {
                        return ((int)(this[this.tableMIRTH_HL7_LOG.RECORDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECORDID\' in table \'MIRTH_HL7_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMIRTH_HL7_LOG.RECORDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMECOMPLETED {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMIRTH_HL7_LOG.TIMECOMPLETEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIMECOMPLETED\' in table \'MIRTH_HL7_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMIRTH_HL7_LOG.TIMECOMPLETEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTLASTNAME {
                get {
                    try {
                        return ((string)(this[this.tableMIRTH_HL7_LOG.PATIENTLASTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENTLASTNAME\' in table \'MIRTH_HL7_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMIRTH_HL7_LOG.PATIENTLASTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTFIRSTNAME {
                get {
                    try {
                        return ((string)(this[this.tableMIRTH_HL7_LOG.PATIENTFIRSTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENTFIRSTNAME\' in table \'MIRTH_HL7_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMIRTH_HL7_LOG.PATIENTFIRSTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTID {
                get {
                    try {
                        return ((string)(this[this.tableMIRTH_HL7_LOG.PATIENTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENTID\' in table \'MIRTH_HL7_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMIRTH_HL7_LOG.PATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ISSUEROFPATIENTID {
                get {
                    try {
                        return ((string)(this[this.tableMIRTH_HL7_LOG.ISSUEROFPATIENTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISSUEROFPATIENTID\' in table \'MIRTH_HL7_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMIRTH_HL7_LOG.ISSUEROFPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSIONNUMBER {
                get {
                    try {
                        return ((string)(this[this.tableMIRTH_HL7_LOG.ACCESSIONNUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCESSIONNUMBER\' in table \'MIRTH_HL7_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMIRTH_HL7_LOG.ACCESSIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REPORTTITLE {
                get {
                    try {
                        return ((string)(this[this.tableMIRTH_HL7_LOG.REPORTTITLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REPORTTITLE\' in table \'MIRTH_HL7_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMIRTH_HL7_LOG.REPORTTITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESTINATIONNAMES {
                get {
                    try {
                        return ((string)(this[this.tableMIRTH_HL7_LOG.DESTINATIONNAMESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESTINATIONNAMES\' in table \'MIRTH_HL7_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMIRTH_HL7_LOG.DESTINATIONNAMESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRECORDIDNull() {
                return this.IsNull(this.tableMIRTH_HL7_LOG.RECORDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRECORDIDNull() {
                this[this.tableMIRTH_HL7_LOG.RECORDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTIMECOMPLETEDNull() {
                return this.IsNull(this.tableMIRTH_HL7_LOG.TIMECOMPLETEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTIMECOMPLETEDNull() {
                this[this.tableMIRTH_HL7_LOG.TIMECOMPLETEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPATIENTLASTNAMENull() {
                return this.IsNull(this.tableMIRTH_HL7_LOG.PATIENTLASTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPATIENTLASTNAMENull() {
                this[this.tableMIRTH_HL7_LOG.PATIENTLASTNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPATIENTFIRSTNAMENull() {
                return this.IsNull(this.tableMIRTH_HL7_LOG.PATIENTFIRSTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPATIENTFIRSTNAMENull() {
                this[this.tableMIRTH_HL7_LOG.PATIENTFIRSTNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPATIENTIDNull() {
                return this.IsNull(this.tableMIRTH_HL7_LOG.PATIENTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPATIENTIDNull() {
                this[this.tableMIRTH_HL7_LOG.PATIENTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsISSUEROFPATIENTIDNull() {
                return this.IsNull(this.tableMIRTH_HL7_LOG.ISSUEROFPATIENTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetISSUEROFPATIENTIDNull() {
                this[this.tableMIRTH_HL7_LOG.ISSUEROFPATIENTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCESSIONNUMBERNull() {
                return this.IsNull(this.tableMIRTH_HL7_LOG.ACCESSIONNUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCESSIONNUMBERNull() {
                this[this.tableMIRTH_HL7_LOG.ACCESSIONNUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREPORTTITLENull() {
                return this.IsNull(this.tableMIRTH_HL7_LOG.REPORTTITLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREPORTTITLENull() {
                this[this.tableMIRTH_HL7_LOG.REPORTTITLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESTINATIONNAMESNull() {
                return this.IsNull(this.tableMIRTH_HL7_LOG.DESTINATIONNAMESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESTINATIONNAMESNull() {
                this[this.tableMIRTH_HL7_LOG.DESTINATIONNAMESColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MPPSTRANSMITLOGRow : global::System.Data.DataRow {
            
            private MPPSTRANSMITLOGDataTable tableMPPSTRANSMITLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MPPSTRANSMITLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMPPSTRANSMITLOG = ((MPPSTRANSMITLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableMPPSTRANSMITLOG.ENTRYIDColumn]));
                }
                set {
                    this[this.tableMPPSTRANSMITLOG.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMESTARTED {
                get {
                    return ((global::System.DateTime)(this[this.tableMPPSTRANSMITLOG.TIMESTARTEDColumn]));
                }
                set {
                    this[this.tableMPPSTRANSMITLOG.TIMESTARTEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMEFINISHED {
                get {
                    return ((global::System.DateTime)(this[this.tableMPPSTRANSMITLOG.TIMEFINISHEDColumn]));
                }
                set {
                    this[this.tableMPPSTRANSMITLOG.TIMEFINISHEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTID {
                get {
                    return ((string)(this[this.tableMPPSTRANSMITLOG.PATIENTIDColumn]));
                }
                set {
                    this[this.tableMPPSTRANSMITLOG.PATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ISSUEROFPATIENTID {
                get {
                    return ((string)(this[this.tableMPPSTRANSMITLOG.ISSUEROFPATIENTIDColumn]));
                }
                set {
                    this[this.tableMPPSTRANSMITLOG.ISSUEROFPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STUDYINSTANCEUID {
                get {
                    return ((string)(this[this.tableMPPSTRANSMITLOG.STUDYINSTANCEUIDColumn]));
                }
                set {
                    this[this.tableMPPSTRANSMITLOG.STUDYINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSIONNUMBER {
                get {
                    return ((string)(this[this.tableMPPSTRANSMITLOG.ACCESSIONNUMBERColumn]));
                }
                set {
                    this[this.tableMPPSTRANSMITLOG.ACCESSIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERNAME {
                get {
                    return ((string)(this[this.tableMPPSTRANSMITLOG.USERNAMEColumn]));
                }
                set {
                    this[this.tableMPPSTRANSMITLOG.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SERVICENAME {
                get {
                    return ((string)(this[this.tableMPPSTRANSMITLOG.SERVICENAMEColumn]));
                }
                set {
                    this[this.tableMPPSTRANSMITLOG.SERVICENAMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NETSUITEERRORLOGRow : global::System.Data.DataRow {
            
            private NETSUITEERRORLOGDataTable tableNETSUITEERRORLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NETSUITEERRORLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNETSUITEERRORLOG = ((NETSUITEERRORLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LOGID {
                get {
                    return ((int)(this[this.tableNETSUITEERRORLOG.LOGIDColumn]));
                }
                set {
                    this[this.tableNETSUITEERRORLOG.LOGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STUDYINSTANCEUID {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITEERRORLOG.STUDYINSTANCEUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STUDYINSTANCEUID\' in table \'NETSUITEERRORLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITEERRORLOG.STUDYINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSIONNUMBER {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITEERRORLOG.ACCESSIONNUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCESSIONNUMBER\' in table \'NETSUITEERRORLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITEERRORLOG.ACCESSIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TRANSACTIONTYPE {
                get {
                    return ((int)(this[this.tableNETSUITEERRORLOG.TRANSACTIONTYPEColumn]));
                }
                set {
                    this[this.tableNETSUITEERRORLOG.TRANSACTIONTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ERRORMESSAGE {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITEERRORLOG.ERRORMESSAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ERRORMESSAGE\' in table \'NETSUITEERRORLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITEERRORLOG.ERRORMESSAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ERRORDATETIME {
                get {
                    return ((global::System.DateTime)(this[this.tableNETSUITEERRORLOG.ERRORDATETIMEColumn]));
                }
                set {
                    this[this.tableNETSUITEERRORLOG.ERRORDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INSTITUTION {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITEERRORLOG.INSTITUTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSTITUTION\' in table \'NETSUITEERRORLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITEERRORLOG.INSTITUTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTID {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITEERRORLOG.PATIENTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENTID\' in table \'NETSUITEERRORLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITEERRORLOG.PATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ISSUEROFPATIENTID {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITEERRORLOG.ISSUEROFPATIENTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISSUEROFPATIENTID\' in table \'NETSUITEERRORLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITEERRORLOG.ISSUEROFPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SCHEDULEDMODALITY {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITEERRORLOG.SCHEDULEDMODALITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHEDULEDMODALITY\' in table \'NETSUITEERRORLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITEERRORLOG.SCHEDULEDMODALITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SCHEDULEDBODYPART {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITEERRORLOG.SCHEDULEDBODYPARTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHEDULEDBODYPART\' in table \'NETSUITEERRORLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITEERRORLOG.SCHEDULEDBODYPARTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MULTIACQUISITION {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITEERRORLOG.MULTIACQUISITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MULTIACQUISITION\' in table \'NETSUITEERRORLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITEERRORLOG.MULTIACQUISITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITEERRORLOG.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'NETSUITEERRORLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITEERRORLOG.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime STUDYTRANSITIONDATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNETSUITEERRORLOG.STUDYTRANSITIONDATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STUDYTRANSITIONDATETIME\' in table \'NETSUITEERRORLOG\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITEERRORLOG.STUDYTRANSITIONDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTUDYINSTANCEUIDNull() {
                return this.IsNull(this.tableNETSUITEERRORLOG.STUDYINSTANCEUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTUDYINSTANCEUIDNull() {
                this[this.tableNETSUITEERRORLOG.STUDYINSTANCEUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCESSIONNUMBERNull() {
                return this.IsNull(this.tableNETSUITEERRORLOG.ACCESSIONNUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCESSIONNUMBERNull() {
                this[this.tableNETSUITEERRORLOG.ACCESSIONNUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsERRORMESSAGENull() {
                return this.IsNull(this.tableNETSUITEERRORLOG.ERRORMESSAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetERRORMESSAGENull() {
                this[this.tableNETSUITEERRORLOG.ERRORMESSAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINSTITUTIONNull() {
                return this.IsNull(this.tableNETSUITEERRORLOG.INSTITUTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINSTITUTIONNull() {
                this[this.tableNETSUITEERRORLOG.INSTITUTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPATIENTIDNull() {
                return this.IsNull(this.tableNETSUITEERRORLOG.PATIENTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPATIENTIDNull() {
                this[this.tableNETSUITEERRORLOG.PATIENTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsISSUEROFPATIENTIDNull() {
                return this.IsNull(this.tableNETSUITEERRORLOG.ISSUEROFPATIENTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetISSUEROFPATIENTIDNull() {
                this[this.tableNETSUITEERRORLOG.ISSUEROFPATIENTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSCHEDULEDMODALITYNull() {
                return this.IsNull(this.tableNETSUITEERRORLOG.SCHEDULEDMODALITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSCHEDULEDMODALITYNull() {
                this[this.tableNETSUITEERRORLOG.SCHEDULEDMODALITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSCHEDULEDBODYPARTNull() {
                return this.IsNull(this.tableNETSUITEERRORLOG.SCHEDULEDBODYPARTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSCHEDULEDBODYPARTNull() {
                this[this.tableNETSUITEERRORLOG.SCHEDULEDBODYPARTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMULTIACQUISITIONNull() {
                return this.IsNull(this.tableNETSUITEERRORLOG.MULTIACQUISITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMULTIACQUISITIONNull() {
                this[this.tableNETSUITEERRORLOG.MULTIACQUISITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableNETSUITEERRORLOG.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTATUSNull() {
                this[this.tableNETSUITEERRORLOG.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTUDYTRANSITIONDATETIMENull() {
                return this.IsNull(this.tableNETSUITEERRORLOG.STUDYTRANSITIONDATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTUDYTRANSITIONDATETIMENull() {
                this[this.tableNETSUITEERRORLOG.STUDYTRANSITIONDATETIMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NETSUITELOGRow : global::System.Data.DataRow {
            
            private NETSUITELOGDataTable tableNETSUITELOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NETSUITELOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNETSUITELOG = ((NETSUITELOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LOGID {
                get {
                    return ((int)(this[this.tableNETSUITELOG.LOGIDColumn]));
                }
                set {
                    this[this.tableNETSUITELOG.LOGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STUDYINSTANCEUID {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITELOG.STUDYINSTANCEUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STUDYINSTANCEUID\' in table \'NETSUITELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITELOG.STUDYINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSIONNUMBER {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITELOG.ACCESSIONNUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCESSIONNUMBER\' in table \'NETSUITELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITELOG.ACCESSIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TRANSACTIONTYPE {
                get {
                    try {
                        return ((int)(this[this.tableNETSUITELOG.TRANSACTIONTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRANSACTIONTYPE\' in table \'NETSUITELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITELOG.TRANSACTIONTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FINISHTIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNETSUITELOG.FINISHTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINISHTIME\' in table \'NETSUITELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITELOG.FINISHTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INSTITUTION {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITELOG.INSTITUTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSTITUTION\' in table \'NETSUITELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITELOG.INSTITUTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTID {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITELOG.PATIENTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENTID\' in table \'NETSUITELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITELOG.PATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ISSUEROFPATIENTID {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITELOG.ISSUEROFPATIENTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISSUEROFPATIENTID\' in table \'NETSUITELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITELOG.ISSUEROFPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SCHEDULEDMODALITY {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITELOG.SCHEDULEDMODALITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHEDULEDMODALITY\' in table \'NETSUITELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITELOG.SCHEDULEDMODALITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SCHEDULEDBODYPART {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITELOG.SCHEDULEDBODYPARTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHEDULEDBODYPART\' in table \'NETSUITELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITELOG.SCHEDULEDBODYPARTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITELOG.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'NETSUITELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITELOG.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MULTIACQUISITION {
                get {
                    try {
                        return ((string)(this[this.tableNETSUITELOG.MULTIACQUISITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MULTIACQUISITION\' in table \'NETSUITELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITELOG.MULTIACQUISITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime STUDYTRANSITIONDATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNETSUITELOG.STUDYTRANSITIONDATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STUDYTRANSITIONDATETIME\' in table \'NETSUITELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNETSUITELOG.STUDYTRANSITIONDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTUDYINSTANCEUIDNull() {
                return this.IsNull(this.tableNETSUITELOG.STUDYINSTANCEUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTUDYINSTANCEUIDNull() {
                this[this.tableNETSUITELOG.STUDYINSTANCEUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCESSIONNUMBERNull() {
                return this.IsNull(this.tableNETSUITELOG.ACCESSIONNUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCESSIONNUMBERNull() {
                this[this.tableNETSUITELOG.ACCESSIONNUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTRANSACTIONTYPENull() {
                return this.IsNull(this.tableNETSUITELOG.TRANSACTIONTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTRANSACTIONTYPENull() {
                this[this.tableNETSUITELOG.TRANSACTIONTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFINISHTIMENull() {
                return this.IsNull(this.tableNETSUITELOG.FINISHTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFINISHTIMENull() {
                this[this.tableNETSUITELOG.FINISHTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINSTITUTIONNull() {
                return this.IsNull(this.tableNETSUITELOG.INSTITUTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINSTITUTIONNull() {
                this[this.tableNETSUITELOG.INSTITUTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPATIENTIDNull() {
                return this.IsNull(this.tableNETSUITELOG.PATIENTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPATIENTIDNull() {
                this[this.tableNETSUITELOG.PATIENTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsISSUEROFPATIENTIDNull() {
                return this.IsNull(this.tableNETSUITELOG.ISSUEROFPATIENTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetISSUEROFPATIENTIDNull() {
                this[this.tableNETSUITELOG.ISSUEROFPATIENTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSCHEDULEDMODALITYNull() {
                return this.IsNull(this.tableNETSUITELOG.SCHEDULEDMODALITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSCHEDULEDMODALITYNull() {
                this[this.tableNETSUITELOG.SCHEDULEDMODALITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSCHEDULEDBODYPARTNull() {
                return this.IsNull(this.tableNETSUITELOG.SCHEDULEDBODYPARTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSCHEDULEDBODYPARTNull() {
                this[this.tableNETSUITELOG.SCHEDULEDBODYPARTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableNETSUITELOG.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTATUSNull() {
                this[this.tableNETSUITELOG.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMULTIACQUISITIONNull() {
                return this.IsNull(this.tableNETSUITELOG.MULTIACQUISITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMULTIACQUISITIONNull() {
                this[this.tableNETSUITELOG.MULTIACQUISITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTUDYTRANSITIONDATETIMENull() {
                return this.IsNull(this.tableNETSUITELOG.STUDYTRANSITIONDATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTUDYTRANSITIONDATETIMENull() {
                this[this.tableNETSUITELOG.STUDYTRANSITIONDATETIMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PATIENTDIRECTLOGRow : global::System.Data.DataRow {
            
            private PATIENTDIRECTLOGDataTable tablePATIENTDIRECTLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PATIENTDIRECTLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePATIENTDIRECTLOG = ((PATIENTDIRECTLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int INTERNALPATIENTID {
                get {
                    return ((int)(this[this.tablePATIENTDIRECTLOG.INTERNALPATIENTIDColumn]));
                }
                set {
                    this[this.tablePATIENTDIRECTLOG.INTERNALPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RECEIVEDDATETIME {
                get {
                    return ((global::System.DateTime)(this[this.tablePATIENTDIRECTLOG.RECEIVEDDATETIMEColumn]));
                }
                set {
                    this[this.tablePATIENTDIRECTLOG.RECEIVEDDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MESSAGEID {
                get {
                    return ((int)(this[this.tablePATIENTDIRECTLOG.MESSAGEIDColumn]));
                }
                set {
                    this[this.tablePATIENTDIRECTLOG.MESSAGEIDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PATIENTMERGELOGRow : global::System.Data.DataRow {
            
            private PATIENTMERGELOGDataTable tablePATIENTMERGELOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PATIENTMERGELOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePATIENTMERGELOG = ((PATIENTMERGELOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int INTERNALPATIENTID {
                get {
                    return ((int)(this[this.tablePATIENTMERGELOG.INTERNALPATIENTIDColumn]));
                }
                set {
                    this[this.tablePATIENTMERGELOG.INTERNALPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OLDPATIENTID {
                get {
                    return ((string)(this[this.tablePATIENTMERGELOG.OLDPATIENTIDColumn]));
                }
                set {
                    this[this.tablePATIENTMERGELOG.OLDPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OLDISSUEROFPATIENTID {
                get {
                    return ((string)(this[this.tablePATIENTMERGELOG.OLDISSUEROFPATIENTIDColumn]));
                }
                set {
                    this[this.tablePATIENTMERGELOG.OLDISSUEROFPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MERGEDTIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePATIENTMERGELOG.MERGEDTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MERGEDTIME\' in table \'PATIENTMERGELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePATIENTMERGELOG.MERGEDTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERNAME {
                get {
                    try {
                        return ((string)(this[this.tablePATIENTMERGELOG.USERNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USERNAME\' in table \'PATIENTMERGELOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePATIENTMERGELOG.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMERGEDTIMENull() {
                return this.IsNull(this.tablePATIENTMERGELOG.MERGEDTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMERGEDTIMENull() {
                this[this.tablePATIENTMERGELOG.MERGEDTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUSERNAMENull() {
                return this.IsNull(this.tablePATIENTMERGELOG.USERNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUSERNAMENull() {
                this[this.tablePATIENTMERGELOG.USERNAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PRINTLOGRow : global::System.Data.DataRow {
            
            private PRINTLOGDataTable tablePRINTLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PRINTLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePRINTLOG = ((PRINTLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tablePRINTLOG.ENTRYIDColumn]));
                }
                set {
                    this[this.tablePRINTLOG.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMESTARTED {
                get {
                    return ((global::System.DateTime)(this[this.tablePRINTLOG.TIMESTARTEDColumn]));
                }
                set {
                    this[this.tablePRINTLOG.TIMESTARTEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMEFINISHED {
                get {
                    return ((global::System.DateTime)(this[this.tablePRINTLOG.TIMEFINISHEDColumn]));
                }
                set {
                    this[this.tablePRINTLOG.TIMEFINISHEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERNAME {
                get {
                    return ((string)(this[this.tablePRINTLOG.USERNAMEColumn]));
                }
                set {
                    this[this.tablePRINTLOG.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NUMOFPRINT {
                get {
                    return ((int)(this[this.tablePRINTLOG.NUMOFPRINTColumn]));
                }
                set {
                    this[this.tablePRINTLOG.NUMOFPRINTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SERVICENAME {
                get {
                    try {
                        return ((string)(this[this.tablePRINTLOG.SERVICENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVICENAME\' in table \'PRINTLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRINTLOG.SERVICENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PRINTJOBID {
                get {
                    return ((int)(this[this.tablePRINTLOG.PRINTJOBIDColumn]));
                }
                set {
                    this[this.tablePRINTLOG.PRINTJOBIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PRINTPAGES {
                get {
                    return ((int)(this[this.tablePRINTLOG.PRINTPAGESColumn]));
                }
                set {
                    this[this.tablePRINTLOG.PRINTPAGESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSERVICENAMENull() {
                return this.IsNull(this.tablePRINTLOG.SERVICENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSERVICENAMENull() {
                this[this.tablePRINTLOG.SERVICENAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PRRELEASERow : global::System.Data.DataRow {
            
            private PRRELEASEDataTable tablePRRELEASE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PRRELEASERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePRRELEASE = ((PRRELEASEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TARGET {
                get {
                    return ((string)(this[this.tablePRRELEASE.TARGETColumn]));
                }
                set {
                    this[this.tablePRRELEASE.TARGETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VERNUM {
                get {
                    return ((int)(this[this.tablePRRELEASE.VERNUMColumn]));
                }
                set {
                    this[this.tablePRRELEASE.VERNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LASTUPDATED {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePRRELEASE.LASTUPDATEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LASTUPDATED\' in table \'PRRELEASE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRRELEASE.LASTUPDATEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tablePRRELEASE.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'PRRELEASE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRRELEASE.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLASTUPDATEDNull() {
                return this.IsNull(this.tablePRRELEASE.LASTUPDATEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLASTUPDATEDNull() {
                this[this.tablePRRELEASE.LASTUPDATEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tablePRRELEASE.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESCRIPTIONNull() {
                this[this.tablePRRELEASE.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PRVERSIONRow : global::System.Data.DataRow {
            
            private PRVERSIONDataTable tablePRVERSION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PRVERSIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePRVERSION = ((PRVERSIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VERNUM {
                get {
                    return ((int)(this[this.tablePRVERSION.VERNUMColumn]));
                }
                set {
                    this[this.tablePRVERSION.VERNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LASTUPDATED {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePRVERSION.LASTUPDATEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LASTUPDATED\' in table \'PRVERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRVERSION.LASTUPDATEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLASTUPDATEDNull() {
                return this.IsNull(this.tablePRVERSION.LASTUPDATEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLASTUPDATEDNull() {
                this[this.tablePRVERSION.LASTUPDATEDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RECEIVESTUDYLOGRow : global::System.Data.DataRow {
            
            private RECEIVESTUDYLOGDataTable tableRECEIVESTUDYLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RECEIVESTUDYLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRECEIVESTUDYLOG = ((RECEIVESTUDYLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableRECEIVESTUDYLOG.ENTRYIDColumn]));
                }
                set {
                    this[this.tableRECEIVESTUDYLOG.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ISSUEROFPATIENTID {
                get {
                    return ((string)(this[this.tableRECEIVESTUDYLOG.ISSUEROFPATIENTIDColumn]));
                }
                set {
                    this[this.tableRECEIVESTUDYLOG.ISSUEROFPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTID {
                get {
                    return ((string)(this[this.tableRECEIVESTUDYLOG.PATIENTIDColumn]));
                }
                set {
                    this[this.tableRECEIVESTUDYLOG.PATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STUDYINSTANCEUID {
                get {
                    return ((string)(this[this.tableRECEIVESTUDYLOG.STUDYINSTANCEUIDColumn]));
                }
                set {
                    this[this.tableRECEIVESTUDYLOG.STUDYINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSIONNUMBER {
                get {
                    return ((string)(this[this.tableRECEIVESTUDYLOG.ACCESSIONNUMBERColumn]));
                }
                set {
                    this[this.tableRECEIVESTUDYLOG.ACCESSIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SERVICENAME {
                get {
                    try {
                        return ((string)(this[this.tableRECEIVESTUDYLOG.SERVICENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVICENAME\' in table \'RECEIVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECEIVESTUDYLOG.SERVICENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMESTARTED {
                get {
                    return ((global::System.DateTime)(this[this.tableRECEIVESTUDYLOG.TIMESTARTEDColumn]));
                }
                set {
                    this[this.tableRECEIVESTUDYLOG.TIMESTARTEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMEFINISHED {
                get {
                    return ((global::System.DateTime)(this[this.tableRECEIVESTUDYLOG.TIMEFINISHEDColumn]));
                }
                set {
                    this[this.tableRECEIVESTUDYLOG.TIMEFINISHEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NUMOBJECTS {
                get {
                    return ((int)(this[this.tableRECEIVESTUDYLOG.NUMOBJECTSColumn]));
                }
                set {
                    this[this.tableRECEIVESTUDYLOG.NUMOBJECTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSERVICENAMENull() {
                return this.IsNull(this.tableRECEIVESTUDYLOG.SERVICENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSERVICENAMENull() {
                this[this.tableRECEIVESTUDYLOG.SERVICENAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class REFERRALINBOXLOGRow : global::System.Data.DataRow {
            
            private REFERRALINBOXLOGDataTable tableREFERRALINBOXLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal REFERRALINBOXLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableREFERRALINBOXLOG = ((REFERRALINBOXLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LOGID {
                get {
                    return ((int)(this[this.tableREFERRALINBOXLOG.LOGIDColumn]));
                }
                set {
                    this[this.tableREFERRALINBOXLOG.LOGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTFIRSTNAME {
                get {
                    try {
                        return ((string)(this[this.tableREFERRALINBOXLOG.PATIENTFIRSTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENTFIRSTNAME\' in table \'REFERRALINBOXLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREFERRALINBOXLOG.PATIENTFIRSTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTLASTNAME {
                get {
                    try {
                        return ((string)(this[this.tableREFERRALINBOXLOG.PATIENTLASTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENTLASTNAME\' in table \'REFERRALINBOXLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREFERRALINBOXLOG.PATIENTLASTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LOGDATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableREFERRALINBOXLOG.LOGDATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOGDATETIME\' in table \'REFERRALINBOXLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREFERRALINBOXLOG.LOGDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTPHONE {
                get {
                    try {
                        return ((string)(this[this.tableREFERRALINBOXLOG.PATIENTPHONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENTPHONE\' in table \'REFERRALINBOXLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREFERRALINBOXLOG.PATIENTPHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime REQUESTEDDATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableREFERRALINBOXLOG.REQUESTEDDATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REQUESTEDDATETIME\' in table \'REFERRALINBOXLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREFERRALINBOXLOG.REQUESTEDDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AUTHORIZATIONNUMBER {
                get {
                    try {
                        return ((string)(this[this.tableREFERRALINBOXLOG.AUTHORIZATIONNUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AUTHORIZATIONNUMBER\' in table \'REFERRALINBOXLOG\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableREFERRALINBOXLOG.AUTHORIZATIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FACILITY {
                get {
                    try {
                        return ((string)(this[this.tableREFERRALINBOXLOG.FACILITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FACILITY\' in table \'REFERRALINBOXLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREFERRALINBOXLOG.FACILITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERNAME {
                get {
                    try {
                        return ((string)(this[this.tableREFERRALINBOXLOG.USERNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USERNAME\' in table \'REFERRALINBOXLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREFERRALINBOXLOG.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERFIRSTNAME {
                get {
                    try {
                        return ((string)(this[this.tableREFERRALINBOXLOG.USERFIRSTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USERFIRSTNAME\' in table \'REFERRALINBOXLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREFERRALINBOXLOG.USERFIRSTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERLASTNAME {
                get {
                    try {
                        return ((string)(this[this.tableREFERRALINBOXLOG.USERLASTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USERLASTNAME\' in table \'REFERRALINBOXLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREFERRALINBOXLOG.USERLASTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STUDYTYPE {
                get {
                    try {
                        return ((string)(this[this.tableREFERRALINBOXLOG.STUDYTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STUDYTYPE\' in table \'REFERRALINBOXLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREFERRALINBOXLOG.STUDYTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ACTIONTYPE {
                get {
                    try {
                        return ((int)(this[this.tableREFERRALINBOXLOG.ACTIONTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACTIONTYPE\' in table \'REFERRALINBOXLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREFERRALINBOXLOG.ACTIONTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CANCELLATIONUSER {
                get {
                    try {
                        return ((int)(this[this.tableREFERRALINBOXLOG.CANCELLATIONUSERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CANCELLATIONUSER\' in table \'REFERRALINBOXLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREFERRALINBOXLOG.CANCELLATIONUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPATIENTFIRSTNAMENull() {
                return this.IsNull(this.tableREFERRALINBOXLOG.PATIENTFIRSTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPATIENTFIRSTNAMENull() {
                this[this.tableREFERRALINBOXLOG.PATIENTFIRSTNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPATIENTLASTNAMENull() {
                return this.IsNull(this.tableREFERRALINBOXLOG.PATIENTLASTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPATIENTLASTNAMENull() {
                this[this.tableREFERRALINBOXLOG.PATIENTLASTNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOGDATETIMENull() {
                return this.IsNull(this.tableREFERRALINBOXLOG.LOGDATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOGDATETIMENull() {
                this[this.tableREFERRALINBOXLOG.LOGDATETIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPATIENTPHONENull() {
                return this.IsNull(this.tableREFERRALINBOXLOG.PATIENTPHONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPATIENTPHONENull() {
                this[this.tableREFERRALINBOXLOG.PATIENTPHONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREQUESTEDDATETIMENull() {
                return this.IsNull(this.tableREFERRALINBOXLOG.REQUESTEDDATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREQUESTEDDATETIMENull() {
                this[this.tableREFERRALINBOXLOG.REQUESTEDDATETIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAUTHORIZATIONNUMBERNull() {
                return this.IsNull(this.tableREFERRALINBOXLOG.AUTHORIZATIONNUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAUTHORIZATIONNUMBERNull() {
                this[this.tableREFERRALINBOXLOG.AUTHORIZATIONNUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFACILITYNull() {
                return this.IsNull(this.tableREFERRALINBOXLOG.FACILITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFACILITYNull() {
                this[this.tableREFERRALINBOXLOG.FACILITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUSERNAMENull() {
                return this.IsNull(this.tableREFERRALINBOXLOG.USERNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUSERNAMENull() {
                this[this.tableREFERRALINBOXLOG.USERNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUSERFIRSTNAMENull() {
                return this.IsNull(this.tableREFERRALINBOXLOG.USERFIRSTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUSERFIRSTNAMENull() {
                this[this.tableREFERRALINBOXLOG.USERFIRSTNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUSERLASTNAMENull() {
                return this.IsNull(this.tableREFERRALINBOXLOG.USERLASTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUSERLASTNAMENull() {
                this[this.tableREFERRALINBOXLOG.USERLASTNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTUDYTYPENull() {
                return this.IsNull(this.tableREFERRALINBOXLOG.STUDYTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTUDYTYPENull() {
                this[this.tableREFERRALINBOXLOG.STUDYTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACTIONTYPENull() {
                return this.IsNull(this.tableREFERRALINBOXLOG.ACTIONTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACTIONTYPENull() {
                this[this.tableREFERRALINBOXLOG.ACTIONTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCANCELLATIONUSERNull() {
                return this.IsNull(this.tableREFERRALINBOXLOG.CANCELLATIONUSERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCANCELLATIONUSERNull() {
                this[this.tableREFERRALINBOXLOG.CANCELLATIONUSERColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class REQUESTFAILLOGRow : global::System.Data.DataRow {
            
            private REQUESTFAILLOGDataTable tableREQUESTFAILLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal REQUESTFAILLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableREQUESTFAILLOG = ((REQUESTFAILLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableREQUESTFAILLOG.ENTRYIDColumn]));
                }
                set {
                    this[this.tableREQUESTFAILLOG.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMESTARTED {
                get {
                    return ((global::System.DateTime)(this[this.tableREQUESTFAILLOG.TIMESTARTEDColumn]));
                }
                set {
                    this[this.tableREQUESTFAILLOG.TIMESTARTEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMEFAILED {
                get {
                    return ((global::System.DateTime)(this[this.tableREQUESTFAILLOG.TIMEFAILEDColumn]));
                }
                set {
                    this[this.tableREQUESTFAILLOG.TIMEFAILEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ISSUEROFPATIENTID {
                get {
                    return ((string)(this[this.tableREQUESTFAILLOG.ISSUEROFPATIENTIDColumn]));
                }
                set {
                    this[this.tableREQUESTFAILLOG.ISSUEROFPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTID {
                get {
                    return ((string)(this[this.tableREQUESTFAILLOG.PATIENTIDColumn]));
                }
                set {
                    this[this.tableREQUESTFAILLOG.PATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STUDYINSTANCEUID {
                get {
                    return ((string)(this[this.tableREQUESTFAILLOG.STUDYINSTANCEUIDColumn]));
                }
                set {
                    this[this.tableREQUESTFAILLOG.STUDYINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSIONNUMBER {
                get {
                    return ((string)(this[this.tableREQUESTFAILLOG.ACCESSIONNUMBERColumn]));
                }
                set {
                    this[this.tableREQUESTFAILLOG.ACCESSIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERNAME {
                get {
                    return ((string)(this[this.tableREQUESTFAILLOG.USERNAMEColumn]));
                }
                set {
                    this[this.tableREQUESTFAILLOG.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SERVICENAME {
                get {
                    try {
                        return ((string)(this[this.tableREQUESTFAILLOG.SERVICENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVICENAME\' in table \'REQUESTFAILLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREQUESTFAILLOG.SERVICENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableREQUESTFAILLOG.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'REQUESTFAILLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREQUESTFAILLOG.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PARTIALFAILURE {
                get {
                    return ((string)(this[this.tableREQUESTFAILLOG.PARTIALFAILUREColumn]));
                }
                set {
                    this[this.tableREQUESTFAILLOG.PARTIALFAILUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NUMFAILURES {
                get {
                    return ((int)(this[this.tableREQUESTFAILLOG.NUMFAILURESColumn]));
                }
                set {
                    this[this.tableREQUESTFAILLOG.NUMFAILURESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AUTOQUERY {
                get {
                    try {
                        return ((string)(this[this.tableREQUESTFAILLOG.AUTOQUERYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AUTOQUERY\' in table \'REQUESTFAILLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREQUESTFAILLOG.AUTOQUERYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSERVICENAMENull() {
                return this.IsNull(this.tableREQUESTFAILLOG.SERVICENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSERVICENAMENull() {
                this[this.tableREQUESTFAILLOG.SERVICENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableREQUESTFAILLOG.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESCRIPTIONNull() {
                this[this.tableREQUESTFAILLOG.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAUTOQUERYNull() {
                return this.IsNull(this.tableREQUESTFAILLOG.AUTOQUERYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAUTOQUERYNull() {
                this[this.tableREQUESTFAILLOG.AUTOQUERYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class REQUESTLOGRow : global::System.Data.DataRow {
            
            private REQUESTLOGDataTable tableREQUESTLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal REQUESTLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableREQUESTLOG = ((REQUESTLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableREQUESTLOG.ENTRYIDColumn]));
                }
                set {
                    this[this.tableREQUESTLOG.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMESTARTED {
                get {
                    return ((global::System.DateTime)(this[this.tableREQUESTLOG.TIMESTARTEDColumn]));
                }
                set {
                    this[this.tableREQUESTLOG.TIMESTARTEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMEFINISHED {
                get {
                    return ((global::System.DateTime)(this[this.tableREQUESTLOG.TIMEFINISHEDColumn]));
                }
                set {
                    this[this.tableREQUESTLOG.TIMEFINISHEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ISSUEROFPATIENTID {
                get {
                    return ((string)(this[this.tableREQUESTLOG.ISSUEROFPATIENTIDColumn]));
                }
                set {
                    this[this.tableREQUESTLOG.ISSUEROFPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTID {
                get {
                    return ((string)(this[this.tableREQUESTLOG.PATIENTIDColumn]));
                }
                set {
                    this[this.tableREQUESTLOG.PATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STUDYINSTANCEUID {
                get {
                    return ((string)(this[this.tableREQUESTLOG.STUDYINSTANCEUIDColumn]));
                }
                set {
                    this[this.tableREQUESTLOG.STUDYINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSIONNUMBER {
                get {
                    return ((string)(this[this.tableREQUESTLOG.ACCESSIONNUMBERColumn]));
                }
                set {
                    this[this.tableREQUESTLOG.ACCESSIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERNAME {
                get {
                    return ((string)(this[this.tableREQUESTLOG.USERNAMEColumn]));
                }
                set {
                    this[this.tableREQUESTLOG.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SERVICENAME {
                get {
                    try {
                        return ((string)(this[this.tableREQUESTLOG.SERVICENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVICENAME\' in table \'REQUESTLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREQUESTLOG.SERVICENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AUTOQUERY {
                get {
                    try {
                        return ((string)(this[this.tableREQUESTLOG.AUTOQUERYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AUTOQUERY\' in table \'REQUESTLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREQUESTLOG.AUTOQUERYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSERVICENAMENull() {
                return this.IsNull(this.tableREQUESTLOG.SERVICENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSERVICENAMENull() {
                this[this.tableREQUESTLOG.SERVICENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAUTOQUERYNull() {
                return this.IsNull(this.tableREQUESTLOG.AUTOQUERYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAUTOQUERYNull() {
                this[this.tableREQUESTLOG.AUTOQUERYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RETRIEVESTUDYLOGRow : global::System.Data.DataRow {
            
            private RETRIEVESTUDYLOGDataTable tableRETRIEVESTUDYLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RETRIEVESTUDYLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRETRIEVESTUDYLOG = ((RETRIEVESTUDYLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ADDEDID {
                get {
                    return ((int)(this[this.tableRETRIEVESTUDYLOG.ADDEDIDColumn]));
                }
                set {
                    this[this.tableRETRIEVESTUDYLOG.ADDEDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STUDYINSTANCEUID {
                get {
                    return ((string)(this[this.tableRETRIEVESTUDYLOG.STUDYINSTANCEUIDColumn]));
                }
                set {
                    this[this.tableRETRIEVESTUDYLOG.STUDYINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime STUDYDATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRETRIEVESTUDYLOG.STUDYDATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STUDYDATETIME\' in table \'RETRIEVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRETRIEVESTUDYLOG.STUDYDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FINISHTIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRETRIEVESTUDYLOG.FINISHTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINISHTIME\' in table \'RETRIEVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRETRIEVESTUDYLOG.FINISHTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int STATUS {
                get {
                    try {
                        return ((int)(this[this.tableRETRIEVESTUDYLOG.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'RETRIEVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRETRIEVESTUDYLOG.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NUMOBJECTS {
                get {
                    try {
                        return ((int)(this[this.tableRETRIEVESTUDYLOG.NUMOBJECTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMOBJECTS\' in table \'RETRIEVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRETRIEVESTUDYLOG.NUMOBJECTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSIONNUMBER {
                get {
                    try {
                        return ((string)(this[this.tableRETRIEVESTUDYLOG.ACCESSIONNUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCESSIONNUMBER\' in table \'RETRIEVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRETRIEVESTUDYLOG.ACCESSIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTID {
                get {
                    try {
                        return ((string)(this[this.tableRETRIEVESTUDYLOG.PATIENTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENTID\' in table \'RETRIEVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRETRIEVESTUDYLOG.PATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ISSUEROFPATIENTID {
                get {
                    try {
                        return ((string)(this[this.tableRETRIEVESTUDYLOG.ISSUEROFPATIENTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISSUEROFPATIENTID\' in table \'RETRIEVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRETRIEVESTUDYLOG.ISSUEROFPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIRSTNAME {
                get {
                    try {
                        return ((string)(this[this.tableRETRIEVESTUDYLOG.FIRSTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIRSTNAME\' in table \'RETRIEVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRETRIEVESTUDYLOG.FIRSTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LASTNAME {
                get {
                    try {
                        return ((string)(this[this.tableRETRIEVESTUDYLOG.LASTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LASTNAME\' in table \'RETRIEVESTUDYLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRETRIEVESTUDYLOG.LASTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTUDYDATETIMENull() {
                return this.IsNull(this.tableRETRIEVESTUDYLOG.STUDYDATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTUDYDATETIMENull() {
                this[this.tableRETRIEVESTUDYLOG.STUDYDATETIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFINISHTIMENull() {
                return this.IsNull(this.tableRETRIEVESTUDYLOG.FINISHTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFINISHTIMENull() {
                this[this.tableRETRIEVESTUDYLOG.FINISHTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableRETRIEVESTUDYLOG.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTATUSNull() {
                this[this.tableRETRIEVESTUDYLOG.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUMOBJECTSNull() {
                return this.IsNull(this.tableRETRIEVESTUDYLOG.NUMOBJECTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUMOBJECTSNull() {
                this[this.tableRETRIEVESTUDYLOG.NUMOBJECTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCESSIONNUMBERNull() {
                return this.IsNull(this.tableRETRIEVESTUDYLOG.ACCESSIONNUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCESSIONNUMBERNull() {
                this[this.tableRETRIEVESTUDYLOG.ACCESSIONNUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPATIENTIDNull() {
                return this.IsNull(this.tableRETRIEVESTUDYLOG.PATIENTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPATIENTIDNull() {
                this[this.tableRETRIEVESTUDYLOG.PATIENTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsISSUEROFPATIENTIDNull() {
                return this.IsNull(this.tableRETRIEVESTUDYLOG.ISSUEROFPATIENTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetISSUEROFPATIENTIDNull() {
                this[this.tableRETRIEVESTUDYLOG.ISSUEROFPATIENTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFIRSTNAMENull() {
                return this.IsNull(this.tableRETRIEVESTUDYLOG.FIRSTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFIRSTNAMENull() {
                this[this.tableRETRIEVESTUDYLOG.FIRSTNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLASTNAMENull() {
                return this.IsNull(this.tableRETRIEVESTUDYLOG.LASTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLASTNAMENull() {
                this[this.tableRETRIEVESTUDYLOG.LASTNAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RPTEXPORTLOGRow : global::System.Data.DataRow {
            
            private RPTEXPORTLOGDataTable tableRPTEXPORTLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RPTEXPORTLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRPTEXPORTLOG = ((RPTEXPORTLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableRPTEXPORTLOG.ENTRYIDColumn]));
                }
                set {
                    this[this.tableRPTEXPORTLOG.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EXPORTID {
                get {
                    return ((int)(this[this.tableRPTEXPORTLOG.EXPORTIDColumn]));
                }
                set {
                    this[this.tableRPTEXPORTLOG.EXPORTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SOPINSTANCEUID {
                get {
                    try {
                        return ((string)(this[this.tableRPTEXPORTLOG.SOPINSTANCEUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOPINSTANCEUID\' in table \'RPTEXPORTLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRPTEXPORTLOG.SOPINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSIONNUMBER {
                get {
                    try {
                        return ((string)(this[this.tableRPTEXPORTLOG.ACCESSIONNUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCESSIONNUMBER\' in table \'RPTEXPORTLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRPTEXPORTLOG.ACCESSIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTID {
                get {
                    return ((string)(this[this.tableRPTEXPORTLOG.PATIENTIDColumn]));
                }
                set {
                    this[this.tableRPTEXPORTLOG.PATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ISSUEROFPATIENTID {
                get {
                    return ((string)(this[this.tableRPTEXPORTLOG.ISSUEROFPATIENTIDColumn]));
                }
                set {
                    this[this.tableRPTEXPORTLOG.ISSUEROFPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMECOMPLETED {
                get {
                    return ((global::System.DateTime)(this[this.tableRPTEXPORTLOG.TIMECOMPLETEDColumn]));
                }
                set {
                    this[this.tableRPTEXPORTLOG.TIMECOMPLETEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXPORTEDFILEURL {
                get {
                    return ((string)(this[this.tableRPTEXPORTLOG.EXPORTEDFILEURLColumn]));
                }
                set {
                    this[this.tableRPTEXPORTLOG.EXPORTEDFILEURLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FACILITYNAME {
                get {
                    try {
                        return ((string)(this[this.tableRPTEXPORTLOG.FACILITYNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FACILITYNAME\' in table \'RPTEXPORTLOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRPTEXPORTLOG.FACILITYNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EXPORTTYPE {
                get {
                    return ((int)(this[this.tableRPTEXPORTLOG.EXPORTTYPEColumn]));
                }
                set {
                    this[this.tableRPTEXPORTLOG.EXPORTTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSOPINSTANCEUIDNull() {
                return this.IsNull(this.tableRPTEXPORTLOG.SOPINSTANCEUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSOPINSTANCEUIDNull() {
                this[this.tableRPTEXPORTLOG.SOPINSTANCEUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCESSIONNUMBERNull() {
                return this.IsNull(this.tableRPTEXPORTLOG.ACCESSIONNUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCESSIONNUMBERNull() {
                this[this.tableRPTEXPORTLOG.ACCESSIONNUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFACILITYNAMENull() {
                return this.IsNull(this.tableRPTEXPORTLOG.FACILITYNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFACILITYNAMENull() {
                this[this.tableRPTEXPORTLOG.FACILITYNAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class STORAGECOMMITLOGRow : global::System.Data.DataRow {
            
            private STORAGECOMMITLOGDataTable tableSTORAGECOMMITLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal STORAGECOMMITLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSTORAGECOMMITLOG = ((STORAGECOMMITLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableSTORAGECOMMITLOG.ENTRYIDColumn]));
                }
                set {
                    this[this.tableSTORAGECOMMITLOG.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SERVICENAME {
                get {
                    return ((string)(this[this.tableSTORAGECOMMITLOG.SERVICENAMEColumn]));
                }
                set {
                    this[this.tableSTORAGECOMMITLOG.SERVICENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STUDYINSTANCEUID {
                get {
                    return ((string)(this[this.tableSTORAGECOMMITLOG.STUDYINSTANCEUIDColumn]));
                }
                set {
                    this[this.tableSTORAGECOMMITLOG.STUDYINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSIONNUMBER {
                get {
                    return ((string)(this[this.tableSTORAGECOMMITLOG.ACCESSIONNUMBERColumn]));
                }
                set {
                    this[this.tableSTORAGECOMMITLOG.ACCESSIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NUMOBJECTS {
                get {
                    return ((int)(this[this.tableSTORAGECOMMITLOG.NUMOBJECTSColumn]));
                }
                set {
                    this[this.tableSTORAGECOMMITLOG.NUMOBJECTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMEFINISHED {
                get {
                    return ((global::System.DateTime)(this[this.tableSTORAGECOMMITLOG.TIMEFINISHEDColumn]));
                }
                set {
                    this[this.tableSTORAGECOMMITLOG.TIMEFINISHEDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class STUDYACCESSRow : global::System.Data.DataRow {
            
            private STUDYACCESSDataTable tableSTUDYACCESS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal STUDYACCESSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSTUDYACCESS = ((STUDYACCESSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STUDYINSTANCEUID {
                get {
                    return ((string)(this[this.tableSTUDYACCESS.STUDYINSTANCEUIDColumn]));
                }
                set {
                    this[this.tableSTUDYACCESS.STUDYINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ACCESSTIME {
                get {
                    return ((global::System.DateTime)(this[this.tableSTUDYACCESS.ACCESSTIMEColumn]));
                }
                set {
                    this[this.tableSTUDYACCESS.ACCESSTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERNAME {
                get {
                    return ((string)(this[this.tableSTUDYACCESS.USERNAMEColumn]));
                }
                set {
                    this[this.tableSTUDYACCESS.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSTYPE {
                get {
                    return ((string)(this[this.tableSTUDYACCESS.ACCESSTYPEColumn]));
                }
                set {
                    this[this.tableSTUDYACCESS.ACCESSTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int STATUSORDER {
                get {
                    return ((int)(this[this.tableSTUDYACCESS.STATUSORDERColumn]));
                }
                set {
                    this[this.tableSTUDYACCESS.STATUSORDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime STUDYDATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTUDYACCESS.STUDYDATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STUDYDATETIME\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.STUDYDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSIONNUMBER {
                get {
                    try {
                        return ((string)(this[this.tableSTUDYACCESS.ACCESSIONNUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCESSIONNUMBER\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.ACCESSIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INSTITUTIONNAME {
                get {
                    try {
                        return ((string)(this[this.tableSTUDYACCESS.INSTITUTIONNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSTITUTIONNAME\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.INSTITUTIONNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTID {
                get {
                    try {
                        return ((string)(this[this.tableSTUDYACCESS.PATIENTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENTID\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.PATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ISSUEROFPATIENTID {
                get {
                    try {
                        return ((string)(this[this.tableSTUDYACCESS.ISSUEROFPATIENTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISSUEROFPATIENTID\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.ISSUEROFPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTFULLNAME {
                get {
                    try {
                        return ((string)(this[this.tableSTUDYACCESS.PATIENTFULLNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENTFULLNAME\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.PATIENTFULLNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableSTUDYACCESS.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int USERID {
                get {
                    try {
                        return ((int)(this[this.tableSTUDYACCESS.USERIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USERID\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.USERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableSTUDYACCESS.ENTRYIDColumn]));
                }
                set {
                    this[this.tableSTUDYACCESS.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSEDDATA {
                get {
                    try {
                        return ((string)(this[this.tableSTUDYACCESS.ACCESSEDDATAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCESSEDDATA\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.ACCESSEDDATAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MODIFIEDDATA {
                get {
                    try {
                        return ((string)(this[this.tableSTUDYACCESS.MODIFIEDDATAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODIFIEDDATA\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.MODIFIEDDATAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IPADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableSTUDYACCESS.IPADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IPADDRESS\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.IPADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AUTHTAG {
                get {
                    try {
                        return ((string)(this[this.tableSTUDYACCESS.AUTHTAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AUTHTAG\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.AUTHTAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ORDERDATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTUDYACCESS.ORDERDATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORDERDATETIME\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.ORDERDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ACCESSTIMEUTC {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTUDYACCESS.ACCESSTIMEUTCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCESSTIMEUTC\' in table \'STUDYACCESS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTUDYACCESS.ACCESSTIMEUTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTUDYDATETIMENull() {
                return this.IsNull(this.tableSTUDYACCESS.STUDYDATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTUDYDATETIMENull() {
                this[this.tableSTUDYACCESS.STUDYDATETIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCESSIONNUMBERNull() {
                return this.IsNull(this.tableSTUDYACCESS.ACCESSIONNUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCESSIONNUMBERNull() {
                this[this.tableSTUDYACCESS.ACCESSIONNUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINSTITUTIONNAMENull() {
                return this.IsNull(this.tableSTUDYACCESS.INSTITUTIONNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINSTITUTIONNAMENull() {
                this[this.tableSTUDYACCESS.INSTITUTIONNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPATIENTIDNull() {
                return this.IsNull(this.tableSTUDYACCESS.PATIENTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPATIENTIDNull() {
                this[this.tableSTUDYACCESS.PATIENTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsISSUEROFPATIENTIDNull() {
                return this.IsNull(this.tableSTUDYACCESS.ISSUEROFPATIENTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetISSUEROFPATIENTIDNull() {
                this[this.tableSTUDYACCESS.ISSUEROFPATIENTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPATIENTFULLNAMENull() {
                return this.IsNull(this.tableSTUDYACCESS.PATIENTFULLNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPATIENTFULLNAMENull() {
                this[this.tableSTUDYACCESS.PATIENTFULLNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableSTUDYACCESS.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTATUSNull() {
                this[this.tableSTUDYACCESS.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUSERIDNull() {
                return this.IsNull(this.tableSTUDYACCESS.USERIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUSERIDNull() {
                this[this.tableSTUDYACCESS.USERIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCESSEDDATANull() {
                return this.IsNull(this.tableSTUDYACCESS.ACCESSEDDATAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCESSEDDATANull() {
                this[this.tableSTUDYACCESS.ACCESSEDDATAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMODIFIEDDATANull() {
                return this.IsNull(this.tableSTUDYACCESS.MODIFIEDDATAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMODIFIEDDATANull() {
                this[this.tableSTUDYACCESS.MODIFIEDDATAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIPADDRESSNull() {
                return this.IsNull(this.tableSTUDYACCESS.IPADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIPADDRESSNull() {
                this[this.tableSTUDYACCESS.IPADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAUTHTAGNull() {
                return this.IsNull(this.tableSTUDYACCESS.AUTHTAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAUTHTAGNull() {
                this[this.tableSTUDYACCESS.AUTHTAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsORDERDATETIMENull() {
                return this.IsNull(this.tableSTUDYACCESS.ORDERDATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetORDERDATETIMENull() {
                this[this.tableSTUDYACCESS.ORDERDATETIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCESSTIMEUTCNull() {
                return this.IsNull(this.tableSTUDYACCESS.ACCESSTIMEUTCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCESSTIMEUTCNull() {
                this[this.tableSTUDYACCESS.ACCESSTIMEUTCColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SYSTEMLOGRow : global::System.Data.DataRow {
            
            private SYSTEMLOGDataTable tableSYSTEMLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SYSTEMLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSYSTEMLOG = ((SYSTEMLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int INTERNALSYSTEMLOGID {
                get {
                    return ((int)(this[this.tableSYSTEMLOG.INTERNALSYSTEMLOGIDColumn]));
                }
                set {
                    this[this.tableSYSTEMLOG.INTERNALSYSTEMLOGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERNAME {
                get {
                    return ((string)(this[this.tableSYSTEMLOG.USERNAMEColumn]));
                }
                set {
                    this[this.tableSYSTEMLOG.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATETIME {
                get {
                    return ((global::System.DateTime)(this[this.tableSYSTEMLOG.DATETIMEColumn]));
                }
                set {
                    this[this.tableSYSTEMLOG.DATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOGENTRY {
                get {
                    return ((string)(this[this.tableSYSTEMLOG.LOGENTRYColumn]));
                }
                set {
                    this[this.tableSYSTEMLOG.LOGENTRYColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TRANSMITLOGRow : global::System.Data.DataRow {
            
            private TRANSMITLOGDataTable tableTRANSMITLOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRANSMITLOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRANSMITLOG = ((TRANSMITLOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRYID {
                get {
                    return ((int)(this[this.tableTRANSMITLOG.ENTRYIDColumn]));
                }
                set {
                    this[this.tableTRANSMITLOG.ENTRYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMESTARTED {
                get {
                    return ((global::System.DateTime)(this[this.tableTRANSMITLOG.TIMESTARTEDColumn]));
                }
                set {
                    this[this.tableTRANSMITLOG.TIMESTARTEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMEFINISHED {
                get {
                    return ((global::System.DateTime)(this[this.tableTRANSMITLOG.TIMEFINISHEDColumn]));
                }
                set {
                    this[this.tableTRANSMITLOG.TIMEFINISHEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SOPINSTANCEUID {
                get {
                    return ((string)(this[this.tableTRANSMITLOG.SOPINSTANCEUIDColumn]));
                }
                set {
                    this[this.tableTRANSMITLOG.SOPINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ISSUEROFPATIENTID {
                get {
                    return ((string)(this[this.tableTRANSMITLOG.ISSUEROFPATIENTIDColumn]));
                }
                set {
                    this[this.tableTRANSMITLOG.ISSUEROFPATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PATIENTID {
                get {
                    return ((string)(this[this.tableTRANSMITLOG.PATIENTIDColumn]));
                }
                set {
                    this[this.tableTRANSMITLOG.PATIENTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STUDYINSTANCEUID {
                get {
                    return ((string)(this[this.tableTRANSMITLOG.STUDYINSTANCEUIDColumn]));
                }
                set {
                    this[this.tableTRANSMITLOG.STUDYINSTANCEUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESSIONNUMBER {
                get {
                    return ((string)(this[this.tableTRANSMITLOG.ACCESSIONNUMBERColumn]));
                }
                set {
                    this[this.tableTRANSMITLOG.ACCESSIONNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERNAME {
                get {
                    return ((string)(this[this.tableTRANSMITLOG.USERNAMEColumn]));
                }
                set {
                    this[this.tableTRANSMITLOG.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SERVICENAME {
                get {
                    return ((string)(this[this.tableTRANSMITLOG.SERVICENAMEColumn]));
                }
                set {
                    this[this.tableTRANSMITLOG.SERVICENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NUMOBJECTS {
                get {
                    return ((int)(this[this.tableTRANSMITLOG.NUMOBJECTSColumn]));
                }
                set {
                    this[this.tableTRANSMITLOG.NUMOBJECTSColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class APPOINTMENTLOGRowChangeEvent : global::System.EventArgs {
            
            private APPOINTMENTLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public APPOINTMENTLOGRowChangeEvent(APPOINTMENTLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public APPOINTMENTLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ARCHIVELOGRowChangeEvent : global::System.EventArgs {
            
            private ARCHIVELOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVELOGRowChangeEvent(ARCHIVELOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVELOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ARCHIVESTUDYLOGRowChangeEvent : global::System.EventArgs {
            
            private ARCHIVESTUDYLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVESTUDYLOGRowChangeEvent(ARCHIVESTUDYLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ARCHIVESTUDYLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AUTOQUERYRETRIEVELOGRowChangeEvent : global::System.EventArgs {
            
            private AUTOQUERYRETRIEVELOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AUTOQUERYRETRIEVELOGRowChangeEvent(AUTOQUERYRETRIEVELOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AUTOQUERYRETRIEVELOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class COMMUNICATIONLOGRowChangeEvent : global::System.EventArgs {
            
            private COMMUNICATIONLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMMUNICATIONLOGRowChangeEvent(COMMUNICATIONLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMMUNICATIONLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CONFIGRowChangeEvent : global::System.EventArgs {
            
            private CONFIGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGRowChangeEvent(CONFIGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CONFIGDISPLAYRowChangeEvent : global::System.EventArgs {
            
            private CONFIGDISPLAYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGDISPLAYRowChangeEvent(CONFIGDISPLAYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CONFIGDISPLAYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class HEALTHVAULTSUMMARYEXPORTLOGRowChangeEvent : global::System.EventArgs {
            
            private HEALTHVAULTSUMMARYEXPORTLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HEALTHVAULTSUMMARYEXPORTLOGRowChangeEvent(HEALTHVAULTSUMMARYEXPORTLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HEALTHVAULTSUMMARYEXPORTLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MDINTOUCHLOGRowChangeEvent : global::System.EventArgs {
            
            private MDINTOUCHLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MDINTOUCHLOGRowChangeEvent(MDINTOUCHLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MDINTOUCHLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MIRTH_HL7_LOGRowChangeEvent : global::System.EventArgs {
            
            private MIRTH_HL7_LOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MIRTH_HL7_LOGRowChangeEvent(MIRTH_HL7_LOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MIRTH_HL7_LOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MPPSTRANSMITLOGRowChangeEvent : global::System.EventArgs {
            
            private MPPSTRANSMITLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MPPSTRANSMITLOGRowChangeEvent(MPPSTRANSMITLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MPPSTRANSMITLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class NETSUITEERRORLOGRowChangeEvent : global::System.EventArgs {
            
            private NETSUITEERRORLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITEERRORLOGRowChangeEvent(NETSUITEERRORLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITEERRORLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class NETSUITELOGRowChangeEvent : global::System.EventArgs {
            
            private NETSUITELOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITELOGRowChangeEvent(NETSUITELOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NETSUITELOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PATIENTDIRECTLOGRowChangeEvent : global::System.EventArgs {
            
            private PATIENTDIRECTLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTDIRECTLOGRowChangeEvent(PATIENTDIRECTLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTDIRECTLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PATIENTMERGELOGRowChangeEvent : global::System.EventArgs {
            
            private PATIENTMERGELOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTMERGELOGRowChangeEvent(PATIENTMERGELOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PATIENTMERGELOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PRINTLOGRowChangeEvent : global::System.EventArgs {
            
            private PRINTLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRINTLOGRowChangeEvent(PRINTLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRINTLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PRRELEASERowChangeEvent : global::System.EventArgs {
            
            private PRRELEASERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRRELEASERowChangeEvent(PRRELEASERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRRELEASERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PRVERSIONRowChangeEvent : global::System.EventArgs {
            
            private PRVERSIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRVERSIONRowChangeEvent(PRVERSIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRVERSIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RECEIVESTUDYLOGRowChangeEvent : global::System.EventArgs {
            
            private RECEIVESTUDYLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RECEIVESTUDYLOGRowChangeEvent(RECEIVESTUDYLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RECEIVESTUDYLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class REFERRALINBOXLOGRowChangeEvent : global::System.EventArgs {
            
            private REFERRALINBOXLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REFERRALINBOXLOGRowChangeEvent(REFERRALINBOXLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REFERRALINBOXLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class REQUESTFAILLOGRowChangeEvent : global::System.EventArgs {
            
            private REQUESTFAILLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTFAILLOGRowChangeEvent(REQUESTFAILLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTFAILLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class REQUESTLOGRowChangeEvent : global::System.EventArgs {
            
            private REQUESTLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTLOGRowChangeEvent(REQUESTLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REQUESTLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RETRIEVESTUDYLOGRowChangeEvent : global::System.EventArgs {
            
            private RETRIEVESTUDYLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RETRIEVESTUDYLOGRowChangeEvent(RETRIEVESTUDYLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RETRIEVESTUDYLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RPTEXPORTLOGRowChangeEvent : global::System.EventArgs {
            
            private RPTEXPORTLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RPTEXPORTLOGRowChangeEvent(RPTEXPORTLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RPTEXPORTLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class STORAGECOMMITLOGRowChangeEvent : global::System.EventArgs {
            
            private STORAGECOMMITLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STORAGECOMMITLOGRowChangeEvent(STORAGECOMMITLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STORAGECOMMITLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class STUDYACCESSRowChangeEvent : global::System.EventArgs {
            
            private STUDYACCESSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STUDYACCESSRowChangeEvent(STUDYACCESSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STUDYACCESSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SYSTEMLOGRowChangeEvent : global::System.EventArgs {
            
            private SYSTEMLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SYSTEMLOGRowChangeEvent(SYSTEMLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SYSTEMLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TRANSMITLOGRowChangeEvent : global::System.EventArgs {
            
            private TRANSMITLOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRANSMITLOGRowChangeEvent(TRANSMITLOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRANSMITLOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FirebirdTest1.LoggingAndConfigTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class APPOINTMENTLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public APPOINTMENTLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "APPOINTMENTLOG";
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("STARTTIME", "STARTTIME");
            tableMapping.ColumnMappings.Add("FINISHTIME", "FINISHTIME");
            tableMapping.ColumnMappings.Add("RESOURCENAME", "RESOURCENAME");
            tableMapping.ColumnMappings.Add("INTERNALSTUDYID", "INTERNALSTUDYID");
            tableMapping.ColumnMappings.Add("APPOINTMENTSTATE", "APPOINTMENTSTATE");
            tableMapping.ColumnMappings.Add("UPDATEUSERNAME", "UPDATEUSERNAME");
            tableMapping.ColumnMappings.Add("BLOCKEDREASON", "BLOCKEDREASON");
            tableMapping.ColumnMappings.Add("ACCESSTIME", "ACCESSTIME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""APPOINTMENTLOG"" WHERE ((""ENTRYID"" = @Original_ENTRYID) AND ((@IsNull_STARTTIME = 1 AND ""STARTTIME"" IS NULL) OR (""STARTTIME"" = @Original_STARTTIME)) AND ((@IsNull_FINISHTIME = 1 AND ""FINISHTIME"" IS NULL) OR (""FINISHTIME"" = @Original_FINISHTIME)) AND ((@IsNull_RESOURCENAME = 1 AND ""RESOURCENAME"" IS NULL) OR (""RESOURCENAME"" = @Original_RESOURCENAME)) AND ((@IsNull_INTERNALSTUDYID = 1 AND ""INTERNALSTUDYID"" IS NULL) OR (""INTERNALSTUDYID"" = @Original_INTERNALSTUDYID)) AND (""APPOINTMENTSTATE"" = @Original_APPOINTMENTSTATE) AND ((@IsNull_UPDATEUSERNAME = 1 AND ""UPDATEUSERNAME"" IS NULL) OR (""UPDATEUSERNAME"" = @Original_UPDATEUSERNAME)) AND ((@IsNull_BLOCKEDREASON = 1 AND ""BLOCKEDREASON"" IS NULL) OR (""BLOCKEDREASON"" = @Original_BLOCKEDREASON)) AND (""ACCESSTIME"" = @Original_ACCESSTIME))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STARTTIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STARTTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STARTTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STARTTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FINISHTIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_RESOURCENAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "RESOURCENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_RESOURCENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "RESOURCENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_INTERNALSTUDYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALSTUDYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTERNALSTUDYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALSTUDYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_APPOINTMENTSTATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "APPOINTMENTSTATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_UPDATEUSERNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "UPDATEUSERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_UPDATEUSERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "UPDATEUSERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_BLOCKEDREASON";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "BLOCKEDREASON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_BLOCKEDREASON";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "BLOCKEDREASON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""APPOINTMENTLOG"" (""ENTRYID"", ""STARTTIME"", ""FINISHTIME"", ""RESOURCENAME"", ""INTERNALSTUDYID"", ""APPOINTMENTSTATE"", ""UPDATEUSERNAME"", ""BLOCKEDREASON"", ""ACCESSTIME"") VALUES (@ENTRYID, @STARTTIME, @FINISHTIME, @RESOURCENAME, @INTERNALSTUDYID, @APPOINTMENTSTATE, @UPDATEUSERNAME, @BLOCKEDREASON, @ACCESSTIME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STARTTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STARTTIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@RESOURCENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "RESOURCENAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTERNALSTUDYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALSTUDYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@APPOINTMENTSTATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "APPOINTMENTSTATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@UPDATEUSERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "UPDATEUSERNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@BLOCKEDREASON";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "BLOCKEDREASON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""APPOINTMENTLOG"" SET ""ENTRYID"" = @ENTRYID, ""STARTTIME"" = @STARTTIME, ""FINISHTIME"" = @FINISHTIME, ""RESOURCENAME"" = @RESOURCENAME, ""INTERNALSTUDYID"" = @INTERNALSTUDYID, ""APPOINTMENTSTATE"" = @APPOINTMENTSTATE, ""UPDATEUSERNAME"" = @UPDATEUSERNAME, ""BLOCKEDREASON"" = @BLOCKEDREASON, ""ACCESSTIME"" = @ACCESSTIME WHERE ((""ENTRYID"" = @Original_ENTRYID) AND ((@IsNull_STARTTIME = 1 AND ""STARTTIME"" IS NULL) OR (""STARTTIME"" = @Original_STARTTIME)) AND ((@IsNull_FINISHTIME = 1 AND ""FINISHTIME"" IS NULL) OR (""FINISHTIME"" = @Original_FINISHTIME)) AND ((@IsNull_RESOURCENAME = 1 AND ""RESOURCENAME"" IS NULL) OR (""RESOURCENAME"" = @Original_RESOURCENAME)) AND ((@IsNull_INTERNALSTUDYID = 1 AND ""INTERNALSTUDYID"" IS NULL) OR (""INTERNALSTUDYID"" = @Original_INTERNALSTUDYID)) AND (""APPOINTMENTSTATE"" = @Original_APPOINTMENTSTATE) AND ((@IsNull_UPDATEUSERNAME = 1 AND ""UPDATEUSERNAME"" IS NULL) OR (""UPDATEUSERNAME"" = @Original_UPDATEUSERNAME)) AND ((@IsNull_BLOCKEDREASON = 1 AND ""BLOCKEDREASON"" IS NULL) OR (""BLOCKEDREASON"" = @Original_BLOCKEDREASON)) AND (""ACCESSTIME"" = @Original_ACCESSTIME))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STARTTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STARTTIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@RESOURCENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "RESOURCENAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTERNALSTUDYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALSTUDYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@APPOINTMENTSTATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "APPOINTMENTSTATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@UPDATEUSERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "UPDATEUSERNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@BLOCKEDREASON";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "BLOCKEDREASON";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STARTTIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STARTTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STARTTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STARTTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FINISHTIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_RESOURCENAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "RESOURCENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_RESOURCENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "RESOURCENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_INTERNALSTUDYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALSTUDYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTERNALSTUDYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALSTUDYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_APPOINTMENTSTATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "APPOINTMENTSTATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_UPDATEUSERNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "UPDATEUSERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_UPDATEUSERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "UPDATEUSERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_BLOCKEDREASON";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "BLOCKEDREASON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_BLOCKEDREASON";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "BLOCKEDREASON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[2];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ENTRYID\", \"STARTTIME\", \"FINISHTIME\", \"RESOURCENAME\", \"INTERNALSTUDYID\", \"" +
                "APPOINTMENTSTATE\", \"UPDATEUSERNAME\", \"BLOCKEDREASON\", \"ACCESSTIME\" FROM \"APPOINT" +
                "MENTLOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT \"ENTRYID\", \"STARTTIME\", \"FINISHTIME\", \"RESOURCENAME\", \"INTERNALSTUDYID\", \"" +
                "APPOINTMENTSTATE\", \"UPDATEUSERNAME\", \"BLOCKEDREASON\", \"ACCESSTIME\" FROM \"APPOINT" +
                "MENTLOG\"\r\nWHERE \"INTERNALSTUDYID\" = @INTERNALSTUDYID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTERNALSTUDYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALSTUDYID";
            this._commandCollection[1].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.APPOINTMENTLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.APPOINTMENTLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.APPOINTMENTLOGDataTable dataTable = new LoggingAndConfig.APPOINTMENTLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(LoggingAndConfig.APPOINTMENTLOGDataTable dataTable, global::System.Nullable<int> INTERNALSTUDYID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((INTERNALSTUDYID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(INTERNALSTUDYID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LoggingAndConfig.APPOINTMENTLOGDataTable GetDataByStudyId(global::System.Nullable<int> INTERNALSTUDYID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((INTERNALSTUDYID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(INTERNALSTUDYID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            LoggingAndConfig.APPOINTMENTLOGDataTable dataTable = new LoggingAndConfig.APPOINTMENTLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.APPOINTMENTLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "APPOINTMENTLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ENTRYID, global::System.Nullable<global::System.DateTime> Original_STARTTIME, global::System.Nullable<global::System.DateTime> Original_FINISHTIME, string Original_RESOURCENAME, global::System.Nullable<int> Original_INTERNALSTUDYID, int Original_APPOINTMENTSTATE, string Original_UPDATEUSERNAME, string Original_BLOCKEDREASON, System.DateTime Original_ACCESSTIME) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ENTRYID));
            if ((Original_STARTTIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_STARTTIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_FINISHTIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_FINISHTIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_RESOURCENAME == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_RESOURCENAME));
            }
            if ((Original_INTERNALSTUDYID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_INTERNALSTUDYID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_APPOINTMENTSTATE));
            if ((Original_UPDATEUSERNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_UPDATEUSERNAME));
            }
            if ((Original_BLOCKEDREASON == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_BLOCKEDREASON));
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_ACCESSTIME));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ENTRYID, global::System.Nullable<global::System.DateTime> STARTTIME, global::System.Nullable<global::System.DateTime> FINISHTIME, string RESOURCENAME, global::System.Nullable<int> INTERNALSTUDYID, int APPOINTMENTSTATE, string UPDATEUSERNAME, string BLOCKEDREASON, System.DateTime ACCESSTIME) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ENTRYID));
            if ((STARTTIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(STARTTIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FINISHTIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(FINISHTIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((RESOURCENAME == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(RESOURCENAME));
            }
            if ((INTERNALSTUDYID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(INTERNALSTUDYID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(APPOINTMENTSTATE));
            if ((UPDATEUSERNAME == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(UPDATEUSERNAME));
            }
            if ((BLOCKEDREASON == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(BLOCKEDREASON));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(ACCESSTIME));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ENTRYID, 
                    global::System.Nullable<global::System.DateTime> STARTTIME, 
                    global::System.Nullable<global::System.DateTime> FINISHTIME, 
                    string RESOURCENAME, 
                    global::System.Nullable<int> INTERNALSTUDYID, 
                    int APPOINTMENTSTATE, 
                    string UPDATEUSERNAME, 
                    string BLOCKEDREASON, 
                    System.DateTime ACCESSTIME, 
                    int Original_ENTRYID, 
                    global::System.Nullable<global::System.DateTime> Original_STARTTIME, 
                    global::System.Nullable<global::System.DateTime> Original_FINISHTIME, 
                    string Original_RESOURCENAME, 
                    global::System.Nullable<int> Original_INTERNALSTUDYID, 
                    int Original_APPOINTMENTSTATE, 
                    string Original_UPDATEUSERNAME, 
                    string Original_BLOCKEDREASON, 
                    System.DateTime Original_ACCESSTIME) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ENTRYID));
            if ((STARTTIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(STARTTIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FINISHTIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(FINISHTIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((RESOURCENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(RESOURCENAME));
            }
            if ((INTERNALSTUDYID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(INTERNALSTUDYID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(APPOINTMENTSTATE));
            if ((UPDATEUSERNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(UPDATEUSERNAME));
            }
            if ((BLOCKEDREASON == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(BLOCKEDREASON));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(ACCESSTIME));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ENTRYID));
            if ((Original_STARTTIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_STARTTIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_FINISHTIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_FINISHTIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_RESOURCENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_RESOURCENAME));
            }
            if ((Original_INTERNALSTUDYID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_INTERNALSTUDYID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_APPOINTMENTSTATE));
            if ((Original_UPDATEUSERNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_UPDATEUSERNAME));
            }
            if ((Original_BLOCKEDREASON == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_BLOCKEDREASON));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_ACCESSTIME));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> STARTTIME, 
                    global::System.Nullable<global::System.DateTime> FINISHTIME, 
                    string RESOURCENAME, 
                    global::System.Nullable<int> INTERNALSTUDYID, 
                    int APPOINTMENTSTATE, 
                    string UPDATEUSERNAME, 
                    string BLOCKEDREASON, 
                    System.DateTime ACCESSTIME, 
                    int Original_ENTRYID, 
                    global::System.Nullable<global::System.DateTime> Original_STARTTIME, 
                    global::System.Nullable<global::System.DateTime> Original_FINISHTIME, 
                    string Original_RESOURCENAME, 
                    global::System.Nullable<int> Original_INTERNALSTUDYID, 
                    int Original_APPOINTMENTSTATE, 
                    string Original_UPDATEUSERNAME, 
                    string Original_BLOCKEDREASON, 
                    System.DateTime Original_ACCESSTIME) {
            return this.Update(Original_ENTRYID, STARTTIME, FINISHTIME, RESOURCENAME, INTERNALSTUDYID, APPOINTMENTSTATE, UPDATEUSERNAME, BLOCKEDREASON, ACCESSTIME, Original_ENTRYID, Original_STARTTIME, Original_FINISHTIME, Original_RESOURCENAME, Original_INTERNALSTUDYID, Original_APPOINTMENTSTATE, Original_UPDATEUSERNAME, Original_BLOCKEDREASON, Original_ACCESSTIME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ARCHIVELOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ARCHIVELOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ARCHIVELOG";
            tableMapping.ColumnMappings.Add("SOPINSTANCEUID", "SOPINSTANCEUID");
            tableMapping.ColumnMappings.Add("INSERTTIME", "INSERTTIME");
            tableMapping.ColumnMappings.Add("TOKEN", "TOKEN");
            tableMapping.ColumnMappings.Add("LOGTYPE", "LOGTYPE");
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"ARCHIVELOG\" WHERE ((\"SOPINSTANCEUID\" = @Original_SOPINSTANCEUID) AND" +
                " (\"INSERTTIME\" = @Original_INSERTTIME) AND (\"LOGTYPE\" = @Original_LOGTYPE) AND (" +
                "\"ENTRYID\" = @Original_ENTRYID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SOPINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INSERTTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "INSERTTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LOGTYPE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LOGTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"ARCHIVELOG\" (\"SOPINSTANCEUID\", \"INSERTTIME\", \"TOKEN\", \"LOGTYPE\", \"EN" +
                "TRYID\") VALUES (@SOPINSTANCEUID, @INSERTTIME, @TOKEN, @LOGTYPE, @ENTRYID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SOPINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INSERTTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "INSERTTIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TOKEN";
            param.DbType = global::System.Data.DbType.Binary;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "TOKEN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LOGTYPE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LOGTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""ARCHIVELOG"" SET ""SOPINSTANCEUID"" = @SOPINSTANCEUID, ""INSERTTIME"" = @INSERTTIME, ""TOKEN"" = @TOKEN, ""LOGTYPE"" = @LOGTYPE, ""ENTRYID"" = @ENTRYID WHERE ((""SOPINSTANCEUID"" = @Original_SOPINSTANCEUID) AND (""INSERTTIME"" = @Original_INSERTTIME) AND (""LOGTYPE"" = @Original_LOGTYPE) AND (""ENTRYID"" = @Original_ENTRYID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SOPINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INSERTTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "INSERTTIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TOKEN";
            param.DbType = global::System.Data.DbType.Binary;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "TOKEN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LOGTYPE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LOGTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SOPINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INSERTTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "INSERTTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LOGTYPE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LOGTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"SOPINSTANCEUID\", \"INSERTTIME\", \"TOKEN\", \"LOGTYPE\", \"ENTRYID\" FROM \"ARCHIV" +
                "ELOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.ARCHIVELOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.ARCHIVELOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.ARCHIVELOGDataTable dataTable = new LoggingAndConfig.ARCHIVELOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.ARCHIVELOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "ARCHIVELOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SOPINSTANCEUID, System.DateTime Original_INSERTTIME, string Original_LOGTYPE, int Original_ENTRYID) {
            if ((Original_SOPINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_SOPINSTANCEUID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SOPINSTANCEUID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_INSERTTIME));
            if ((Original_LOGTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_LOGTYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_LOGTYPE));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ENTRYID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SOPINSTANCEUID, System.DateTime INSERTTIME, byte[] TOKEN, string LOGTYPE, int ENTRYID) {
            if ((SOPINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("SOPINSTANCEUID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SOPINSTANCEUID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(INSERTTIME));
            if ((TOKEN == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((byte[])(TOKEN));
            }
            if ((LOGTYPE == null)) {
                throw new global::System.ArgumentNullException("LOGTYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(LOGTYPE));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ENTRYID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SOPINSTANCEUID, System.DateTime INSERTTIME, byte[] TOKEN, string LOGTYPE, int ENTRYID, string Original_SOPINSTANCEUID, System.DateTime Original_INSERTTIME, string Original_LOGTYPE, int Original_ENTRYID) {
            if ((SOPINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("SOPINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SOPINSTANCEUID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(INSERTTIME));
            if ((TOKEN == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((byte[])(TOKEN));
            }
            if ((LOGTYPE == null)) {
                throw new global::System.ArgumentNullException("LOGTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(LOGTYPE));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ENTRYID));
            if ((Original_SOPINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_SOPINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_SOPINSTANCEUID));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_INSERTTIME));
            if ((Original_LOGTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_LOGTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_LOGTYPE));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ENTRYID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SOPINSTANCEUID, System.DateTime INSERTTIME, byte[] TOKEN, string LOGTYPE, string Original_SOPINSTANCEUID, System.DateTime Original_INSERTTIME, string Original_LOGTYPE, int Original_ENTRYID) {
            return this.Update(SOPINSTANCEUID, INSERTTIME, TOKEN, LOGTYPE, Original_ENTRYID, Original_SOPINSTANCEUID, Original_INSERTTIME, Original_LOGTYPE, Original_ENTRYID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ARCHIVESTUDYLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ARCHIVESTUDYLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ARCHIVESTUDYLOG";
            tableMapping.ColumnMappings.Add("ADDEDID", "ADDEDID");
            tableMapping.ColumnMappings.Add("STUDYINSTANCEUID", "STUDYINSTANCEUID");
            tableMapping.ColumnMappings.Add("STUDYDATETIME", "STUDYDATETIME");
            tableMapping.ColumnMappings.Add("FINISHTIME", "FINISHTIME");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("NUMOBJECTS", "NUMOBJECTS");
            tableMapping.ColumnMappings.Add("ACCESSIONNUMBER", "ACCESSIONNUMBER");
            tableMapping.ColumnMappings.Add("PATIENTID", "PATIENTID");
            tableMapping.ColumnMappings.Add("ISSUEROFPATIENTID", "ISSUEROFPATIENTID");
            tableMapping.ColumnMappings.Add("FIRSTNAME", "FIRSTNAME");
            tableMapping.ColumnMappings.Add("LASTNAME", "LASTNAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""ARCHIVESTUDYLOG"" WHERE ((""ADDEDID"" = @Original_ADDEDID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND ((@IsNull_STUDYDATETIME = 1 AND ""STUDYDATETIME"" IS NULL) OR (""STUDYDATETIME"" = @Original_STUDYDATETIME)) AND ((@IsNull_FINISHTIME = 1 AND ""FINISHTIME"" IS NULL) OR (""FINISHTIME"" = @Original_FINISHTIME)) AND ((@IsNull_STATUS = 1 AND ""STATUS"" IS NULL) OR (""STATUS"" = @Original_STATUS)) AND ((@IsNull_NUMOBJECTS = 1 AND ""NUMOBJECTS"" IS NULL) OR (""NUMOBJECTS"" = @Original_NUMOBJECTS)) AND ((@IsNull_ACCESSIONNUMBER = 1 AND ""ACCESSIONNUMBER"" IS NULL) OR (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER)) AND ((@IsNull_PATIENTID = 1 AND ""PATIENTID"" IS NULL) OR (""PATIENTID"" = @Original_PATIENTID)) AND ((@IsNull_ISSUEROFPATIENTID = 1 AND ""ISSUEROFPATIENTID"" IS NULL) OR (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID)) AND ((@IsNull_FIRSTNAME = 1 AND ""FIRSTNAME"" IS NULL) OR (""FIRSTNAME"" = @Original_FIRSTNAME)) AND ((@IsNull_LASTNAME = 1 AND ""LASTNAME"" IS NULL) OR (""LASTNAME"" = @Original_LASTNAME)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ADDEDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ADDEDID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FINISHTIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ISSUEROFPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FIRSTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_LASTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""ARCHIVESTUDYLOG"" (""ADDEDID"", ""STUDYINSTANCEUID"", ""STUDYDATETIME"", ""FINISHTIME"", ""STATUS"", ""NUMOBJECTS"", ""ACCESSIONNUMBER"", ""PATIENTID"", ""ISSUEROFPATIENTID"", ""FIRSTNAME"", ""LASTNAME"") VALUES (@ADDEDID, @STUDYINSTANCEUID, @STUDYDATETIME, @FINISHTIME, @STATUS, @NUMOBJECTS, @ACCESSIONNUMBER, @PATIENTID, @ISSUEROFPATIENTID, @FIRSTNAME, @LASTNAME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ADDEDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ADDEDID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""ARCHIVESTUDYLOG"" SET ""ADDEDID"" = @ADDEDID, ""STUDYINSTANCEUID"" = @STUDYINSTANCEUID, ""STUDYDATETIME"" = @STUDYDATETIME, ""FINISHTIME"" = @FINISHTIME, ""STATUS"" = @STATUS, ""NUMOBJECTS"" = @NUMOBJECTS, ""ACCESSIONNUMBER"" = @ACCESSIONNUMBER, ""PATIENTID"" = @PATIENTID, ""ISSUEROFPATIENTID"" = @ISSUEROFPATIENTID, ""FIRSTNAME"" = @FIRSTNAME, ""LASTNAME"" = @LASTNAME WHERE ((""ADDEDID"" = @Original_ADDEDID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND ((@IsNull_STUDYDATETIME = 1 AND ""STUDYDATETIME"" IS NULL) OR (""STUDYDATETIME"" = @Original_STUDYDATETIME)) AND ((@IsNull_FINISHTIME = 1 AND ""FINISHTIME"" IS NULL) OR (""FINISHTIME"" = @Original_FINISHTIME)) AND ((@IsNull_STATUS = 1 AND ""STATUS"" IS NULL) OR (""STATUS"" = @Original_STATUS)) AND ((@IsNull_NUMOBJECTS = 1 AND ""NUMOBJECTS"" IS NULL) OR (""NUMOBJECTS"" = @Original_NUMOBJECTS)) AND ((@IsNull_ACCESSIONNUMBER = 1 AND ""ACCESSIONNUMBER"" IS NULL) OR (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER)) AND ((@IsNull_PATIENTID = 1 AND ""PATIENTID"" IS NULL) OR (""PATIENTID"" = @Original_PATIENTID)) AND ((@IsNull_ISSUEROFPATIENTID = 1 AND ""ISSUEROFPATIENTID"" IS NULL) OR (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID)) AND ((@IsNull_FIRSTNAME = 1 AND ""FIRSTNAME"" IS NULL) OR (""FIRSTNAME"" = @Original_FIRSTNAME)) AND ((@IsNull_LASTNAME = 1 AND ""LASTNAME"" IS NULL) OR (""LASTNAME"" = @Original_LASTNAME)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ADDEDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ADDEDID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ADDEDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ADDEDID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FINISHTIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ISSUEROFPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FIRSTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_LASTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ADDEDID\", \"STUDYINSTANCEUID\", \"STUDYDATETIME\", \"FINISHTIME\", \"STATUS\", \"N" +
                "UMOBJECTS\", \"ACCESSIONNUMBER\", \"PATIENTID\", \"ISSUEROFPATIENTID\", \"FIRSTNAME\", \"L" +
                "ASTNAME\" FROM \"ARCHIVESTUDYLOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.ARCHIVESTUDYLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.ARCHIVESTUDYLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.ARCHIVESTUDYLOGDataTable dataTable = new LoggingAndConfig.ARCHIVESTUDYLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.ARCHIVESTUDYLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "ARCHIVESTUDYLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ADDEDID, string Original_STUDYINSTANCEUID, global::System.Nullable<global::System.DateTime> Original_STUDYDATETIME, global::System.Nullable<global::System.DateTime> Original_FINISHTIME, global::System.Nullable<int> Original_STATUS, global::System.Nullable<int> Original_NUMOBJECTS, string Original_ACCESSIONNUMBER, string Original_PATIENTID, string Original_ISSUEROFPATIENTID, string Original_FIRSTNAME, string Original_LASTNAME) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ADDEDID));
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_STUDYDATETIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_STUDYDATETIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_FINISHTIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_FINISHTIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_STATUS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_STATUS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_NUMOBJECTS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_NUMOBJECTS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_PATIENTID == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_FIRSTNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_FIRSTNAME));
            }
            if ((Original_LASTNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_LASTNAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ADDEDID, string STUDYINSTANCEUID, global::System.Nullable<global::System.DateTime> STUDYDATETIME, global::System.Nullable<global::System.DateTime> FINISHTIME, global::System.Nullable<int> STATUS, global::System.Nullable<int> NUMOBJECTS, string ACCESSIONNUMBER, string PATIENTID, string ISSUEROFPATIENTID, string FIRSTNAME, string LASTNAME) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ADDEDID));
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((STUDYDATETIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(STUDYDATETIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FINISHTIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(FINISHTIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((STATUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(STATUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((NUMOBJECTS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(NUMOBJECTS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((PATIENTID == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((FIRSTNAME == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(FIRSTNAME));
            }
            if ((LASTNAME == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(LASTNAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ADDEDID, 
                    string STUDYINSTANCEUID, 
                    global::System.Nullable<global::System.DateTime> STUDYDATETIME, 
                    global::System.Nullable<global::System.DateTime> FINISHTIME, 
                    global::System.Nullable<int> STATUS, 
                    global::System.Nullable<int> NUMOBJECTS, 
                    string ACCESSIONNUMBER, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string FIRSTNAME, 
                    string LASTNAME, 
                    int Original_ADDEDID, 
                    string Original_STUDYINSTANCEUID, 
                    global::System.Nullable<global::System.DateTime> Original_STUDYDATETIME, 
                    global::System.Nullable<global::System.DateTime> Original_FINISHTIME, 
                    global::System.Nullable<int> Original_STATUS, 
                    global::System.Nullable<int> Original_NUMOBJECTS, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_FIRSTNAME, 
                    string Original_LASTNAME) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ADDEDID));
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((STUDYDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(STUDYDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FINISHTIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(FINISHTIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((STATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(STATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((NUMOBJECTS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(NUMOBJECTS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((PATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((FIRSTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(FIRSTNAME));
            }
            if ((LASTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(LASTNAME));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ADDEDID));
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_STUDYDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_STUDYDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_FINISHTIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_FINISHTIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_STATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_STATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_NUMOBJECTS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_NUMOBJECTS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_PATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_FIRSTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_FIRSTNAME));
            }
            if ((Original_LASTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_LASTNAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string STUDYINSTANCEUID, 
                    global::System.Nullable<global::System.DateTime> STUDYDATETIME, 
                    global::System.Nullable<global::System.DateTime> FINISHTIME, 
                    global::System.Nullable<int> STATUS, 
                    global::System.Nullable<int> NUMOBJECTS, 
                    string ACCESSIONNUMBER, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string FIRSTNAME, 
                    string LASTNAME, 
                    int Original_ADDEDID, 
                    string Original_STUDYINSTANCEUID, 
                    global::System.Nullable<global::System.DateTime> Original_STUDYDATETIME, 
                    global::System.Nullable<global::System.DateTime> Original_FINISHTIME, 
                    global::System.Nullable<int> Original_STATUS, 
                    global::System.Nullable<int> Original_NUMOBJECTS, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_FIRSTNAME, 
                    string Original_LASTNAME) {
            return this.Update(Original_ADDEDID, STUDYINSTANCEUID, STUDYDATETIME, FINISHTIME, STATUS, NUMOBJECTS, ACCESSIONNUMBER, PATIENTID, ISSUEROFPATIENTID, FIRSTNAME, LASTNAME, Original_ADDEDID, Original_STUDYINSTANCEUID, Original_STUDYDATETIME, Original_FINISHTIME, Original_STATUS, Original_NUMOBJECTS, Original_ACCESSIONNUMBER, Original_PATIENTID, Original_ISSUEROFPATIENTID, Original_FIRSTNAME, Original_LASTNAME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AUTOQUERYRETRIEVELOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AUTOQUERYRETRIEVELOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AUTOQUERYRETRIEVELOG";
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("SERVICEID", "SERVICEID");
            tableMapping.ColumnMappings.Add("ENTRYTIME", "ENTRYTIME");
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"AUTOQUERYRETRIEVELOG\" WHERE ((\"ENTRYID\" = @Original_ENTRYID) AND (\"S" +
                "ERVICEID\" = @Original_SERVICEID) AND (\"ENTRYTIME\" = @Original_ENTRYTIME) AND (\"D" +
                "ESCRIPTION\" = @Original_DESCRIPTION))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "SERVICEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESCRIPTION";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"AUTOQUERYRETRIEVELOG\" (\"ENTRYID\", \"SERVICEID\", \"ENTRYTIME\", \"DESCRIP" +
                "TION\") VALUES (@ENTRYID, @SERVICEID, @ENTRYTIME, @DESCRIPTION)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "SERVICEID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYTIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESCRIPTION";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""AUTOQUERYRETRIEVELOG"" SET ""ENTRYID"" = @ENTRYID, ""SERVICEID"" = @SERVICEID, ""ENTRYTIME"" = @ENTRYTIME, ""DESCRIPTION"" = @DESCRIPTION WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""SERVICEID"" = @Original_SERVICEID) AND (""ENTRYTIME"" = @Original_ENTRYTIME) AND (""DESCRIPTION"" = @Original_DESCRIPTION))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "SERVICEID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYTIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESCRIPTION";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "SERVICEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESCRIPTION";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ENTRYID\", \"SERVICEID\", \"ENTRYTIME\", \"DESCRIPTION\" FROM \"AUTOQUERYRETRIEVE" +
                "LOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.AUTOQUERYRETRIEVELOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.AUTOQUERYRETRIEVELOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.AUTOQUERYRETRIEVELOGDataTable dataTable = new LoggingAndConfig.AUTOQUERYRETRIEVELOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.AUTOQUERYRETRIEVELOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "AUTOQUERYRETRIEVELOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ENTRYID, int Original_SERVICEID, System.DateTime Original_ENTRYTIME, string Original_DESCRIPTION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ENTRYID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_SERVICEID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_ENTRYTIME));
            if ((Original_DESCRIPTION == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRIPTION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_DESCRIPTION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ENTRYID, int SERVICEID, System.DateTime ENTRYTIME, string DESCRIPTION) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(SERVICEID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(ENTRYTIME));
            if ((DESCRIPTION == null)) {
                throw new global::System.ArgumentNullException("DESCRIPTION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DESCRIPTION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ENTRYID, int SERVICEID, System.DateTime ENTRYTIME, string DESCRIPTION, int Original_ENTRYID, int Original_SERVICEID, System.DateTime Original_ENTRYTIME, string Original_DESCRIPTION) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(SERVICEID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(ENTRYTIME));
            if ((DESCRIPTION == null)) {
                throw new global::System.ArgumentNullException("DESCRIPTION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DESCRIPTION));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ENTRYID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_SERVICEID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_ENTRYTIME));
            if ((Original_DESCRIPTION == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRIPTION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_DESCRIPTION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int SERVICEID, System.DateTime ENTRYTIME, string DESCRIPTION, int Original_ENTRYID, int Original_SERVICEID, System.DateTime Original_ENTRYTIME, string Original_DESCRIPTION) {
            return this.Update(Original_ENTRYID, SERVICEID, ENTRYTIME, DESCRIPTION, Original_ENTRYID, Original_SERVICEID, Original_ENTRYTIME, Original_DESCRIPTION);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class COMMUNICATIONLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public COMMUNICATIONLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "COMMUNICATIONLOG";
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("ENTRYTIME", "ENTRYTIME");
            tableMapping.ColumnMappings.Add("STUDYINSTANCEUID", "STUDYINSTANCEUID");
            tableMapping.ColumnMappings.Add("LINKID", "LINKID");
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION");
            tableMapping.ColumnMappings.Add("SERVICENAME", "SERVICENAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""COMMUNICATIONLOG"" WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""ENTRYTIME"" = @Original_ENTRYTIME) AND ((@IsNull_STUDYINSTANCEUID = 1 AND ""STUDYINSTANCEUID"" IS NULL) OR (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID)) AND ((@IsNull_LINKID = 1 AND ""LINKID"" IS NULL) OR (""LINKID"" = @Original_LINKID)) AND (""DESCRIPTION"" = @Original_DESCRIPTION) AND (""SERVICENAME"" = @Original_SERVICENAME))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYINSTANCEUID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_LINKID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LINKID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LINKID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LINKID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESCRIPTION";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"COMMUNICATIONLOG\" (\"ENTRYID\", \"ENTRYTIME\", \"STUDYINSTANCEUID\", \"LINK" +
                "ID\", \"DESCRIPTION\", \"SERVICENAME\") VALUES (@ENTRYID, @ENTRYTIME, @STUDYINSTANCEU" +
                "ID, @LINKID, @DESCRIPTION, @SERVICENAME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYTIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LINKID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LINKID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESCRIPTION";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""COMMUNICATIONLOG"" SET ""ENTRYID"" = @ENTRYID, ""ENTRYTIME"" = @ENTRYTIME, ""STUDYINSTANCEUID"" = @STUDYINSTANCEUID, ""LINKID"" = @LINKID, ""DESCRIPTION"" = @DESCRIPTION, ""SERVICENAME"" = @SERVICENAME WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""ENTRYTIME"" = @Original_ENTRYTIME) AND ((@IsNull_STUDYINSTANCEUID = 1 AND ""STUDYINSTANCEUID"" IS NULL) OR (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID)) AND ((@IsNull_LINKID = 1 AND ""LINKID"" IS NULL) OR (""LINKID"" = @Original_LINKID)) AND (""DESCRIPTION"" = @Original_DESCRIPTION) AND (""SERVICENAME"" = @Original_SERVICENAME))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYTIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LINKID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LINKID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESCRIPTION";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYINSTANCEUID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_LINKID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LINKID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LINKID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LINKID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESCRIPTION";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ENTRYID\", \"ENTRYTIME\", \"STUDYINSTANCEUID\", \"LINKID\", \"DESCRIPTION\", \"SERV" +
                "ICENAME\" FROM \"COMMUNICATIONLOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.COMMUNICATIONLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.COMMUNICATIONLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.COMMUNICATIONLOGDataTable dataTable = new LoggingAndConfig.COMMUNICATIONLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.COMMUNICATIONLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "COMMUNICATIONLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ENTRYID, System.DateTime Original_ENTRYTIME, string Original_STUDYINSTANCEUID, global::System.Nullable<int> Original_LINKID, string Original_DESCRIPTION, string Original_SERVICENAME) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ENTRYID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_ENTRYTIME));
            if ((Original_STUDYINSTANCEUID == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_LINKID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_LINKID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_DESCRIPTION == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRIPTION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DESCRIPTION));
            }
            if ((Original_SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SERVICENAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_SERVICENAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ENTRYID, System.DateTime ENTRYTIME, string STUDYINSTANCEUID, global::System.Nullable<int> LINKID, string DESCRIPTION, string SERVICENAME) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(ENTRYTIME));
            if ((STUDYINSTANCEUID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((LINKID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(LINKID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DESCRIPTION == null)) {
                throw new global::System.ArgumentNullException("DESCRIPTION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DESCRIPTION));
            }
            if ((SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("SERVICENAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SERVICENAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ENTRYID, System.DateTime ENTRYTIME, string STUDYINSTANCEUID, global::System.Nullable<int> LINKID, string DESCRIPTION, string SERVICENAME, int Original_ENTRYID, System.DateTime Original_ENTRYTIME, string Original_STUDYINSTANCEUID, global::System.Nullable<int> Original_LINKID, string Original_DESCRIPTION, string Original_SERVICENAME) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(ENTRYTIME));
            if ((STUDYINSTANCEUID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((LINKID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(LINKID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DESCRIPTION == null)) {
                throw new global::System.ArgumentNullException("DESCRIPTION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DESCRIPTION));
            }
            if ((SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("SERVICENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SERVICENAME));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ENTRYID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_ENTRYTIME));
            if ((Original_STUDYINSTANCEUID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_LINKID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_LINKID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_DESCRIPTION == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRIPTION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_DESCRIPTION));
            }
            if ((Original_SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SERVICENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_SERVICENAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime ENTRYTIME, string STUDYINSTANCEUID, global::System.Nullable<int> LINKID, string DESCRIPTION, string SERVICENAME, int Original_ENTRYID, System.DateTime Original_ENTRYTIME, string Original_STUDYINSTANCEUID, global::System.Nullable<int> Original_LINKID, string Original_DESCRIPTION, string Original_SERVICENAME) {
            return this.Update(Original_ENTRYID, ENTRYTIME, STUDYINSTANCEUID, LINKID, DESCRIPTION, SERVICENAME, Original_ENTRYID, Original_ENTRYTIME, Original_STUDYINSTANCEUID, Original_LINKID, Original_DESCRIPTION, Original_SERVICENAME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CONFIGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CONFIGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CONFIG";
            tableMapping.ColumnMappings.Add("USERNAME", "USERNAME");
            tableMapping.ColumnMappings.Add("ITEM", "ITEM");
            tableMapping.ColumnMappings.Add("STRVALUE", "STRVALUE");
            tableMapping.ColumnMappings.Add("INTVALUE", "INTVALUE");
            tableMapping.ColumnMappings.Add("FLOATVALUE", "FLOATVALUE");
            tableMapping.ColumnMappings.Add("BOOLVALUE", "BOOLVALUE");
            tableMapping.ColumnMappings.Add("BLOBVALUE", "BLOBVALUE");
            tableMapping.ColumnMappings.Add("BLOBSTRING", "BLOBSTRING");
            tableMapping.ColumnMappings.Add("FIRSTCAT", "FIRSTCAT");
            tableMapping.ColumnMappings.Add("SECONDCAT", "SECONDCAT");
            tableMapping.ColumnMappings.Add("THIRDCAT", "THIRDCAT");
            tableMapping.ColumnMappings.Add("MINVALUE", "MINVALUE");
            tableMapping.ColumnMappings.Add("MAXVALUE", "MAXVALUE");
            tableMapping.ColumnMappings.Add("VALUETYPE", "VALUETYPE");
            tableMapping.ColumnMappings.Add("MAXSTRINGLENGTH", "MAXSTRINGLENGTH");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""CONFIG"" WHERE ((""USERNAME"" = @Original_USERNAME) AND (""ITEM"" = @Original_ITEM) AND ((@IsNull_STRVALUE = 1 AND ""STRVALUE"" IS NULL) OR (""STRVALUE"" = @Original_STRVALUE)) AND ((@IsNull_INTVALUE = 1 AND ""INTVALUE"" IS NULL) OR (""INTVALUE"" = @Original_INTVALUE)) AND ((@IsNull_FLOATVALUE = 1 AND ""FLOATVALUE"" IS NULL) OR (""FLOATVALUE"" = @Original_FLOATVALUE)) AND ((@IsNull_BOOLVALUE = 1 AND ""BOOLVALUE"" IS NULL) OR (""BOOLVALUE"" = @Original_BOOLVALUE)) AND (""FIRSTCAT"" = @Original_FIRSTCAT) AND (""SECONDCAT"" = @Original_SECONDCAT) AND (""THIRDCAT"" = @Original_THIRDCAT) AND ((@IsNull_MINVALUE = 1 AND ""MINVALUE"" IS NULL) OR (""MINVALUE"" = @Original_MINVALUE)) AND ((@IsNull_MAXVALUE = 1 AND ""MAXVALUE"" IS NULL) OR (""MAXVALUE"" = @Original_MAXVALUE)) AND (""VALUETYPE"" = @Original_VALUETYPE) AND ((@IsNull_MAXSTRINGLENGTH = 1 AND ""MAXSTRINGLENGTH"" IS NULL) OR (""MAXSTRINGLENGTH"" = @Original_MAXSTRINGLENGTH)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ITEM";
            param.Size = 128;
            param.IsNullable = true;
            param.SourceColumn = "ITEM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STRVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "STRVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STRVALUE";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "STRVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_INTVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FLOATVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "FLOATVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FLOATVALUE";
            param.DbType = global::System.Data.DbType.Single;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "FLOATVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_BOOLVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "BOOLVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_BOOLVALUE";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "BOOLVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FIRSTCAT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTCAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SECONDCAT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SECONDCAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_THIRDCAT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "THIRDCAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_MINVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MINVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MINVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MINVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_MAXVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MAXVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MAXVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MAXVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_VALUETYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "VALUETYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_MAXSTRINGLENGTH";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MAXSTRINGLENGTH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MAXSTRINGLENGTH";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MAXSTRINGLENGTH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""CONFIG"" (""USERNAME"", ""ITEM"", ""STRVALUE"", ""INTVALUE"", ""FLOATVALUE"", ""BOOLVALUE"", ""BLOBVALUE"", ""BLOBSTRING"", ""FIRSTCAT"", ""SECONDCAT"", ""THIRDCAT"", ""MINVALUE"", ""MAXVALUE"", ""VALUETYPE"", ""MAXSTRINGLENGTH"") VALUES (@USERNAME, @ITEM, @STRVALUE, @INTVALUE, @FLOATVALUE, @BOOLVALUE, @BLOBVALUE, @BLOBSTRING, @FIRSTCAT, @SECONDCAT, @THIRDCAT, @MINVALUE, @MAXVALUE, @VALUETYPE, @MAXSTRINGLENGTH)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ITEM";
            param.Size = 128;
            param.IsNullable = true;
            param.SourceColumn = "ITEM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STRVALUE";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "STRVALUE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTVALUE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FLOATVALUE";
            param.DbType = global::System.Data.DbType.Single;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "FLOATVALUE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@BOOLVALUE";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "BOOLVALUE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@BLOBVALUE";
            param.DbType = global::System.Data.DbType.Binary;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "BLOBVALUE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@BLOBSTRING";
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "BLOBSTRING";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FIRSTCAT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTCAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SECONDCAT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SECONDCAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@THIRDCAT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "THIRDCAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MINVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MINVALUE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MAXVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MAXVALUE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@VALUETYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "VALUETYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MAXSTRINGLENGTH";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MAXSTRINGLENGTH";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""CONFIG"" SET ""USERNAME"" = @USERNAME, ""ITEM"" = @ITEM, ""STRVALUE"" = @STRVALUE, ""INTVALUE"" = @INTVALUE, ""FLOATVALUE"" = @FLOATVALUE, ""BOOLVALUE"" = @BOOLVALUE, ""BLOBVALUE"" = @BLOBVALUE, ""BLOBSTRING"" = @BLOBSTRING, ""FIRSTCAT"" = @FIRSTCAT, ""SECONDCAT"" = @SECONDCAT, ""THIRDCAT"" = @THIRDCAT, ""MINVALUE"" = @MINVALUE, ""MAXVALUE"" = @MAXVALUE, ""VALUETYPE"" = @VALUETYPE, ""MAXSTRINGLENGTH"" = @MAXSTRINGLENGTH WHERE ((""USERNAME"" = @Original_USERNAME) AND (""ITEM"" = @Original_ITEM) AND ((@IsNull_STRVALUE = 1 AND ""STRVALUE"" IS NULL) OR (""STRVALUE"" = @Original_STRVALUE)) AND ((@IsNull_INTVALUE = 1 AND ""INTVALUE"" IS NULL) OR (""INTVALUE"" = @Original_INTVALUE)) AND ((@IsNull_FLOATVALUE = 1 AND ""FLOATVALUE"" IS NULL) OR (""FLOATVALUE"" = @Original_FLOATVALUE)) AND ((@IsNull_BOOLVALUE = 1 AND ""BOOLVALUE"" IS NULL) OR (""BOOLVALUE"" = @Original_BOOLVALUE)) AND (""FIRSTCAT"" = @Original_FIRSTCAT) AND (""SECONDCAT"" = @Original_SECONDCAT) AND (""THIRDCAT"" = @Original_THIRDCAT) AND ((@IsNull_MINVALUE = 1 AND ""MINVALUE"" IS NULL) OR (""MINVALUE"" = @Original_MINVALUE)) AND ((@IsNull_MAXVALUE = 1 AND ""MAXVALUE"" IS NULL) OR (""MAXVALUE"" = @Original_MAXVALUE)) AND (""VALUETYPE"" = @Original_VALUETYPE) AND ((@IsNull_MAXSTRINGLENGTH = 1 AND ""MAXSTRINGLENGTH"" IS NULL) OR (""MAXSTRINGLENGTH"" = @Original_MAXSTRINGLENGTH)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ITEM";
            param.Size = 128;
            param.IsNullable = true;
            param.SourceColumn = "ITEM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STRVALUE";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "STRVALUE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTVALUE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FLOATVALUE";
            param.DbType = global::System.Data.DbType.Single;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "FLOATVALUE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@BOOLVALUE";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "BOOLVALUE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@BLOBVALUE";
            param.DbType = global::System.Data.DbType.Binary;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "BLOBVALUE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@BLOBSTRING";
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "BLOBSTRING";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FIRSTCAT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTCAT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SECONDCAT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SECONDCAT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@THIRDCAT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "THIRDCAT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MINVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MINVALUE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MAXVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MAXVALUE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@VALUETYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "VALUETYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MAXSTRINGLENGTH";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MAXSTRINGLENGTH";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ITEM";
            param.Size = 128;
            param.IsNullable = true;
            param.SourceColumn = "ITEM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STRVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "STRVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STRVALUE";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "STRVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_INTVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FLOATVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "FLOATVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FLOATVALUE";
            param.DbType = global::System.Data.DbType.Single;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "FLOATVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_BOOLVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "BOOLVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_BOOLVALUE";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "BOOLVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FIRSTCAT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTCAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SECONDCAT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SECONDCAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_THIRDCAT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "THIRDCAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_MINVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MINVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MINVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MINVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_MAXVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MAXVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MAXVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MAXVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_VALUETYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "VALUETYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_MAXSTRINGLENGTH";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MAXSTRINGLENGTH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MAXSTRINGLENGTH";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MAXSTRINGLENGTH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"USERNAME\", \"ITEM\", \"STRVALUE\", \"INTVALUE\", \"FLOATVALUE\", \"BOOLVALUE\", \"BL" +
                "OBVALUE\", \"BLOBSTRING\", \"FIRSTCAT\", \"SECONDCAT\", \"THIRDCAT\", \"MINVALUE\", \"MAXVAL" +
                "UE\", \"VALUETYPE\", \"MAXSTRINGLENGTH\" FROM \"CONFIG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.CONFIGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.CONFIGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.CONFIGDataTable dataTable = new LoggingAndConfig.CONFIGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.CONFIGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "CONFIG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_USERNAME, string Original_ITEM, string Original_STRVALUE, global::System.Nullable<int> Original_INTVALUE, global::System.Nullable<float> Original_FLOATVALUE, string Original_BOOLVALUE, string Original_FIRSTCAT, string Original_SECONDCAT, string Original_THIRDCAT, global::System.Nullable<int> Original_MINVALUE, global::System.Nullable<int> Original_MAXVALUE, int Original_VALUETYPE, global::System.Nullable<int> Original_MAXSTRINGLENGTH) {
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_USERNAME));
            }
            if ((Original_ITEM == null)) {
                throw new global::System.ArgumentNullException("Original_ITEM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ITEM));
            }
            if ((Original_STRVALUE == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_STRVALUE));
            }
            if ((Original_INTVALUE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_INTVALUE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_FLOATVALUE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((float)(Original_FLOATVALUE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_BOOLVALUE == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_BOOLVALUE));
            }
            if ((Original_FIRSTCAT == null)) {
                throw new global::System.ArgumentNullException("Original_FIRSTCAT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_FIRSTCAT));
            }
            if ((Original_SECONDCAT == null)) {
                throw new global::System.ArgumentNullException("Original_SECONDCAT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_SECONDCAT));
            }
            if ((Original_THIRDCAT == null)) {
                throw new global::System.ArgumentNullException("Original_THIRDCAT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_THIRDCAT));
            }
            if ((Original_MINVALUE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_MINVALUE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_MAXVALUE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_MAXVALUE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_VALUETYPE));
            if ((Original_MAXSTRINGLENGTH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_MAXSTRINGLENGTH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string USERNAME, string ITEM, string STRVALUE, global::System.Nullable<int> INTVALUE, global::System.Nullable<float> FLOATVALUE, string BOOLVALUE, byte[] BLOBVALUE, string BLOBSTRING, string FIRSTCAT, string SECONDCAT, string THIRDCAT, global::System.Nullable<int> MINVALUE, global::System.Nullable<int> MAXVALUE, int VALUETYPE, global::System.Nullable<int> MAXSTRINGLENGTH) {
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(USERNAME));
            }
            if ((ITEM == null)) {
                throw new global::System.ArgumentNullException("ITEM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ITEM));
            }
            if ((STRVALUE == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(STRVALUE));
            }
            if ((INTVALUE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(INTVALUE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FLOATVALUE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((float)(FLOATVALUE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((BOOLVALUE == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(BOOLVALUE));
            }
            if ((BLOBVALUE == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((byte[])(BLOBVALUE));
            }
            if ((BLOBSTRING == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(BLOBSTRING));
            }
            if ((FIRSTCAT == null)) {
                throw new global::System.ArgumentNullException("FIRSTCAT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(FIRSTCAT));
            }
            if ((SECONDCAT == null)) {
                throw new global::System.ArgumentNullException("SECONDCAT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SECONDCAT));
            }
            if ((THIRDCAT == null)) {
                throw new global::System.ArgumentNullException("THIRDCAT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(THIRDCAT));
            }
            if ((MINVALUE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(MINVALUE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((MAXVALUE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(MAXVALUE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(VALUETYPE));
            if ((MAXSTRINGLENGTH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(MAXSTRINGLENGTH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string USERNAME, 
                    string ITEM, 
                    string STRVALUE, 
                    global::System.Nullable<int> INTVALUE, 
                    global::System.Nullable<float> FLOATVALUE, 
                    string BOOLVALUE, 
                    byte[] BLOBVALUE, 
                    string BLOBSTRING, 
                    string FIRSTCAT, 
                    string SECONDCAT, 
                    string THIRDCAT, 
                    global::System.Nullable<int> MINVALUE, 
                    global::System.Nullable<int> MAXVALUE, 
                    int VALUETYPE, 
                    global::System.Nullable<int> MAXSTRINGLENGTH, 
                    string Original_USERNAME, 
                    string Original_ITEM, 
                    string Original_STRVALUE, 
                    global::System.Nullable<int> Original_INTVALUE, 
                    global::System.Nullable<float> Original_FLOATVALUE, 
                    string Original_BOOLVALUE, 
                    string Original_FIRSTCAT, 
                    string Original_SECONDCAT, 
                    string Original_THIRDCAT, 
                    global::System.Nullable<int> Original_MINVALUE, 
                    global::System.Nullable<int> Original_MAXVALUE, 
                    int Original_VALUETYPE, 
                    global::System.Nullable<int> Original_MAXSTRINGLENGTH) {
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(USERNAME));
            }
            if ((ITEM == null)) {
                throw new global::System.ArgumentNullException("ITEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ITEM));
            }
            if ((STRVALUE == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(STRVALUE));
            }
            if ((INTVALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(INTVALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FLOATVALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((float)(FLOATVALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((BOOLVALUE == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(BOOLVALUE));
            }
            if ((BLOBVALUE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((byte[])(BLOBVALUE));
            }
            if ((BLOBSTRING == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(BLOBSTRING));
            }
            if ((FIRSTCAT == null)) {
                throw new global::System.ArgumentNullException("FIRSTCAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(FIRSTCAT));
            }
            if ((SECONDCAT == null)) {
                throw new global::System.ArgumentNullException("SECONDCAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SECONDCAT));
            }
            if ((THIRDCAT == null)) {
                throw new global::System.ArgumentNullException("THIRDCAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(THIRDCAT));
            }
            if ((MINVALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(MINVALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((MAXVALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(MAXVALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(VALUETYPE));
            if ((MAXSTRINGLENGTH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(MAXSTRINGLENGTH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_USERNAME));
            }
            if ((Original_ITEM == null)) {
                throw new global::System.ArgumentNullException("Original_ITEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ITEM));
            }
            if ((Original_STRVALUE == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_STRVALUE));
            }
            if ((Original_INTVALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_INTVALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_FLOATVALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((float)(Original_FLOATVALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_BOOLVALUE == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_BOOLVALUE));
            }
            if ((Original_FIRSTCAT == null)) {
                throw new global::System.ArgumentNullException("Original_FIRSTCAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_FIRSTCAT));
            }
            if ((Original_SECONDCAT == null)) {
                throw new global::System.ArgumentNullException("Original_SECONDCAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_SECONDCAT));
            }
            if ((Original_THIRDCAT == null)) {
                throw new global::System.ArgumentNullException("Original_THIRDCAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_THIRDCAT));
            }
            if ((Original_MINVALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_MINVALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_MAXVALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_MAXVALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_VALUETYPE));
            if ((Original_MAXSTRINGLENGTH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_MAXSTRINGLENGTH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string STRVALUE, 
                    global::System.Nullable<int> INTVALUE, 
                    global::System.Nullable<float> FLOATVALUE, 
                    string BOOLVALUE, 
                    byte[] BLOBVALUE, 
                    string BLOBSTRING, 
                    string FIRSTCAT, 
                    string SECONDCAT, 
                    string THIRDCAT, 
                    global::System.Nullable<int> MINVALUE, 
                    global::System.Nullable<int> MAXVALUE, 
                    int VALUETYPE, 
                    global::System.Nullable<int> MAXSTRINGLENGTH, 
                    string Original_USERNAME, 
                    string Original_ITEM, 
                    string Original_STRVALUE, 
                    global::System.Nullable<int> Original_INTVALUE, 
                    global::System.Nullable<float> Original_FLOATVALUE, 
                    string Original_BOOLVALUE, 
                    string Original_FIRSTCAT, 
                    string Original_SECONDCAT, 
                    string Original_THIRDCAT, 
                    global::System.Nullable<int> Original_MINVALUE, 
                    global::System.Nullable<int> Original_MAXVALUE, 
                    int Original_VALUETYPE, 
                    global::System.Nullable<int> Original_MAXSTRINGLENGTH) {
            return this.Update(Original_USERNAME, Original_ITEM, STRVALUE, INTVALUE, FLOATVALUE, BOOLVALUE, BLOBVALUE, BLOBSTRING, FIRSTCAT, SECONDCAT, THIRDCAT, MINVALUE, MAXVALUE, VALUETYPE, MAXSTRINGLENGTH, Original_USERNAME, Original_ITEM, Original_STRVALUE, Original_INTVALUE, Original_FLOATVALUE, Original_BOOLVALUE, Original_FIRSTCAT, Original_SECONDCAT, Original_THIRDCAT, Original_MINVALUE, Original_MAXVALUE, Original_VALUETYPE, Original_MAXSTRINGLENGTH);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CONFIGDISPLAYTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CONFIGDISPLAYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CONFIGDISPLAY";
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("USERNAME", "USERNAME");
            tableMapping.ColumnMappings.Add("ITEM", "ITEM");
            tableMapping.ColumnMappings.Add("DESKTOPLEFT", "DESKTOPLEFT");
            tableMapping.ColumnMappings.Add("DESKTOPTOP", "DESKTOPTOP");
            tableMapping.ColumnMappings.Add("DESKTOPRIGHT", "DESKTOPRIGHT");
            tableMapping.ColumnMappings.Add("DESKTOPBOTTOM", "DESKTOPBOTTOM");
            tableMapping.ColumnMappings.Add("BLOBVALUE", "BLOBVALUE");
            tableMapping.ColumnMappings.Add("BLOBSTRING", "BLOBSTRING");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""CONFIGDISPLAY"" WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""USERNAME"" = @Original_USERNAME) AND (""ITEM"" = @Original_ITEM) AND (""DESKTOPLEFT"" = @Original_DESKTOPLEFT) AND (""DESKTOPTOP"" = @Original_DESKTOPTOP) AND (""DESKTOPRIGHT"" = @Original_DESKTOPRIGHT) AND (""DESKTOPBOTTOM"" = @Original_DESKTOPBOTTOM))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ITEM";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ITEM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESKTOPLEFT";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPLEFT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESKTOPTOP";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPTOP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESKTOPRIGHT";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPRIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESKTOPBOTTOM";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPBOTTOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""CONFIGDISPLAY"" (""ENTRYID"", ""USERNAME"", ""ITEM"", ""DESKTOPLEFT"", ""DESKTOPTOP"", ""DESKTOPRIGHT"", ""DESKTOPBOTTOM"", ""BLOBVALUE"", ""BLOBSTRING"") VALUES (@ENTRYID, @USERNAME, @ITEM, @DESKTOPLEFT, @DESKTOPTOP, @DESKTOPRIGHT, @DESKTOPBOTTOM, @BLOBVALUE, @BLOBSTRING)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ITEM";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ITEM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESKTOPLEFT";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPLEFT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESKTOPTOP";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPTOP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESKTOPRIGHT";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPRIGHT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESKTOPBOTTOM";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPBOTTOM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@BLOBVALUE";
            param.DbType = global::System.Data.DbType.Binary;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "BLOBVALUE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@BLOBSTRING";
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "BLOBSTRING";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""CONFIGDISPLAY"" SET ""ENTRYID"" = @ENTRYID, ""USERNAME"" = @USERNAME, ""ITEM"" = @ITEM, ""DESKTOPLEFT"" = @DESKTOPLEFT, ""DESKTOPTOP"" = @DESKTOPTOP, ""DESKTOPRIGHT"" = @DESKTOPRIGHT, ""DESKTOPBOTTOM"" = @DESKTOPBOTTOM, ""BLOBVALUE"" = @BLOBVALUE, ""BLOBSTRING"" = @BLOBSTRING WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""USERNAME"" = @Original_USERNAME) AND (""ITEM"" = @Original_ITEM) AND (""DESKTOPLEFT"" = @Original_DESKTOPLEFT) AND (""DESKTOPTOP"" = @Original_DESKTOPTOP) AND (""DESKTOPRIGHT"" = @Original_DESKTOPRIGHT) AND (""DESKTOPBOTTOM"" = @Original_DESKTOPBOTTOM))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ITEM";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ITEM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESKTOPLEFT";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPLEFT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESKTOPTOP";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPTOP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESKTOPRIGHT";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPRIGHT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESKTOPBOTTOM";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPBOTTOM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@BLOBVALUE";
            param.DbType = global::System.Data.DbType.Binary;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "BLOBVALUE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@BLOBSTRING";
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "BLOBSTRING";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ITEM";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ITEM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESKTOPLEFT";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPLEFT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESKTOPTOP";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPTOP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESKTOPRIGHT";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPRIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESKTOPBOTTOM";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DESKTOPBOTTOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ENTRYID\", \"USERNAME\", \"ITEM\", \"DESKTOPLEFT\", \"DESKTOPTOP\", \"DESKTOPRIGHT\"" +
                ", \"DESKTOPBOTTOM\", \"BLOBVALUE\", \"BLOBSTRING\" FROM \"CONFIGDISPLAY\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.CONFIGDISPLAYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.CONFIGDISPLAYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.CONFIGDISPLAYDataTable dataTable = new LoggingAndConfig.CONFIGDISPLAYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.CONFIGDISPLAYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "CONFIGDISPLAY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ENTRYID, string Original_USERNAME, string Original_ITEM, int Original_DESKTOPLEFT, int Original_DESKTOPTOP, int Original_DESKTOPRIGHT, int Original_DESKTOPBOTTOM) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ENTRYID));
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_USERNAME));
            }
            if ((Original_ITEM == null)) {
                throw new global::System.ArgumentNullException("Original_ITEM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ITEM));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_DESKTOPLEFT));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_DESKTOPTOP));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_DESKTOPRIGHT));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_DESKTOPBOTTOM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ENTRYID, string USERNAME, string ITEM, int DESKTOPLEFT, int DESKTOPTOP, int DESKTOPRIGHT, int DESKTOPBOTTOM, byte[] BLOBVALUE, string BLOBSTRING) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ENTRYID));
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USERNAME));
            }
            if ((ITEM == null)) {
                throw new global::System.ArgumentNullException("ITEM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ITEM));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(DESKTOPLEFT));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(DESKTOPTOP));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(DESKTOPRIGHT));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(DESKTOPBOTTOM));
            if ((BLOBVALUE == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((byte[])(BLOBVALUE));
            }
            if ((BLOBSTRING == null)) {
                throw new global::System.ArgumentNullException("BLOBSTRING");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(BLOBSTRING));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ENTRYID, 
                    string USERNAME, 
                    string ITEM, 
                    int DESKTOPLEFT, 
                    int DESKTOPTOP, 
                    int DESKTOPRIGHT, 
                    int DESKTOPBOTTOM, 
                    byte[] BLOBVALUE, 
                    string BLOBSTRING, 
                    int Original_ENTRYID, 
                    string Original_USERNAME, 
                    string Original_ITEM, 
                    int Original_DESKTOPLEFT, 
                    int Original_DESKTOPTOP, 
                    int Original_DESKTOPRIGHT, 
                    int Original_DESKTOPBOTTOM) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ENTRYID));
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(USERNAME));
            }
            if ((ITEM == null)) {
                throw new global::System.ArgumentNullException("ITEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ITEM));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(DESKTOPLEFT));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(DESKTOPTOP));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(DESKTOPRIGHT));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(DESKTOPBOTTOM));
            if ((BLOBVALUE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((byte[])(BLOBVALUE));
            }
            if ((BLOBSTRING == null)) {
                throw new global::System.ArgumentNullException("BLOBSTRING");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(BLOBSTRING));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ENTRYID));
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_USERNAME));
            }
            if ((Original_ITEM == null)) {
                throw new global::System.ArgumentNullException("Original_ITEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_ITEM));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_DESKTOPLEFT));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_DESKTOPTOP));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_DESKTOPRIGHT));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_DESKTOPBOTTOM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string USERNAME, string ITEM, int DESKTOPLEFT, int DESKTOPTOP, int DESKTOPRIGHT, int DESKTOPBOTTOM, byte[] BLOBVALUE, string BLOBSTRING, int Original_ENTRYID, string Original_USERNAME, string Original_ITEM, int Original_DESKTOPLEFT, int Original_DESKTOPTOP, int Original_DESKTOPRIGHT, int Original_DESKTOPBOTTOM) {
            return this.Update(Original_ENTRYID, USERNAME, ITEM, DESKTOPLEFT, DESKTOPTOP, DESKTOPRIGHT, DESKTOPBOTTOM, BLOBVALUE, BLOBSTRING, Original_ENTRYID, Original_USERNAME, Original_ITEM, Original_DESKTOPLEFT, Original_DESKTOPTOP, Original_DESKTOPRIGHT, Original_DESKTOPBOTTOM);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HEALTHVAULTSUMMARYEXPORTLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HEALTHVAULTSUMMARYEXPORTLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HEALTHVAULTSUMMARYEXPORTLOG";
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("INTERNALPATIENTID", "INTERNALPATIENTID");
            tableMapping.ColumnMappings.Add("ACTION", "ACTION");
            tableMapping.ColumnMappings.Add("ACTIONDATETIME", "ACTIONDATETIME");
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"HEALTHVAULTSUMMARYEXPORTLOG\" WHERE ((\"ENTRYID\" = @Original_ENTRYID) " +
                "AND (\"INTERNALPATIENTID\" = @Original_INTERNALPATIENTID) AND (\"ACTION\" = @Origina" +
                "l_ACTION) AND (\"ACTIONDATETIME\" = @Original_ACTIONDATETIME))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTERNALPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACTION";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "ACTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACTIONDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACTIONDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"HEALTHVAULTSUMMARYEXPORTLOG\" (\"ENTRYID\", \"INTERNALPATIENTID\", \"ACTIO" +
                "N\", \"ACTIONDATETIME\", \"DESCRIPTION\") VALUES (@ENTRYID, @INTERNALPATIENTID, @ACTI" +
                "ON, @ACTIONDATETIME, @DESCRIPTION)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTERNALPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACTION";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "ACTION";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACTIONDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACTIONDATETIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESCRIPTION";
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""HEALTHVAULTSUMMARYEXPORTLOG"" SET ""ENTRYID"" = @ENTRYID, ""INTERNALPATIENTID"" = @INTERNALPATIENTID, ""ACTION"" = @ACTION, ""ACTIONDATETIME"" = @ACTIONDATETIME, ""DESCRIPTION"" = @DESCRIPTION WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""INTERNALPATIENTID"" = @Original_INTERNALPATIENTID) AND (""ACTION"" = @Original_ACTION) AND (""ACTIONDATETIME"" = @Original_ACTIONDATETIME))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTERNALPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACTION";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "ACTION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACTIONDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACTIONDATETIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESCRIPTION";
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTERNALPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACTION";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "ACTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACTIONDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACTIONDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ENTRYID\", \"INTERNALPATIENTID\", \"ACTION\", \"ACTIONDATETIME\", \"DESCRIPTION\" " +
                "FROM \"HEALTHVAULTSUMMARYEXPORTLOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.HEALTHVAULTSUMMARYEXPORTLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.HEALTHVAULTSUMMARYEXPORTLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.HEALTHVAULTSUMMARYEXPORTLOGDataTable dataTable = new LoggingAndConfig.HEALTHVAULTSUMMARYEXPORTLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.HEALTHVAULTSUMMARYEXPORTLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "HEALTHVAULTSUMMARYEXPORTLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ENTRYID, int Original_INTERNALPATIENTID, string Original_ACTION, System.DateTime Original_ACTIONDATETIME) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ENTRYID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_INTERNALPATIENTID));
            if ((Original_ACTION == null)) {
                throw new global::System.ArgumentNullException("Original_ACTION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ACTION));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_ACTIONDATETIME));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ENTRYID, int INTERNALPATIENTID, string ACTION, System.DateTime ACTIONDATETIME, string DESCRIPTION) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(INTERNALPATIENTID));
            if ((ACTION == null)) {
                throw new global::System.ArgumentNullException("ACTION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ACTION));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(ACTIONDATETIME));
            if ((DESCRIPTION == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DESCRIPTION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ENTRYID, int INTERNALPATIENTID, string ACTION, System.DateTime ACTIONDATETIME, string DESCRIPTION, int Original_ENTRYID, int Original_INTERNALPATIENTID, string Original_ACTION, System.DateTime Original_ACTIONDATETIME) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(INTERNALPATIENTID));
            if ((ACTION == null)) {
                throw new global::System.ArgumentNullException("ACTION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ACTION));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(ACTIONDATETIME));
            if ((DESCRIPTION == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DESCRIPTION));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ENTRYID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_INTERNALPATIENTID));
            if ((Original_ACTION == null)) {
                throw new global::System.ArgumentNullException("Original_ACTION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_ACTION));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_ACTIONDATETIME));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int INTERNALPATIENTID, string ACTION, System.DateTime ACTIONDATETIME, string DESCRIPTION, int Original_ENTRYID, int Original_INTERNALPATIENTID, string Original_ACTION, System.DateTime Original_ACTIONDATETIME) {
            return this.Update(Original_ENTRYID, INTERNALPATIENTID, ACTION, ACTIONDATETIME, DESCRIPTION, Original_ENTRYID, Original_INTERNALPATIENTID, Original_ACTION, Original_ACTIONDATETIME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MDINTOUCHLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MDINTOUCHLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MDINTOUCHLOG";
            tableMapping.ColumnMappings.Add("INTERNALMDINTOUCHLOGID", "INTERNALMDINTOUCHLOGID");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("MSGTEXT", "MSGTEXT");
            tableMapping.ColumnMappings.Add("DATETIME", "DATETIME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"MDINTOUCHLOG\" WHERE ((\"INTERNALMDINTOUCHLOGID\" = @Original_INTERNALM" +
                "DINTOUCHLOGID) AND (\"STATUS\" = @Original_STATUS) AND (\"MSGTEXT\" = @Original_MSGT" +
                "EXT) AND (\"DATETIME\" = @Original_DATETIME))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTERNALMDINTOUCHLOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALMDINTOUCHLOGID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUS";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MSGTEXT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "MSGTEXT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"MDINTOUCHLOG\" (\"INTERNALMDINTOUCHLOGID\", \"STATUS\", \"MSGTEXT\", \"DATET" +
                "IME\") VALUES (@INTERNALMDINTOUCHLOGID, @STATUS, @MSGTEXT, @DATETIME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTERNALMDINTOUCHLOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALMDINTOUCHLOGID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUS";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MSGTEXT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "MSGTEXT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DATETIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""MDINTOUCHLOG"" SET ""INTERNALMDINTOUCHLOGID"" = @INTERNALMDINTOUCHLOGID, ""STATUS"" = @STATUS, ""MSGTEXT"" = @MSGTEXT, ""DATETIME"" = @DATETIME WHERE ((""INTERNALMDINTOUCHLOGID"" = @Original_INTERNALMDINTOUCHLOGID) AND (""STATUS"" = @Original_STATUS) AND (""MSGTEXT"" = @Original_MSGTEXT) AND (""DATETIME"" = @Original_DATETIME))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTERNALMDINTOUCHLOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALMDINTOUCHLOGID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUS";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MSGTEXT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "MSGTEXT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DATETIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTERNALMDINTOUCHLOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALMDINTOUCHLOGID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUS";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MSGTEXT";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "MSGTEXT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"INTERNALMDINTOUCHLOGID\", \"STATUS\", \"MSGTEXT\", \"DATETIME\" FROM \"MDINTOUCHL" +
                "OG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.MDINTOUCHLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.MDINTOUCHLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.MDINTOUCHLOGDataTable dataTable = new LoggingAndConfig.MDINTOUCHLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.MDINTOUCHLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "MDINTOUCHLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_INTERNALMDINTOUCHLOGID, string Original_STATUS, string Original_MSGTEXT, System.DateTime Original_DATETIME) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_INTERNALMDINTOUCHLOGID));
            if ((Original_STATUS == null)) {
                throw new global::System.ArgumentNullException("Original_STATUS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_STATUS));
            }
            if ((Original_MSGTEXT == null)) {
                throw new global::System.ArgumentNullException("Original_MSGTEXT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MSGTEXT));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_DATETIME));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int INTERNALMDINTOUCHLOGID, string STATUS, string MSGTEXT, System.DateTime DATETIME) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(INTERNALMDINTOUCHLOGID));
            if ((STATUS == null)) {
                throw new global::System.ArgumentNullException("STATUS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(STATUS));
            }
            if ((MSGTEXT == null)) {
                throw new global::System.ArgumentNullException("MSGTEXT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MSGTEXT));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DATETIME));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int INTERNALMDINTOUCHLOGID, string STATUS, string MSGTEXT, System.DateTime DATETIME, int Original_INTERNALMDINTOUCHLOGID, string Original_STATUS, string Original_MSGTEXT, System.DateTime Original_DATETIME) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(INTERNALMDINTOUCHLOGID));
            if ((STATUS == null)) {
                throw new global::System.ArgumentNullException("STATUS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(STATUS));
            }
            if ((MSGTEXT == null)) {
                throw new global::System.ArgumentNullException("MSGTEXT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MSGTEXT));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DATETIME));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_INTERNALMDINTOUCHLOGID));
            if ((Original_STATUS == null)) {
                throw new global::System.ArgumentNullException("Original_STATUS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_STATUS));
            }
            if ((Original_MSGTEXT == null)) {
                throw new global::System.ArgumentNullException("Original_MSGTEXT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MSGTEXT));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_DATETIME));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string STATUS, string MSGTEXT, System.DateTime DATETIME, int Original_INTERNALMDINTOUCHLOGID, string Original_STATUS, string Original_MSGTEXT, System.DateTime Original_DATETIME) {
            return this.Update(Original_INTERNALMDINTOUCHLOGID, STATUS, MSGTEXT, DATETIME, Original_INTERNALMDINTOUCHLOGID, Original_STATUS, Original_MSGTEXT, Original_DATETIME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MIRTH_HL7_LOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MIRTH_HL7_LOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MIRTH_HL7_LOG";
            tableMapping.ColumnMappings.Add("MIRTHHL7LOGID", "MIRTHHL7LOGID");
            tableMapping.ColumnMappings.Add("RECORDID", "RECORDID");
            tableMapping.ColumnMappings.Add("TIMECOMPLETED", "TIMECOMPLETED");
            tableMapping.ColumnMappings.Add("PATIENTLASTNAME", "PATIENTLASTNAME");
            tableMapping.ColumnMappings.Add("PATIENTFIRSTNAME", "PATIENTFIRSTNAME");
            tableMapping.ColumnMappings.Add("PATIENTID", "PATIENTID");
            tableMapping.ColumnMappings.Add("ISSUEROFPATIENTID", "ISSUEROFPATIENTID");
            tableMapping.ColumnMappings.Add("ACCESSIONNUMBER", "ACCESSIONNUMBER");
            tableMapping.ColumnMappings.Add("REPORTTITLE", "REPORTTITLE");
            tableMapping.ColumnMappings.Add("DESTINATIONNAMES", "DESTINATIONNAMES");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""MIRTH_HL7_LOG"" WHERE ((""MIRTHHL7LOGID"" = @Original_MIRTHHL7LOGID) AND ((@IsNull_RECORDID = 1 AND ""RECORDID"" IS NULL) OR (""RECORDID"" = @Original_RECORDID)) AND ((@IsNull_TIMECOMPLETED = 1 AND ""TIMECOMPLETED"" IS NULL) OR (""TIMECOMPLETED"" = @Original_TIMECOMPLETED)) AND ((@IsNull_PATIENTLASTNAME = 1 AND ""PATIENTLASTNAME"" IS NULL) OR (""PATIENTLASTNAME"" = @Original_PATIENTLASTNAME)) AND ((@IsNull_PATIENTFIRSTNAME = 1 AND ""PATIENTFIRSTNAME"" IS NULL) OR (""PATIENTFIRSTNAME"" = @Original_PATIENTFIRSTNAME)) AND ((@IsNull_PATIENTID = 1 AND ""PATIENTID"" IS NULL) OR (""PATIENTID"" = @Original_PATIENTID)) AND ((@IsNull_ISSUEROFPATIENTID = 1 AND ""ISSUEROFPATIENTID"" IS NULL) OR (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID)) AND ((@IsNull_ACCESSIONNUMBER = 1 AND ""ACCESSIONNUMBER"" IS NULL) OR (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER)) AND ((@IsNull_REPORTTITLE = 1 AND ""REPORTTITLE"" IS NULL) OR (""REPORTTITLE"" = @Original_REPORTTITLE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MIRTHHL7LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MIRTHHL7LOGID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_RECORDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "RECORDID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_RECORDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "RECORDID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_TIMECOMPLETED";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMECOMPLETED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMECOMPLETED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMECOMPLETED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTLASTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTLASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTLASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTLASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTFIRSTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTFIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ISSUEROFPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_REPORTTITLE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "REPORTTITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_REPORTTITLE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "REPORTTITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""MIRTH_HL7_LOG"" (""MIRTHHL7LOGID"", ""RECORDID"", ""TIMECOMPLETED"", ""PATIENTLASTNAME"", ""PATIENTFIRSTNAME"", ""PATIENTID"", ""ISSUEROFPATIENTID"", ""ACCESSIONNUMBER"", ""REPORTTITLE"", ""DESTINATIONNAMES"") VALUES (@MIRTHHL7LOGID, @RECORDID, @TIMECOMPLETED, @PATIENTLASTNAME, @PATIENTFIRSTNAME, @PATIENTID, @ISSUEROFPATIENTID, @ACCESSIONNUMBER, @REPORTTITLE, @DESTINATIONNAMES)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MIRTHHL7LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MIRTHHL7LOGID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@RECORDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "RECORDID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMECOMPLETED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMECOMPLETED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTLASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTLASTNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTFIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFIRSTNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@REPORTTITLE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "REPORTTITLE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESTINATIONNAMES";
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "DESTINATIONNAMES";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""MIRTH_HL7_LOG"" SET ""MIRTHHL7LOGID"" = @MIRTHHL7LOGID, ""RECORDID"" = @RECORDID, ""TIMECOMPLETED"" = @TIMECOMPLETED, ""PATIENTLASTNAME"" = @PATIENTLASTNAME, ""PATIENTFIRSTNAME"" = @PATIENTFIRSTNAME, ""PATIENTID"" = @PATIENTID, ""ISSUEROFPATIENTID"" = @ISSUEROFPATIENTID, ""ACCESSIONNUMBER"" = @ACCESSIONNUMBER, ""REPORTTITLE"" = @REPORTTITLE, ""DESTINATIONNAMES"" = @DESTINATIONNAMES WHERE ((""MIRTHHL7LOGID"" = @Original_MIRTHHL7LOGID) AND ((@IsNull_RECORDID = 1 AND ""RECORDID"" IS NULL) OR (""RECORDID"" = @Original_RECORDID)) AND ((@IsNull_TIMECOMPLETED = 1 AND ""TIMECOMPLETED"" IS NULL) OR (""TIMECOMPLETED"" = @Original_TIMECOMPLETED)) AND ((@IsNull_PATIENTLASTNAME = 1 AND ""PATIENTLASTNAME"" IS NULL) OR (""PATIENTLASTNAME"" = @Original_PATIENTLASTNAME)) AND ((@IsNull_PATIENTFIRSTNAME = 1 AND ""PATIENTFIRSTNAME"" IS NULL) OR (""PATIENTFIRSTNAME"" = @Original_PATIENTFIRSTNAME)) AND ((@IsNull_PATIENTID = 1 AND ""PATIENTID"" IS NULL) OR (""PATIENTID"" = @Original_PATIENTID)) AND ((@IsNull_ISSUEROFPATIENTID = 1 AND ""ISSUEROFPATIENTID"" IS NULL) OR (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID)) AND ((@IsNull_ACCESSIONNUMBER = 1 AND ""ACCESSIONNUMBER"" IS NULL) OR (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER)) AND ((@IsNull_REPORTTITLE = 1 AND ""REPORTTITLE"" IS NULL) OR (""REPORTTITLE"" = @Original_REPORTTITLE)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MIRTHHL7LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MIRTHHL7LOGID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@RECORDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "RECORDID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMECOMPLETED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMECOMPLETED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTLASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTLASTNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTFIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFIRSTNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@REPORTTITLE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "REPORTTITLE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESTINATIONNAMES";
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "DESTINATIONNAMES";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MIRTHHL7LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MIRTHHL7LOGID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_RECORDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "RECORDID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_RECORDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "RECORDID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_TIMECOMPLETED";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMECOMPLETED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMECOMPLETED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMECOMPLETED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTLASTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTLASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTLASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTLASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTFIRSTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTFIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ISSUEROFPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_REPORTTITLE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "REPORTTITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_REPORTTITLE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "REPORTTITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"MIRTHHL7LOGID\", \"RECORDID\", \"TIMECOMPLETED\", \"PATIENTLASTNAME\", \"PATIENTF" +
                "IRSTNAME\", \"PATIENTID\", \"ISSUEROFPATIENTID\", \"ACCESSIONNUMBER\", \"REPORTTITLE\", \"" +
                "DESTINATIONNAMES\" FROM \"MIRTH_HL7_LOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.MIRTH_HL7_LOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.MIRTH_HL7_LOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.MIRTH_HL7_LOGDataTable dataTable = new LoggingAndConfig.MIRTH_HL7_LOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.MIRTH_HL7_LOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "MIRTH_HL7_LOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MIRTHHL7LOGID, global::System.Nullable<int> Original_RECORDID, global::System.Nullable<global::System.DateTime> Original_TIMECOMPLETED, string Original_PATIENTLASTNAME, string Original_PATIENTFIRSTNAME, string Original_PATIENTID, string Original_ISSUEROFPATIENTID, string Original_ACCESSIONNUMBER, string Original_REPORTTITLE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MIRTHHL7LOGID));
            if ((Original_RECORDID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_RECORDID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_TIMECOMPLETED.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_TIMECOMPLETED.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_PATIENTLASTNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PATIENTLASTNAME));
            }
            if ((Original_PATIENTFIRSTNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_PATIENTFIRSTNAME));
            }
            if ((Original_PATIENTID == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_REPORTTITLE == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_REPORTTITLE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int MIRTHHL7LOGID, global::System.Nullable<int> RECORDID, global::System.Nullable<global::System.DateTime> TIMECOMPLETED, string PATIENTLASTNAME, string PATIENTFIRSTNAME, string PATIENTID, string ISSUEROFPATIENTID, string ACCESSIONNUMBER, string REPORTTITLE, string DESTINATIONNAMES) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(MIRTHHL7LOGID));
            if ((RECORDID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(RECORDID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TIMECOMPLETED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(TIMECOMPLETED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PATIENTLASTNAME == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PATIENTLASTNAME));
            }
            if ((PATIENTFIRSTNAME == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PATIENTFIRSTNAME));
            }
            if ((PATIENTID == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((REPORTTITLE == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(REPORTTITLE));
            }
            if ((DESTINATIONNAMES == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(DESTINATIONNAMES));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int MIRTHHL7LOGID, 
                    global::System.Nullable<int> RECORDID, 
                    global::System.Nullable<global::System.DateTime> TIMECOMPLETED, 
                    string PATIENTLASTNAME, 
                    string PATIENTFIRSTNAME, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string ACCESSIONNUMBER, 
                    string REPORTTITLE, 
                    string DESTINATIONNAMES, 
                    int Original_MIRTHHL7LOGID, 
                    global::System.Nullable<int> Original_RECORDID, 
                    global::System.Nullable<global::System.DateTime> Original_TIMECOMPLETED, 
                    string Original_PATIENTLASTNAME, 
                    string Original_PATIENTFIRSTNAME, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_REPORTTITLE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(MIRTHHL7LOGID));
            if ((RECORDID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(RECORDID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TIMECOMPLETED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(TIMECOMPLETED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PATIENTLASTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PATIENTLASTNAME));
            }
            if ((PATIENTFIRSTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PATIENTFIRSTNAME));
            }
            if ((PATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((REPORTTITLE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(REPORTTITLE));
            }
            if ((DESTINATIONNAMES == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(DESTINATIONNAMES));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_MIRTHHL7LOGID));
            if ((Original_RECORDID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_RECORDID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_TIMECOMPLETED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_TIMECOMPLETED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_PATIENTLASTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_PATIENTLASTNAME));
            }
            if ((Original_PATIENTFIRSTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_PATIENTFIRSTNAME));
            }
            if ((Original_PATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_REPORTTITLE == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_REPORTTITLE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> RECORDID, 
                    global::System.Nullable<global::System.DateTime> TIMECOMPLETED, 
                    string PATIENTLASTNAME, 
                    string PATIENTFIRSTNAME, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string ACCESSIONNUMBER, 
                    string REPORTTITLE, 
                    string DESTINATIONNAMES, 
                    int Original_MIRTHHL7LOGID, 
                    global::System.Nullable<int> Original_RECORDID, 
                    global::System.Nullable<global::System.DateTime> Original_TIMECOMPLETED, 
                    string Original_PATIENTLASTNAME, 
                    string Original_PATIENTFIRSTNAME, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_REPORTTITLE) {
            return this.Update(Original_MIRTHHL7LOGID, RECORDID, TIMECOMPLETED, PATIENTLASTNAME, PATIENTFIRSTNAME, PATIENTID, ISSUEROFPATIENTID, ACCESSIONNUMBER, REPORTTITLE, DESTINATIONNAMES, Original_MIRTHHL7LOGID, Original_RECORDID, Original_TIMECOMPLETED, Original_PATIENTLASTNAME, Original_PATIENTFIRSTNAME, Original_PATIENTID, Original_ISSUEROFPATIENTID, Original_ACCESSIONNUMBER, Original_REPORTTITLE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MPPSTRANSMITLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MPPSTRANSMITLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MPPSTRANSMITLOG";
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("TIMESTARTED", "TIMESTARTED");
            tableMapping.ColumnMappings.Add("TIMEFINISHED", "TIMEFINISHED");
            tableMapping.ColumnMappings.Add("PATIENTID", "PATIENTID");
            tableMapping.ColumnMappings.Add("ISSUEROFPATIENTID", "ISSUEROFPATIENTID");
            tableMapping.ColumnMappings.Add("STUDYINSTANCEUID", "STUDYINSTANCEUID");
            tableMapping.ColumnMappings.Add("ACCESSIONNUMBER", "ACCESSIONNUMBER");
            tableMapping.ColumnMappings.Add("USERNAME", "USERNAME");
            tableMapping.ColumnMappings.Add("SERVICENAME", "SERVICENAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""MPPSTRANSMITLOG"" WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""TIMESTARTED"" = @Original_TIMESTARTED) AND (""TIMEFINISHED"" = @Original_TIMEFINISHED) AND (""PATIENTID"" = @Original_PATIENTID) AND (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER) AND (""USERNAME"" = @Original_USERNAME) AND (""SERVICENAME"" = @Original_SERVICENAME))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""MPPSTRANSMITLOG"" (""ENTRYID"", ""TIMESTARTED"", ""TIMEFINISHED"", ""PATIENTID"", ""ISSUEROFPATIENTID"", ""STUDYINSTANCEUID"", ""ACCESSIONNUMBER"", ""USERNAME"", ""SERVICENAME"") VALUES (@ENTRYID, @TIMESTARTED, @TIMEFINISHED, @PATIENTID, @ISSUEROFPATIENTID, @STUDYINSTANCEUID, @ACCESSIONNUMBER, @USERNAME, @SERVICENAME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""MPPSTRANSMITLOG"" SET ""ENTRYID"" = @ENTRYID, ""TIMESTARTED"" = @TIMESTARTED, ""TIMEFINISHED"" = @TIMEFINISHED, ""PATIENTID"" = @PATIENTID, ""ISSUEROFPATIENTID"" = @ISSUEROFPATIENTID, ""STUDYINSTANCEUID"" = @STUDYINSTANCEUID, ""ACCESSIONNUMBER"" = @ACCESSIONNUMBER, ""USERNAME"" = @USERNAME, ""SERVICENAME"" = @SERVICENAME WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""TIMESTARTED"" = @Original_TIMESTARTED) AND (""TIMEFINISHED"" = @Original_TIMEFINISHED) AND (""PATIENTID"" = @Original_PATIENTID) AND (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER) AND (""USERNAME"" = @Original_USERNAME) AND (""SERVICENAME"" = @Original_SERVICENAME))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ENTRYID\", \"TIMESTARTED\", \"TIMEFINISHED\", \"PATIENTID\", \"ISSUEROFPATIENTID\"" +
                ", \"STUDYINSTANCEUID\", \"ACCESSIONNUMBER\", \"USERNAME\", \"SERVICENAME\" FROM \"MPPSTRA" +
                "NSMITLOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.MPPSTRANSMITLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.MPPSTRANSMITLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.MPPSTRANSMITLOGDataTable dataTable = new LoggingAndConfig.MPPSTRANSMITLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.MPPSTRANSMITLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "MPPSTRANSMITLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ENTRYID, System.DateTime Original_TIMESTARTED, System.DateTime Original_TIMEFINISHED, string Original_PATIENTID, string Original_ISSUEROFPATIENTID, string Original_STUDYINSTANCEUID, string Original_ACCESSIONNUMBER, string Original_USERNAME, string Original_SERVICENAME) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ENTRYID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_TIMESTARTED));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_TIMEFINISHED));
            if ((Original_PATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_PATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSIONNUMBER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_USERNAME));
            }
            if ((Original_SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SERVICENAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SERVICENAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ENTRYID, System.DateTime TIMESTARTED, System.DateTime TIMEFINISHED, string PATIENTID, string ISSUEROFPATIENTID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, string USERNAME, string SERVICENAME) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(TIMESTARTED));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(TIMEFINISHED));
            if ((PATIENTID == null)) {
                throw new global::System.ArgumentNullException("PATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("ACCESSIONNUMBER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(USERNAME));
            }
            if ((SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("SERVICENAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SERVICENAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ENTRYID, 
                    System.DateTime TIMESTARTED, 
                    System.DateTime TIMEFINISHED, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    string USERNAME, 
                    string SERVICENAME, 
                    int Original_ENTRYID, 
                    System.DateTime Original_TIMESTARTED, 
                    System.DateTime Original_TIMEFINISHED, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_USERNAME, 
                    string Original_SERVICENAME) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(TIMESTARTED));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(TIMEFINISHED));
            if ((PATIENTID == null)) {
                throw new global::System.ArgumentNullException("PATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("ACCESSIONNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(USERNAME));
            }
            if ((SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("SERVICENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SERVICENAME));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ENTRYID));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_TIMESTARTED));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_TIMEFINISHED));
            if ((Original_PATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_PATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSIONNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_USERNAME));
            }
            if ((Original_SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SERVICENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_SERVICENAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime TIMESTARTED, 
                    System.DateTime TIMEFINISHED, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    string USERNAME, 
                    string SERVICENAME, 
                    int Original_ENTRYID, 
                    System.DateTime Original_TIMESTARTED, 
                    System.DateTime Original_TIMEFINISHED, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_USERNAME, 
                    string Original_SERVICENAME) {
            return this.Update(Original_ENTRYID, TIMESTARTED, TIMEFINISHED, PATIENTID, ISSUEROFPATIENTID, STUDYINSTANCEUID, ACCESSIONNUMBER, USERNAME, SERVICENAME, Original_ENTRYID, Original_TIMESTARTED, Original_TIMEFINISHED, Original_PATIENTID, Original_ISSUEROFPATIENTID, Original_STUDYINSTANCEUID, Original_ACCESSIONNUMBER, Original_USERNAME, Original_SERVICENAME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NETSUITEERRORLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NETSUITEERRORLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NETSUITEERRORLOG";
            tableMapping.ColumnMappings.Add("LOGID", "LOGID");
            tableMapping.ColumnMappings.Add("STUDYINSTANCEUID", "STUDYINSTANCEUID");
            tableMapping.ColumnMappings.Add("ACCESSIONNUMBER", "ACCESSIONNUMBER");
            tableMapping.ColumnMappings.Add("TRANSACTIONTYPE", "TRANSACTIONTYPE");
            tableMapping.ColumnMappings.Add("ERRORMESSAGE", "ERRORMESSAGE");
            tableMapping.ColumnMappings.Add("ERRORDATETIME", "ERRORDATETIME");
            tableMapping.ColumnMappings.Add("INSTITUTION", "INSTITUTION");
            tableMapping.ColumnMappings.Add("PATIENTID", "PATIENTID");
            tableMapping.ColumnMappings.Add("ISSUEROFPATIENTID", "ISSUEROFPATIENTID");
            tableMapping.ColumnMappings.Add("SCHEDULEDMODALITY", "SCHEDULEDMODALITY");
            tableMapping.ColumnMappings.Add("SCHEDULEDBODYPART", "SCHEDULEDBODYPART");
            tableMapping.ColumnMappings.Add("MULTIACQUISITION", "MULTIACQUISITION");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("STUDYTRANSITIONDATETIME", "STUDYTRANSITIONDATETIME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""NETSUITEERRORLOG"" WHERE ((""LOGID"" = @Original_LOGID) AND ((@IsNull_STUDYINSTANCEUID = 1 AND ""STUDYINSTANCEUID"" IS NULL) OR (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID)) AND ((@IsNull_ACCESSIONNUMBER = 1 AND ""ACCESSIONNUMBER"" IS NULL) OR (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER)) AND (""TRANSACTIONTYPE"" = @Original_TRANSACTIONTYPE) AND ((@IsNull_ERRORMESSAGE = 1 AND ""ERRORMESSAGE"" IS NULL) OR (""ERRORMESSAGE"" = @Original_ERRORMESSAGE)) AND (""ERRORDATETIME"" = @Original_ERRORDATETIME) AND ((@IsNull_INSTITUTION = 1 AND ""INSTITUTION"" IS NULL) OR (""INSTITUTION"" = @Original_INSTITUTION)) AND ((@IsNull_PATIENTID = 1 AND ""PATIENTID"" IS NULL) OR (""PATIENTID"" = @Original_PATIENTID)) AND ((@IsNull_ISSUEROFPATIENTID = 1 AND ""ISSUEROFPATIENTID"" IS NULL) OR (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID)) AND ((@IsNull_SCHEDULEDMODALITY = 1 AND ""SCHEDULEDMODALITY"" IS NULL) OR (""SCHEDULEDMODALITY"" = @Original_SCHEDULEDMODALITY)) AND ((@IsNull_SCHEDULEDBODYPART = 1 AND ""SCHEDULEDBODYPART"" IS NULL) OR (""SCHEDULEDBODYPART"" = @Original_SCHEDULEDBODYPART)) AND ((@IsNull_MULTIACQUISITION = 1 AND ""MULTIACQUISITION"" IS NULL) OR (""MULTIACQUISITION"" = @Original_MULTIACQUISITION)) AND ((@IsNull_STATUS = 1 AND ""STATUS"" IS NULL) OR (""STATUS"" = @Original_STATUS)) AND ((@IsNull_STUDYTRANSITIONDATETIME = 1 AND ""STUDYTRANSITIONDATETIME"" IS NULL) OR (""STUDYTRANSITIONDATETIME"" = @Original_STUDYTRANSITIONDATETIME)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LOGID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYINSTANCEUID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TRANSACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TRANSACTIONTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ERRORMESSAGE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "ERRORMESSAGE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ERRORMESSAGE";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "ERRORMESSAGE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ERRORDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ERRORDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_INSTITUTION";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INSTITUTION";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ISSUEROFPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SCHEDULEDMODALITY";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDMODALITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SCHEDULEDMODALITY";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDMODALITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SCHEDULEDBODYPART";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDBODYPART";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SCHEDULEDBODYPART";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDBODYPART";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_MULTIACQUISITION";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MULTIACQUISITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MULTIACQUISITION";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MULTIACQUISITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUS";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYTRANSITIONDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTRANSITIONDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYTRANSITIONDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTRANSITIONDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""NETSUITEERRORLOG"" (""LOGID"", ""STUDYINSTANCEUID"", ""ACCESSIONNUMBER"", ""TRANSACTIONTYPE"", ""ERRORMESSAGE"", ""ERRORDATETIME"", ""INSTITUTION"", ""PATIENTID"", ""ISSUEROFPATIENTID"", ""SCHEDULEDMODALITY"", ""SCHEDULEDBODYPART"", ""MULTIACQUISITION"", ""STATUS"", ""STUDYTRANSITIONDATETIME"") VALUES (@LOGID, @STUDYINSTANCEUID, @ACCESSIONNUMBER, @TRANSACTIONTYPE, @ERRORMESSAGE, @ERRORDATETIME, @INSTITUTION, @PATIENTID, @ISSUEROFPATIENTID, @SCHEDULEDMODALITY, @SCHEDULEDBODYPART, @MULTIACQUISITION, @STATUS, @STUDYTRANSITIONDATETIME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LOGID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TRANSACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TRANSACTIONTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ERRORMESSAGE";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "ERRORMESSAGE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ERRORDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ERRORDATETIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INSTITUTION";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTION";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SCHEDULEDMODALITY";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDMODALITY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SCHEDULEDBODYPART";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDBODYPART";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MULTIACQUISITION";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MULTIACQUISITION";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUS";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYTRANSITIONDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTRANSITIONDATETIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"NETSUITEERRORLOG\" SET \"LOGID\" = @LOGID, \"STUDYINSTANCEUID\" = @STUDYINSTAN" +
                "CEUID, \"ACCESSIONNUMBER\" = @ACCESSIONNUMBER, \"TRANSACTIONTYPE\" = @TRANSACTIONTYP" +
                "E, \"ERRORMESSAGE\" = @ERRORMESSAGE, \"ERRORDATETIME\" = @ERRORDATETIME, \"INSTITUTIO" +
                "N\" = @INSTITUTION, \"PATIENTID\" = @PATIENTID, \"ISSUEROFPATIENTID\" = @ISSUEROFPATI" +
                "ENTID, \"SCHEDULEDMODALITY\" = @SCHEDULEDMODALITY, \"SCHEDULEDBODYPART\" = @SCHEDULE" +
                "DBODYPART, \"MULTIACQUISITION\" = @MULTIACQUISITION, \"STATUS\" = @STATUS, \"STUDYTRA" +
                "NSITIONDATETIME\" = @STUDYTRANSITIONDATETIME WHERE ((\"LOGID\" = @Original_LOGID) A" +
                "ND ((@IsNull_STUDYINSTANCEUID = 1 AND \"STUDYINSTANCEUID\" IS NULL) OR (\"STUDYINST" +
                "ANCEUID\" = @Original_STUDYINSTANCEUID)) AND ((@IsNull_ACCESSIONNUMBER = 1 AND \"A" +
                "CCESSIONNUMBER\" IS NULL) OR (\"ACCESSIONNUMBER\" = @Original_ACCESSIONNUMBER)) AND" +
                " (\"TRANSACTIONTYPE\" = @Original_TRANSACTIONTYPE) AND ((@IsNull_ERRORMESSAGE = 1 " +
                "AND \"ERRORMESSAGE\" IS NULL) OR (\"ERRORMESSAGE\" = @Original_ERRORMESSAGE)) AND (\"" +
                "ERRORDATETIME\" = @Original_ERRORDATETIME) AND ((@IsNull_INSTITUTION = 1 AND \"INS" +
                "TITUTION\" IS NULL) OR (\"INSTITUTION\" = @Original_INSTITUTION)) AND ((@IsNull_PAT" +
                "IENTID = 1 AND \"PATIENTID\" IS NULL) OR (\"PATIENTID\" = @Original_PATIENTID)) AND " +
                "((@IsNull_ISSUEROFPATIENTID = 1 AND \"ISSUEROFPATIENTID\" IS NULL) OR (\"ISSUEROFPA" +
                "TIENTID\" = @Original_ISSUEROFPATIENTID)) AND ((@IsNull_SCHEDULEDMODALITY = 1 AND" +
                " \"SCHEDULEDMODALITY\" IS NULL) OR (\"SCHEDULEDMODALITY\" = @Original_SCHEDULEDMODAL" +
                "ITY)) AND ((@IsNull_SCHEDULEDBODYPART = 1 AND \"SCHEDULEDBODYPART\" IS NULL) OR (\"" +
                "SCHEDULEDBODYPART\" = @Original_SCHEDULEDBODYPART)) AND ((@IsNull_MULTIACQUISITIO" +
                "N = 1 AND \"MULTIACQUISITION\" IS NULL) OR (\"MULTIACQUISITION\" = @Original_MULTIAC" +
                "QUISITION)) AND ((@IsNull_STATUS = 1 AND \"STATUS\" IS NULL) OR (\"STATUS\" = @Origi" +
                "nal_STATUS)) AND ((@IsNull_STUDYTRANSITIONDATETIME = 1 AND \"STUDYTRANSITIONDATET" +
                "IME\" IS NULL) OR (\"STUDYTRANSITIONDATETIME\" = @Original_STUDYTRANSITIONDATETIME)" +
                "))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LOGID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TRANSACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TRANSACTIONTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ERRORMESSAGE";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "ERRORMESSAGE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ERRORDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ERRORDATETIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INSTITUTION";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SCHEDULEDMODALITY";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDMODALITY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SCHEDULEDBODYPART";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDBODYPART";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MULTIACQUISITION";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MULTIACQUISITION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUS";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYTRANSITIONDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTRANSITIONDATETIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LOGID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYINSTANCEUID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TRANSACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TRANSACTIONTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ERRORMESSAGE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "ERRORMESSAGE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ERRORMESSAGE";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "ERRORMESSAGE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ERRORDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ERRORDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_INSTITUTION";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INSTITUTION";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ISSUEROFPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SCHEDULEDMODALITY";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDMODALITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SCHEDULEDMODALITY";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDMODALITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SCHEDULEDBODYPART";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDBODYPART";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SCHEDULEDBODYPART";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDBODYPART";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_MULTIACQUISITION";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MULTIACQUISITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MULTIACQUISITION";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MULTIACQUISITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUS";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYTRANSITIONDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTRANSITIONDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYTRANSITIONDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTRANSITIONDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ""LOGID"", ""STUDYINSTANCEUID"", ""ACCESSIONNUMBER"", ""TRANSACTIONTYPE"", ""ERRORMESSAGE"", ""ERRORDATETIME"", ""INSTITUTION"", ""PATIENTID"", ""ISSUEROFPATIENTID"", ""SCHEDULEDMODALITY"", ""SCHEDULEDBODYPART"", ""MULTIACQUISITION"", ""STATUS"", ""STUDYTRANSITIONDATETIME"" FROM ""NETSUITEERRORLOG""";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.NETSUITEERRORLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.NETSUITEERRORLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.NETSUITEERRORLOGDataTable dataTable = new LoggingAndConfig.NETSUITEERRORLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.NETSUITEERRORLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "NETSUITEERRORLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_LOGID, string Original_STUDYINSTANCEUID, string Original_ACCESSIONNUMBER, int Original_TRANSACTIONTYPE, string Original_ERRORMESSAGE, System.DateTime Original_ERRORDATETIME, string Original_INSTITUTION, string Original_PATIENTID, string Original_ISSUEROFPATIENTID, string Original_SCHEDULEDMODALITY, string Original_SCHEDULEDBODYPART, string Original_MULTIACQUISITION, string Original_STATUS, global::System.Nullable<global::System.DateTime> Original_STUDYTRANSITIONDATETIME) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_LOGID));
            if ((Original_STUDYINSTANCEUID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_TRANSACTIONTYPE));
            if ((Original_ERRORMESSAGE == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ERRORMESSAGE));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_ERRORDATETIME));
            if ((Original_INSTITUTION == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_INSTITUTION));
            }
            if ((Original_PATIENTID == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_SCHEDULEDMODALITY == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_SCHEDULEDMODALITY));
            }
            if ((Original_SCHEDULEDBODYPART == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_SCHEDULEDBODYPART));
            }
            if ((Original_MULTIACQUISITION == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_MULTIACQUISITION));
            }
            if ((Original_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_STATUS));
            }
            if ((Original_STUDYTRANSITIONDATETIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_STUDYTRANSITIONDATETIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int LOGID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, int TRANSACTIONTYPE, string ERRORMESSAGE, System.DateTime ERRORDATETIME, string INSTITUTION, string PATIENTID, string ISSUEROFPATIENTID, string SCHEDULEDMODALITY, string SCHEDULEDBODYPART, string MULTIACQUISITION, string STATUS, global::System.Nullable<global::System.DateTime> STUDYTRANSITIONDATETIME) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(LOGID));
            if ((STUDYINSTANCEUID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ACCESSIONNUMBER));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(TRANSACTIONTYPE));
            if ((ERRORMESSAGE == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ERRORMESSAGE));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(ERRORDATETIME));
            if ((INSTITUTION == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(INSTITUTION));
            }
            if ((PATIENTID == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((SCHEDULEDMODALITY == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SCHEDULEDMODALITY));
            }
            if ((SCHEDULEDBODYPART == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(SCHEDULEDBODYPART));
            }
            if ((MULTIACQUISITION == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(MULTIACQUISITION));
            }
            if ((STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(STATUS));
            }
            if ((STUDYTRANSITIONDATETIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(STUDYTRANSITIONDATETIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int LOGID, 
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    int TRANSACTIONTYPE, 
                    string ERRORMESSAGE, 
                    System.DateTime ERRORDATETIME, 
                    string INSTITUTION, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string SCHEDULEDMODALITY, 
                    string SCHEDULEDBODYPART, 
                    string MULTIACQUISITION, 
                    string STATUS, 
                    global::System.Nullable<global::System.DateTime> STUDYTRANSITIONDATETIME, 
                    int Original_LOGID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    int Original_TRANSACTIONTYPE, 
                    string Original_ERRORMESSAGE, 
                    System.DateTime Original_ERRORDATETIME, 
                    string Original_INSTITUTION, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_SCHEDULEDMODALITY, 
                    string Original_SCHEDULEDBODYPART, 
                    string Original_MULTIACQUISITION, 
                    string Original_STATUS, 
                    global::System.Nullable<global::System.DateTime> Original_STUDYTRANSITIONDATETIME) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(LOGID));
            if ((STUDYINSTANCEUID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ACCESSIONNUMBER));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(TRANSACTIONTYPE));
            if ((ERRORMESSAGE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ERRORMESSAGE));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(ERRORDATETIME));
            if ((INSTITUTION == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(INSTITUTION));
            }
            if ((PATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((SCHEDULEDMODALITY == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SCHEDULEDMODALITY));
            }
            if ((SCHEDULEDBODYPART == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(SCHEDULEDBODYPART));
            }
            if ((MULTIACQUISITION == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(MULTIACQUISITION));
            }
            if ((STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(STATUS));
            }
            if ((STUDYTRANSITIONDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(STUDYTRANSITIONDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_LOGID));
            if ((Original_STUDYINSTANCEUID == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_TRANSACTIONTYPE));
            if ((Original_ERRORMESSAGE == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_ERRORMESSAGE));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_ERRORDATETIME));
            if ((Original_INSTITUTION == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_INSTITUTION));
            }
            if ((Original_PATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_SCHEDULEDMODALITY == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_SCHEDULEDMODALITY));
            }
            if ((Original_SCHEDULEDBODYPART == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_SCHEDULEDBODYPART));
            }
            if ((Original_MULTIACQUISITION == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_MULTIACQUISITION));
            }
            if ((Original_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_STATUS));
            }
            if ((Original_STUDYTRANSITIONDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(Original_STUDYTRANSITIONDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    int TRANSACTIONTYPE, 
                    string ERRORMESSAGE, 
                    System.DateTime ERRORDATETIME, 
                    string INSTITUTION, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string SCHEDULEDMODALITY, 
                    string SCHEDULEDBODYPART, 
                    string MULTIACQUISITION, 
                    string STATUS, 
                    global::System.Nullable<global::System.DateTime> STUDYTRANSITIONDATETIME, 
                    int Original_LOGID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    int Original_TRANSACTIONTYPE, 
                    string Original_ERRORMESSAGE, 
                    System.DateTime Original_ERRORDATETIME, 
                    string Original_INSTITUTION, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_SCHEDULEDMODALITY, 
                    string Original_SCHEDULEDBODYPART, 
                    string Original_MULTIACQUISITION, 
                    string Original_STATUS, 
                    global::System.Nullable<global::System.DateTime> Original_STUDYTRANSITIONDATETIME) {
            return this.Update(Original_LOGID, STUDYINSTANCEUID, ACCESSIONNUMBER, TRANSACTIONTYPE, ERRORMESSAGE, ERRORDATETIME, INSTITUTION, PATIENTID, ISSUEROFPATIENTID, SCHEDULEDMODALITY, SCHEDULEDBODYPART, MULTIACQUISITION, STATUS, STUDYTRANSITIONDATETIME, Original_LOGID, Original_STUDYINSTANCEUID, Original_ACCESSIONNUMBER, Original_TRANSACTIONTYPE, Original_ERRORMESSAGE, Original_ERRORDATETIME, Original_INSTITUTION, Original_PATIENTID, Original_ISSUEROFPATIENTID, Original_SCHEDULEDMODALITY, Original_SCHEDULEDBODYPART, Original_MULTIACQUISITION, Original_STATUS, Original_STUDYTRANSITIONDATETIME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NETSUITELOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NETSUITELOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NETSUITELOG";
            tableMapping.ColumnMappings.Add("LOGID", "LOGID");
            tableMapping.ColumnMappings.Add("STUDYINSTANCEUID", "STUDYINSTANCEUID");
            tableMapping.ColumnMappings.Add("ACCESSIONNUMBER", "ACCESSIONNUMBER");
            tableMapping.ColumnMappings.Add("TRANSACTIONTYPE", "TRANSACTIONTYPE");
            tableMapping.ColumnMappings.Add("FINISHTIME", "FINISHTIME");
            tableMapping.ColumnMappings.Add("INSTITUTION", "INSTITUTION");
            tableMapping.ColumnMappings.Add("PATIENTID", "PATIENTID");
            tableMapping.ColumnMappings.Add("ISSUEROFPATIENTID", "ISSUEROFPATIENTID");
            tableMapping.ColumnMappings.Add("SCHEDULEDMODALITY", "SCHEDULEDMODALITY");
            tableMapping.ColumnMappings.Add("SCHEDULEDBODYPART", "SCHEDULEDBODYPART");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("MULTIACQUISITION", "MULTIACQUISITION");
            tableMapping.ColumnMappings.Add("STUDYTRANSITIONDATETIME", "STUDYTRANSITIONDATETIME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""NETSUITELOG"" WHERE ((""LOGID"" = @Original_LOGID) AND ((@IsNull_STUDYINSTANCEUID = 1 AND ""STUDYINSTANCEUID"" IS NULL) OR (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID)) AND ((@IsNull_ACCESSIONNUMBER = 1 AND ""ACCESSIONNUMBER"" IS NULL) OR (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER)) AND ((@IsNull_TRANSACTIONTYPE = 1 AND ""TRANSACTIONTYPE"" IS NULL) OR (""TRANSACTIONTYPE"" = @Original_TRANSACTIONTYPE)) AND ((@IsNull_FINISHTIME = 1 AND ""FINISHTIME"" IS NULL) OR (""FINISHTIME"" = @Original_FINISHTIME)) AND ((@IsNull_INSTITUTION = 1 AND ""INSTITUTION"" IS NULL) OR (""INSTITUTION"" = @Original_INSTITUTION)) AND ((@IsNull_PATIENTID = 1 AND ""PATIENTID"" IS NULL) OR (""PATIENTID"" = @Original_PATIENTID)) AND ((@IsNull_ISSUEROFPATIENTID = 1 AND ""ISSUEROFPATIENTID"" IS NULL) OR (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID)) AND ((@IsNull_SCHEDULEDMODALITY = 1 AND ""SCHEDULEDMODALITY"" IS NULL) OR (""SCHEDULEDMODALITY"" = @Original_SCHEDULEDMODALITY)) AND ((@IsNull_SCHEDULEDBODYPART = 1 AND ""SCHEDULEDBODYPART"" IS NULL) OR (""SCHEDULEDBODYPART"" = @Original_SCHEDULEDBODYPART)) AND ((@IsNull_STATUS = 1 AND ""STATUS"" IS NULL) OR (""STATUS"" = @Original_STATUS)) AND ((@IsNull_MULTIACQUISITION = 1 AND ""MULTIACQUISITION"" IS NULL) OR (""MULTIACQUISITION"" = @Original_MULTIACQUISITION)) AND ((@IsNull_STUDYTRANSITIONDATETIME = 1 AND ""STUDYTRANSITIONDATETIME"" IS NULL) OR (""STUDYTRANSITIONDATETIME"" = @Original_STUDYTRANSITIONDATETIME)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LOGID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYINSTANCEUID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_TRANSACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TRANSACTIONTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TRANSACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TRANSACTIONTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FINISHTIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_INSTITUTION";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INSTITUTION";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ISSUEROFPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SCHEDULEDMODALITY";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDMODALITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SCHEDULEDMODALITY";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDMODALITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SCHEDULEDBODYPART";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDBODYPART";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SCHEDULEDBODYPART";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDBODYPART";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUS";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_MULTIACQUISITION";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MULTIACQUISITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MULTIACQUISITION";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MULTIACQUISITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYTRANSITIONDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTRANSITIONDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYTRANSITIONDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTRANSITIONDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""NETSUITELOG"" (""LOGID"", ""STUDYINSTANCEUID"", ""ACCESSIONNUMBER"", ""TRANSACTIONTYPE"", ""FINISHTIME"", ""INSTITUTION"", ""PATIENTID"", ""ISSUEROFPATIENTID"", ""SCHEDULEDMODALITY"", ""SCHEDULEDBODYPART"", ""STATUS"", ""MULTIACQUISITION"", ""STUDYTRANSITIONDATETIME"") VALUES (@LOGID, @STUDYINSTANCEUID, @ACCESSIONNUMBER, @TRANSACTIONTYPE, @FINISHTIME, @INSTITUTION, @PATIENTID, @ISSUEROFPATIENTID, @SCHEDULEDMODALITY, @SCHEDULEDBODYPART, @STATUS, @MULTIACQUISITION, @STUDYTRANSITIONDATETIME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LOGID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TRANSACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TRANSACTIONTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INSTITUTION";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTION";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SCHEDULEDMODALITY";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDMODALITY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SCHEDULEDBODYPART";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDBODYPART";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUS";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MULTIACQUISITION";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MULTIACQUISITION";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYTRANSITIONDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTRANSITIONDATETIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"NETSUITELOG\" SET \"LOGID\" = @LOGID, \"STUDYINSTANCEUID\" = @STUDYINSTANCEUID" +
                ", \"ACCESSIONNUMBER\" = @ACCESSIONNUMBER, \"TRANSACTIONTYPE\" = @TRANSACTIONTYPE, \"F" +
                "INISHTIME\" = @FINISHTIME, \"INSTITUTION\" = @INSTITUTION, \"PATIENTID\" = @PATIENTID" +
                ", \"ISSUEROFPATIENTID\" = @ISSUEROFPATIENTID, \"SCHEDULEDMODALITY\" = @SCHEDULEDMODA" +
                "LITY, \"SCHEDULEDBODYPART\" = @SCHEDULEDBODYPART, \"STATUS\" = @STATUS, \"MULTIACQUIS" +
                "ITION\" = @MULTIACQUISITION, \"STUDYTRANSITIONDATETIME\" = @STUDYTRANSITIONDATETIME" +
                " WHERE ((\"LOGID\" = @Original_LOGID) AND ((@IsNull_STUDYINSTANCEUID = 1 AND \"STUD" +
                "YINSTANCEUID\" IS NULL) OR (\"STUDYINSTANCEUID\" = @Original_STUDYINSTANCEUID)) AND" +
                " ((@IsNull_ACCESSIONNUMBER = 1 AND \"ACCESSIONNUMBER\" IS NULL) OR (\"ACCESSIONNUMB" +
                "ER\" = @Original_ACCESSIONNUMBER)) AND ((@IsNull_TRANSACTIONTYPE = 1 AND \"TRANSAC" +
                "TIONTYPE\" IS NULL) OR (\"TRANSACTIONTYPE\" = @Original_TRANSACTIONTYPE)) AND ((@Is" +
                "Null_FINISHTIME = 1 AND \"FINISHTIME\" IS NULL) OR (\"FINISHTIME\" = @Original_FINIS" +
                "HTIME)) AND ((@IsNull_INSTITUTION = 1 AND \"INSTITUTION\" IS NULL) OR (\"INSTITUTIO" +
                "N\" = @Original_INSTITUTION)) AND ((@IsNull_PATIENTID = 1 AND \"PATIENTID\" IS NULL" +
                ") OR (\"PATIENTID\" = @Original_PATIENTID)) AND ((@IsNull_ISSUEROFPATIENTID = 1 AN" +
                "D \"ISSUEROFPATIENTID\" IS NULL) OR (\"ISSUEROFPATIENTID\" = @Original_ISSUEROFPATIE" +
                "NTID)) AND ((@IsNull_SCHEDULEDMODALITY = 1 AND \"SCHEDULEDMODALITY\" IS NULL) OR (" +
                "\"SCHEDULEDMODALITY\" = @Original_SCHEDULEDMODALITY)) AND ((@IsNull_SCHEDULEDBODYP" +
                "ART = 1 AND \"SCHEDULEDBODYPART\" IS NULL) OR (\"SCHEDULEDBODYPART\" = @Original_SCH" +
                "EDULEDBODYPART)) AND ((@IsNull_STATUS = 1 AND \"STATUS\" IS NULL) OR (\"STATUS\" = @" +
                "Original_STATUS)) AND ((@IsNull_MULTIACQUISITION = 1 AND \"MULTIACQUISITION\" IS N" +
                "ULL) OR (\"MULTIACQUISITION\" = @Original_MULTIACQUISITION)) AND ((@IsNull_STUDYTR" +
                "ANSITIONDATETIME = 1 AND \"STUDYTRANSITIONDATETIME\" IS NULL) OR (\"STUDYTRANSITION" +
                "DATETIME\" = @Original_STUDYTRANSITIONDATETIME)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LOGID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TRANSACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TRANSACTIONTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INSTITUTION";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SCHEDULEDMODALITY";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDMODALITY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SCHEDULEDBODYPART";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDBODYPART";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUS";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MULTIACQUISITION";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MULTIACQUISITION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYTRANSITIONDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTRANSITIONDATETIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LOGID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYINSTANCEUID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_TRANSACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TRANSACTIONTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TRANSACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TRANSACTIONTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FINISHTIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_INSTITUTION";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INSTITUTION";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ISSUEROFPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SCHEDULEDMODALITY";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDMODALITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SCHEDULEDMODALITY";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDMODALITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SCHEDULEDBODYPART";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDBODYPART";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SCHEDULEDBODYPART";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SCHEDULEDBODYPART";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUS";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_MULTIACQUISITION";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MULTIACQUISITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MULTIACQUISITION";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MULTIACQUISITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYTRANSITIONDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTRANSITIONDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYTRANSITIONDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTRANSITIONDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"LOGID\", \"STUDYINSTANCEUID\", \"ACCESSIONNUMBER\", \"TRANSACTIONTYPE\", \"FINISH" +
                "TIME\", \"INSTITUTION\", \"PATIENTID\", \"ISSUEROFPATIENTID\", \"SCHEDULEDMODALITY\", \"SC" +
                "HEDULEDBODYPART\", \"STATUS\", \"MULTIACQUISITION\", \"STUDYTRANSITIONDATETIME\" FROM \"" +
                "NETSUITELOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.NETSUITELOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.NETSUITELOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.NETSUITELOGDataTable dataTable = new LoggingAndConfig.NETSUITELOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.NETSUITELOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "NETSUITELOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_LOGID, string Original_STUDYINSTANCEUID, string Original_ACCESSIONNUMBER, global::System.Nullable<int> Original_TRANSACTIONTYPE, global::System.Nullable<global::System.DateTime> Original_FINISHTIME, string Original_INSTITUTION, string Original_PATIENTID, string Original_ISSUEROFPATIENTID, string Original_SCHEDULEDMODALITY, string Original_SCHEDULEDBODYPART, string Original_STATUS, string Original_MULTIACQUISITION, global::System.Nullable<global::System.DateTime> Original_STUDYTRANSITIONDATETIME) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_LOGID));
            if ((Original_STUDYINSTANCEUID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_TRANSACTIONTYPE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_TRANSACTIONTYPE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_FINISHTIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_FINISHTIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_INSTITUTION == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_INSTITUTION));
            }
            if ((Original_PATIENTID == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_SCHEDULEDMODALITY == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_SCHEDULEDMODALITY));
            }
            if ((Original_SCHEDULEDBODYPART == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_SCHEDULEDBODYPART));
            }
            if ((Original_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_STATUS));
            }
            if ((Original_MULTIACQUISITION == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_MULTIACQUISITION));
            }
            if ((Original_STUDYTRANSITIONDATETIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_STUDYTRANSITIONDATETIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int LOGID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, global::System.Nullable<int> TRANSACTIONTYPE, global::System.Nullable<global::System.DateTime> FINISHTIME, string INSTITUTION, string PATIENTID, string ISSUEROFPATIENTID, string SCHEDULEDMODALITY, string SCHEDULEDBODYPART, string STATUS, string MULTIACQUISITION, global::System.Nullable<global::System.DateTime> STUDYTRANSITIONDATETIME) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(LOGID));
            if ((STUDYINSTANCEUID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((TRANSACTIONTYPE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(TRANSACTIONTYPE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FINISHTIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(FINISHTIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((INSTITUTION == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(INSTITUTION));
            }
            if ((PATIENTID == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((SCHEDULEDMODALITY == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SCHEDULEDMODALITY));
            }
            if ((SCHEDULEDBODYPART == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SCHEDULEDBODYPART));
            }
            if ((STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(STATUS));
            }
            if ((MULTIACQUISITION == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(MULTIACQUISITION));
            }
            if ((STUDYTRANSITIONDATETIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(STUDYTRANSITIONDATETIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int LOGID, 
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    global::System.Nullable<int> TRANSACTIONTYPE, 
                    global::System.Nullable<global::System.DateTime> FINISHTIME, 
                    string INSTITUTION, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string SCHEDULEDMODALITY, 
                    string SCHEDULEDBODYPART, 
                    string STATUS, 
                    string MULTIACQUISITION, 
                    global::System.Nullable<global::System.DateTime> STUDYTRANSITIONDATETIME, 
                    int Original_LOGID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    global::System.Nullable<int> Original_TRANSACTIONTYPE, 
                    global::System.Nullable<global::System.DateTime> Original_FINISHTIME, 
                    string Original_INSTITUTION, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_SCHEDULEDMODALITY, 
                    string Original_SCHEDULEDBODYPART, 
                    string Original_STATUS, 
                    string Original_MULTIACQUISITION, 
                    global::System.Nullable<global::System.DateTime> Original_STUDYTRANSITIONDATETIME) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(LOGID));
            if ((STUDYINSTANCEUID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((TRANSACTIONTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(TRANSACTIONTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FINISHTIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(FINISHTIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((INSTITUTION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(INSTITUTION));
            }
            if ((PATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((SCHEDULEDMODALITY == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SCHEDULEDMODALITY));
            }
            if ((SCHEDULEDBODYPART == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SCHEDULEDBODYPART));
            }
            if ((STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(STATUS));
            }
            if ((MULTIACQUISITION == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(MULTIACQUISITION));
            }
            if ((STUDYTRANSITIONDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(STUDYTRANSITIONDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_LOGID));
            if ((Original_STUDYINSTANCEUID == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_TRANSACTIONTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_TRANSACTIONTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_FINISHTIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_FINISHTIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_INSTITUTION == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_INSTITUTION));
            }
            if ((Original_PATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_SCHEDULEDMODALITY == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_SCHEDULEDMODALITY));
            }
            if ((Original_SCHEDULEDBODYPART == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_SCHEDULEDBODYPART));
            }
            if ((Original_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_STATUS));
            }
            if ((Original_MULTIACQUISITION == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_MULTIACQUISITION));
            }
            if ((Original_STUDYTRANSITIONDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Original_STUDYTRANSITIONDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    global::System.Nullable<int> TRANSACTIONTYPE, 
                    global::System.Nullable<global::System.DateTime> FINISHTIME, 
                    string INSTITUTION, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string SCHEDULEDMODALITY, 
                    string SCHEDULEDBODYPART, 
                    string STATUS, 
                    string MULTIACQUISITION, 
                    global::System.Nullable<global::System.DateTime> STUDYTRANSITIONDATETIME, 
                    int Original_LOGID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    global::System.Nullable<int> Original_TRANSACTIONTYPE, 
                    global::System.Nullable<global::System.DateTime> Original_FINISHTIME, 
                    string Original_INSTITUTION, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_SCHEDULEDMODALITY, 
                    string Original_SCHEDULEDBODYPART, 
                    string Original_STATUS, 
                    string Original_MULTIACQUISITION, 
                    global::System.Nullable<global::System.DateTime> Original_STUDYTRANSITIONDATETIME) {
            return this.Update(Original_LOGID, STUDYINSTANCEUID, ACCESSIONNUMBER, TRANSACTIONTYPE, FINISHTIME, INSTITUTION, PATIENTID, ISSUEROFPATIENTID, SCHEDULEDMODALITY, SCHEDULEDBODYPART, STATUS, MULTIACQUISITION, STUDYTRANSITIONDATETIME, Original_LOGID, Original_STUDYINSTANCEUID, Original_ACCESSIONNUMBER, Original_TRANSACTIONTYPE, Original_FINISHTIME, Original_INSTITUTION, Original_PATIENTID, Original_ISSUEROFPATIENTID, Original_SCHEDULEDMODALITY, Original_SCHEDULEDBODYPART, Original_STATUS, Original_MULTIACQUISITION, Original_STUDYTRANSITIONDATETIME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PATIENTDIRECTLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PATIENTDIRECTLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PATIENTDIRECTLOG";
            tableMapping.ColumnMappings.Add("INTERNALPATIENTID", "INTERNALPATIENTID");
            tableMapping.ColumnMappings.Add("RECEIVEDDATETIME", "RECEIVEDDATETIME");
            tableMapping.ColumnMappings.Add("MESSAGEID", "MESSAGEID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"PATIENTDIRECTLOG\" WHERE ((\"INTERNALPATIENTID\" = @Original_INTERNALPA" +
                "TIENTID) AND (\"RECEIVEDDATETIME\" = @Original_RECEIVEDDATETIME) AND (\"MESSAGEID\" " +
                "= @Original_MESSAGEID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTERNALPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_RECEIVEDDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "RECEIVEDDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MESSAGEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MESSAGEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"PATIENTDIRECTLOG\" (\"INTERNALPATIENTID\", \"RECEIVEDDATETIME\", \"MESSAGE" +
                "ID\") VALUES (@INTERNALPATIENTID, @RECEIVEDDATETIME, @MESSAGEID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTERNALPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@RECEIVEDDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "RECEIVEDDATETIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MESSAGEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MESSAGEID";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""PATIENTDIRECTLOG"" SET ""INTERNALPATIENTID"" = @INTERNALPATIENTID, ""RECEIVEDDATETIME"" = @RECEIVEDDATETIME, ""MESSAGEID"" = @MESSAGEID WHERE ((""INTERNALPATIENTID"" = @Original_INTERNALPATIENTID) AND (""RECEIVEDDATETIME"" = @Original_RECEIVEDDATETIME) AND (""MESSAGEID"" = @Original_MESSAGEID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTERNALPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@RECEIVEDDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "RECEIVEDDATETIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MESSAGEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MESSAGEID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTERNALPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_RECEIVEDDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "RECEIVEDDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MESSAGEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "MESSAGEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"INTERNALPATIENTID\", \"RECEIVEDDATETIME\", \"MESSAGEID\" FROM \"PATIENTDIRECTLO" +
                "G\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.PATIENTDIRECTLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.PATIENTDIRECTLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.PATIENTDIRECTLOGDataTable dataTable = new LoggingAndConfig.PATIENTDIRECTLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.PATIENTDIRECTLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "PATIENTDIRECTLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_INTERNALPATIENTID, System.DateTime Original_RECEIVEDDATETIME, int Original_MESSAGEID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_INTERNALPATIENTID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_RECEIVEDDATETIME));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_MESSAGEID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int INTERNALPATIENTID, System.DateTime RECEIVEDDATETIME, int MESSAGEID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(INTERNALPATIENTID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(RECEIVEDDATETIME));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(MESSAGEID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int INTERNALPATIENTID, System.DateTime RECEIVEDDATETIME, int MESSAGEID, int Original_INTERNALPATIENTID, System.DateTime Original_RECEIVEDDATETIME, int Original_MESSAGEID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(INTERNALPATIENTID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(RECEIVEDDATETIME));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(MESSAGEID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_INTERNALPATIENTID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Original_RECEIVEDDATETIME));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_MESSAGEID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int MESSAGEID, int Original_INTERNALPATIENTID, System.DateTime Original_RECEIVEDDATETIME, int Original_MESSAGEID) {
            return this.Update(Original_INTERNALPATIENTID, Original_RECEIVEDDATETIME, MESSAGEID, Original_INTERNALPATIENTID, Original_RECEIVEDDATETIME, Original_MESSAGEID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PATIENTMERGELOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PATIENTMERGELOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PATIENTMERGELOG";
            tableMapping.ColumnMappings.Add("INTERNALPATIENTID", "INTERNALPATIENTID");
            tableMapping.ColumnMappings.Add("OLDPATIENTID", "OLDPATIENTID");
            tableMapping.ColumnMappings.Add("OLDISSUEROFPATIENTID", "OLDISSUEROFPATIENTID");
            tableMapping.ColumnMappings.Add("MERGEDTIME", "MERGEDTIME");
            tableMapping.ColumnMappings.Add("USERNAME", "USERNAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""PATIENTMERGELOG"" WHERE ((""INTERNALPATIENTID"" = @Original_INTERNALPATIENTID) AND (""OLDPATIENTID"" = @Original_OLDPATIENTID) AND (""OLDISSUEROFPATIENTID"" = @Original_OLDISSUEROFPATIENTID) AND ((@IsNull_MERGEDTIME = 1 AND ""MERGEDTIME"" IS NULL) OR (""MERGEDTIME"" = @Original_MERGEDTIME)) AND ((@IsNull_USERNAME = 1 AND ""USERNAME"" IS NULL) OR (""USERNAME"" = @Original_USERNAME)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTERNALPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_OLDPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "OLDPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_OLDISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "OLDISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_MERGEDTIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "MERGEDTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MERGEDTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "MERGEDTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_USERNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"PATIENTMERGELOG\" (\"INTERNALPATIENTID\", \"OLDPATIENTID\", \"OLDISSUEROFP" +
                "ATIENTID\", \"MERGEDTIME\", \"USERNAME\") VALUES (@INTERNALPATIENTID, @OLDPATIENTID, " +
                "@OLDISSUEROFPATIENTID, @MERGEDTIME, @USERNAME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTERNALPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@OLDPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "OLDPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@OLDISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "OLDISSUEROFPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MERGEDTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "MERGEDTIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""PATIENTMERGELOG"" SET ""INTERNALPATIENTID"" = @INTERNALPATIENTID, ""OLDPATIENTID"" = @OLDPATIENTID, ""OLDISSUEROFPATIENTID"" = @OLDISSUEROFPATIENTID, ""MERGEDTIME"" = @MERGEDTIME, ""USERNAME"" = @USERNAME WHERE ((""INTERNALPATIENTID"" = @Original_INTERNALPATIENTID) AND (""OLDPATIENTID"" = @Original_OLDPATIENTID) AND (""OLDISSUEROFPATIENTID"" = @Original_OLDISSUEROFPATIENTID) AND ((@IsNull_MERGEDTIME = 1 AND ""MERGEDTIME"" IS NULL) OR (""MERGEDTIME"" = @Original_MERGEDTIME)) AND ((@IsNull_USERNAME = 1 AND ""USERNAME"" IS NULL) OR (""USERNAME"" = @Original_USERNAME)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTERNALPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@OLDPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "OLDPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@OLDISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "OLDISSUEROFPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MERGEDTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "MERGEDTIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTERNALPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_OLDPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "OLDPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_OLDISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "OLDISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_MERGEDTIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "MERGEDTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_MERGEDTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "MERGEDTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_USERNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"INTERNALPATIENTID\", \"OLDPATIENTID\", \"OLDISSUEROFPATIENTID\", \"MERGEDTIME\"," +
                " \"USERNAME\" FROM \"PATIENTMERGELOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.PATIENTMERGELOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.PATIENTMERGELOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.PATIENTMERGELOGDataTable dataTable = new LoggingAndConfig.PATIENTMERGELOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.PATIENTMERGELOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "PATIENTMERGELOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_INTERNALPATIENTID, string Original_OLDPATIENTID, string Original_OLDISSUEROFPATIENTID, global::System.Nullable<global::System.DateTime> Original_MERGEDTIME, string Original_USERNAME) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_INTERNALPATIENTID));
            if ((Original_OLDPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_OLDPATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_OLDPATIENTID));
            }
            if ((Original_OLDISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_OLDISSUEROFPATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_OLDISSUEROFPATIENTID));
            }
            if ((Original_MERGEDTIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_MERGEDTIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_USERNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_USERNAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int INTERNALPATIENTID, string OLDPATIENTID, string OLDISSUEROFPATIENTID, global::System.Nullable<global::System.DateTime> MERGEDTIME, string USERNAME) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(INTERNALPATIENTID));
            if ((OLDPATIENTID == null)) {
                throw new global::System.ArgumentNullException("OLDPATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(OLDPATIENTID));
            }
            if ((OLDISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("OLDISSUEROFPATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(OLDISSUEROFPATIENTID));
            }
            if ((MERGEDTIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(MERGEDTIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((USERNAME == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(USERNAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int INTERNALPATIENTID, string OLDPATIENTID, string OLDISSUEROFPATIENTID, global::System.Nullable<global::System.DateTime> MERGEDTIME, string USERNAME, int Original_INTERNALPATIENTID, string Original_OLDPATIENTID, string Original_OLDISSUEROFPATIENTID, global::System.Nullable<global::System.DateTime> Original_MERGEDTIME, string Original_USERNAME) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(INTERNALPATIENTID));
            if ((OLDPATIENTID == null)) {
                throw new global::System.ArgumentNullException("OLDPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(OLDPATIENTID));
            }
            if ((OLDISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("OLDISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(OLDISSUEROFPATIENTID));
            }
            if ((MERGEDTIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(MERGEDTIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((USERNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(USERNAME));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_INTERNALPATIENTID));
            if ((Original_OLDPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_OLDPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_OLDPATIENTID));
            }
            if ((Original_OLDISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_OLDISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_OLDISSUEROFPATIENTID));
            }
            if ((Original_MERGEDTIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_MERGEDTIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_USERNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_USERNAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OLDPATIENTID, string OLDISSUEROFPATIENTID, global::System.Nullable<global::System.DateTime> MERGEDTIME, string USERNAME, int Original_INTERNALPATIENTID, string Original_OLDPATIENTID, string Original_OLDISSUEROFPATIENTID, global::System.Nullable<global::System.DateTime> Original_MERGEDTIME, string Original_USERNAME) {
            return this.Update(Original_INTERNALPATIENTID, OLDPATIENTID, OLDISSUEROFPATIENTID, MERGEDTIME, USERNAME, Original_INTERNALPATIENTID, Original_OLDPATIENTID, Original_OLDISSUEROFPATIENTID, Original_MERGEDTIME, Original_USERNAME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PRINTLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PRINTLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PRINTLOG";
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("TIMESTARTED", "TIMESTARTED");
            tableMapping.ColumnMappings.Add("TIMEFINISHED", "TIMEFINISHED");
            tableMapping.ColumnMappings.Add("USERNAME", "USERNAME");
            tableMapping.ColumnMappings.Add("NUMOFPRINT", "NUMOFPRINT");
            tableMapping.ColumnMappings.Add("SERVICENAME", "SERVICENAME");
            tableMapping.ColumnMappings.Add("PRINTJOBID", "PRINTJOBID");
            tableMapping.ColumnMappings.Add("PRINTPAGES", "PRINTPAGES");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""PRINTLOG"" WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""TIMESTARTED"" = @Original_TIMESTARTED) AND (""TIMEFINISHED"" = @Original_TIMEFINISHED) AND (""USERNAME"" = @Original_USERNAME) AND (""NUMOFPRINT"" = @Original_NUMOFPRINT) AND ((@IsNull_SERVICENAME = 1 AND ""SERVICENAME"" IS NULL) OR (""SERVICENAME"" = @Original_SERVICENAME)) AND (""PRINTJOBID"" = @Original_PRINTJOBID) AND (""PRINTPAGES"" = @Original_PRINTPAGES))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMOFPRINT";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOFPRINT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SERVICENAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PRINTJOBID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "PRINTJOBID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PRINTPAGES";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "PRINTPAGES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"PRINTLOG\" (\"ENTRYID\", \"TIMESTARTED\", \"TIMEFINISHED\", \"USERNAME\", \"NU" +
                "MOFPRINT\", \"SERVICENAME\", \"PRINTJOBID\", \"PRINTPAGES\") VALUES (@ENTRYID, @TIMESTA" +
                "RTED, @TIMEFINISHED, @USERNAME, @NUMOFPRINT, @SERVICENAME, @PRINTJOBID, @PRINTPA" +
                "GES)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMOFPRINT";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOFPRINT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PRINTJOBID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "PRINTJOBID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PRINTPAGES";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "PRINTPAGES";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""PRINTLOG"" SET ""ENTRYID"" = @ENTRYID, ""TIMESTARTED"" = @TIMESTARTED, ""TIMEFINISHED"" = @TIMEFINISHED, ""USERNAME"" = @USERNAME, ""NUMOFPRINT"" = @NUMOFPRINT, ""SERVICENAME"" = @SERVICENAME, ""PRINTJOBID"" = @PRINTJOBID, ""PRINTPAGES"" = @PRINTPAGES WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""TIMESTARTED"" = @Original_TIMESTARTED) AND (""TIMEFINISHED"" = @Original_TIMEFINISHED) AND (""USERNAME"" = @Original_USERNAME) AND (""NUMOFPRINT"" = @Original_NUMOFPRINT) AND ((@IsNull_SERVICENAME = 1 AND ""SERVICENAME"" IS NULL) OR (""SERVICENAME"" = @Original_SERVICENAME)) AND (""PRINTJOBID"" = @Original_PRINTJOBID) AND (""PRINTPAGES"" = @Original_PRINTPAGES))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMOFPRINT";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOFPRINT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PRINTJOBID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "PRINTJOBID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PRINTPAGES";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "PRINTPAGES";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMOFPRINT";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOFPRINT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SERVICENAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PRINTJOBID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "PRINTJOBID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PRINTPAGES";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "PRINTPAGES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ENTRYID\", \"TIMESTARTED\", \"TIMEFINISHED\", \"USERNAME\", \"NUMOFPRINT\", \"SERVI" +
                "CENAME\", \"PRINTJOBID\", \"PRINTPAGES\" FROM \"PRINTLOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.PRINTLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.PRINTLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.PRINTLOGDataTable dataTable = new LoggingAndConfig.PRINTLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.PRINTLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "PRINTLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ENTRYID, System.DateTime Original_TIMESTARTED, System.DateTime Original_TIMEFINISHED, string Original_USERNAME, int Original_NUMOFPRINT, string Original_SERVICENAME, int Original_PRINTJOBID, int Original_PRINTPAGES) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ENTRYID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_TIMESTARTED));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_TIMEFINISHED));
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_USERNAME));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_NUMOFPRINT));
            if ((Original_SERVICENAME == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SERVICENAME));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_PRINTJOBID));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_PRINTPAGES));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ENTRYID, System.DateTime TIMESTARTED, System.DateTime TIMEFINISHED, string USERNAME, int NUMOFPRINT, string SERVICENAME, int PRINTJOBID, int PRINTPAGES) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(TIMESTARTED));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(TIMEFINISHED));
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(USERNAME));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(NUMOFPRINT));
            if ((SERVICENAME == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SERVICENAME));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(PRINTJOBID));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(PRINTPAGES));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ENTRYID, 
                    System.DateTime TIMESTARTED, 
                    System.DateTime TIMEFINISHED, 
                    string USERNAME, 
                    int NUMOFPRINT, 
                    string SERVICENAME, 
                    int PRINTJOBID, 
                    int PRINTPAGES, 
                    int Original_ENTRYID, 
                    System.DateTime Original_TIMESTARTED, 
                    System.DateTime Original_TIMEFINISHED, 
                    string Original_USERNAME, 
                    int Original_NUMOFPRINT, 
                    string Original_SERVICENAME, 
                    int Original_PRINTJOBID, 
                    int Original_PRINTPAGES) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(TIMESTARTED));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(TIMEFINISHED));
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(USERNAME));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(NUMOFPRINT));
            if ((SERVICENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SERVICENAME));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(PRINTJOBID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(PRINTPAGES));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ENTRYID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_TIMESTARTED));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_TIMEFINISHED));
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_USERNAME));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_NUMOFPRINT));
            if ((Original_SERVICENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_SERVICENAME));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_PRINTJOBID));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_PRINTPAGES));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime TIMESTARTED, System.DateTime TIMEFINISHED, string USERNAME, int NUMOFPRINT, string SERVICENAME, int PRINTJOBID, int PRINTPAGES, int Original_ENTRYID, System.DateTime Original_TIMESTARTED, System.DateTime Original_TIMEFINISHED, string Original_USERNAME, int Original_NUMOFPRINT, string Original_SERVICENAME, int Original_PRINTJOBID, int Original_PRINTPAGES) {
            return this.Update(Original_ENTRYID, TIMESTARTED, TIMEFINISHED, USERNAME, NUMOFPRINT, SERVICENAME, PRINTJOBID, PRINTPAGES, Original_ENTRYID, Original_TIMESTARTED, Original_TIMEFINISHED, Original_USERNAME, Original_NUMOFPRINT, Original_SERVICENAME, Original_PRINTJOBID, Original_PRINTPAGES);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PRRELEASETableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PRRELEASETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PRRELEASE";
            tableMapping.ColumnMappings.Add("TARGET", "TARGET");
            tableMapping.ColumnMappings.Add("VERNUM", "VERNUM");
            tableMapping.ColumnMappings.Add("LASTUPDATED", "LASTUPDATED");
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""PRRELEASE"" WHERE ((""TARGET"" = @Original_TARGET) AND (""VERNUM"" = @Original_VERNUM) AND ((@IsNull_LASTUPDATED = 1 AND ""LASTUPDATED"" IS NULL) OR (""LASTUPDATED"" = @Original_LASTUPDATED)) AND ((@IsNull_DESCRIPTION = 1 AND ""DESCRIPTION"" IS NULL) OR (""DESCRIPTION"" = @Original_DESCRIPTION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TARGET";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "TARGET";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_VERNUM";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "VERNUM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_LASTUPDATED";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LASTUPDATED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_DESCRIPTION";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESCRIPTION";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"PRRELEASE\" (\"TARGET\", \"VERNUM\", \"LASTUPDATED\", \"DESCRIPTION\") VALUES" +
                " (@TARGET, @VERNUM, @LASTUPDATED, @DESCRIPTION)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TARGET";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "TARGET";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@VERNUM";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "VERNUM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LASTUPDATED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESCRIPTION";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""PRRELEASE"" SET ""TARGET"" = @TARGET, ""VERNUM"" = @VERNUM, ""LASTUPDATED"" = @LASTUPDATED, ""DESCRIPTION"" = @DESCRIPTION WHERE ((""TARGET"" = @Original_TARGET) AND (""VERNUM"" = @Original_VERNUM) AND ((@IsNull_LASTUPDATED = 1 AND ""LASTUPDATED"" IS NULL) OR (""LASTUPDATED"" = @Original_LASTUPDATED)) AND ((@IsNull_DESCRIPTION = 1 AND ""DESCRIPTION"" IS NULL) OR (""DESCRIPTION"" = @Original_DESCRIPTION)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TARGET";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "TARGET";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@VERNUM";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "VERNUM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LASTUPDATED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESCRIPTION";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TARGET";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "TARGET";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_VERNUM";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "VERNUM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_LASTUPDATED";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LASTUPDATED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_DESCRIPTION";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESCRIPTION";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"TARGET\", \"VERNUM\", \"LASTUPDATED\", \"DESCRIPTION\" FROM \"PRRELEASE\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.PRRELEASEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.PRRELEASEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.PRRELEASEDataTable dataTable = new LoggingAndConfig.PRRELEASEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.PRRELEASEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "PRRELEASE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_TARGET, int Original_VERNUM, global::System.Nullable<global::System.DateTime> Original_LASTUPDATED, string Original_DESCRIPTION) {
            if ((Original_TARGET == null)) {
                throw new global::System.ArgumentNullException("Original_TARGET");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_TARGET));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_VERNUM));
            if ((Original_LASTUPDATED.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_LASTUPDATED.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_DESCRIPTION == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_DESCRIPTION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TARGET, int VERNUM, global::System.Nullable<global::System.DateTime> LASTUPDATED, string DESCRIPTION) {
            if ((TARGET == null)) {
                throw new global::System.ArgumentNullException("TARGET");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TARGET));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(VERNUM));
            if ((LASTUPDATED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(LASTUPDATED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((DESCRIPTION == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DESCRIPTION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TARGET, int VERNUM, global::System.Nullable<global::System.DateTime> LASTUPDATED, string DESCRIPTION, string Original_TARGET, int Original_VERNUM, global::System.Nullable<global::System.DateTime> Original_LASTUPDATED, string Original_DESCRIPTION) {
            if ((TARGET == null)) {
                throw new global::System.ArgumentNullException("TARGET");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TARGET));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(VERNUM));
            if ((LASTUPDATED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(LASTUPDATED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((DESCRIPTION == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DESCRIPTION));
            }
            if ((Original_TARGET == null)) {
                throw new global::System.ArgumentNullException("Original_TARGET");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_TARGET));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_VERNUM));
            if ((Original_LASTUPDATED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_LASTUPDATED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_DESCRIPTION == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_DESCRIPTION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int VERNUM, global::System.Nullable<global::System.DateTime> LASTUPDATED, string DESCRIPTION, string Original_TARGET, int Original_VERNUM, global::System.Nullable<global::System.DateTime> Original_LASTUPDATED, string Original_DESCRIPTION) {
            return this.Update(Original_TARGET, VERNUM, LASTUPDATED, DESCRIPTION, Original_TARGET, Original_VERNUM, Original_LASTUPDATED, Original_DESCRIPTION);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PRVERSIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PRVERSIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PRVERSION";
            tableMapping.ColumnMappings.Add("VERNUM", "VERNUM");
            tableMapping.ColumnMappings.Add("LASTUPDATED", "LASTUPDATED");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"PRVERSION\" WHERE ((\"VERNUM\" = @Original_VERNUM) AND ((@IsNull_LASTUP" +
                "DATED = 1 AND \"LASTUPDATED\" IS NULL) OR (\"LASTUPDATED\" = @Original_LASTUPDATED))" +
                ")";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_VERNUM";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "VERNUM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_LASTUPDATED";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LASTUPDATED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"PRVERSION\" (\"VERNUM\", \"LASTUPDATED\") VALUES (@VERNUM, @LASTUPDATED)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@VERNUM";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "VERNUM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LASTUPDATED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"PRVERSION\" SET \"VERNUM\" = @VERNUM, \"LASTUPDATED\" = @LASTUPDATED WHERE ((\"" +
                "VERNUM\" = @Original_VERNUM) AND ((@IsNull_LASTUPDATED = 1 AND \"LASTUPDATED\" IS N" +
                "ULL) OR (\"LASTUPDATED\" = @Original_LASTUPDATED)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@VERNUM";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "VERNUM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LASTUPDATED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_VERNUM";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "VERNUM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_LASTUPDATED";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LASTUPDATED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"VERNUM\", \"LASTUPDATED\" FROM \"PRVERSION\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.PRVERSIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.PRVERSIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.PRVERSIONDataTable dataTable = new LoggingAndConfig.PRVERSIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.PRVERSIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "PRVERSION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_VERNUM, global::System.Nullable<global::System.DateTime> Original_LASTUPDATED) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_VERNUM));
            if ((Original_LASTUPDATED.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_LASTUPDATED.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int VERNUM, global::System.Nullable<global::System.DateTime> LASTUPDATED) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(VERNUM));
            if ((LASTUPDATED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(LASTUPDATED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int VERNUM, global::System.Nullable<global::System.DateTime> LASTUPDATED, int Original_VERNUM, global::System.Nullable<global::System.DateTime> Original_LASTUPDATED) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(VERNUM));
            if ((LASTUPDATED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(LASTUPDATED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_VERNUM));
            if ((Original_LASTUPDATED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Original_LASTUPDATED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> LASTUPDATED, int Original_VERNUM, global::System.Nullable<global::System.DateTime> Original_LASTUPDATED) {
            return this.Update(Original_VERNUM, LASTUPDATED, Original_VERNUM, Original_LASTUPDATED);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RECEIVESTUDYLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RECEIVESTUDYLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RECEIVESTUDYLOG";
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("ISSUEROFPATIENTID", "ISSUEROFPATIENTID");
            tableMapping.ColumnMappings.Add("PATIENTID", "PATIENTID");
            tableMapping.ColumnMappings.Add("STUDYINSTANCEUID", "STUDYINSTANCEUID");
            tableMapping.ColumnMappings.Add("ACCESSIONNUMBER", "ACCESSIONNUMBER");
            tableMapping.ColumnMappings.Add("SERVICENAME", "SERVICENAME");
            tableMapping.ColumnMappings.Add("TIMESTARTED", "TIMESTARTED");
            tableMapping.ColumnMappings.Add("TIMEFINISHED", "TIMEFINISHED");
            tableMapping.ColumnMappings.Add("NUMOBJECTS", "NUMOBJECTS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""RECEIVESTUDYLOG"" WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID) AND (""PATIENTID"" = @Original_PATIENTID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER) AND ((@IsNull_SERVICENAME = 1 AND ""SERVICENAME"" IS NULL) OR (""SERVICENAME"" = @Original_SERVICENAME)) AND (""TIMESTARTED"" = @Original_TIMESTARTED) AND (""TIMEFINISHED"" = @Original_TIMEFINISHED) AND (""NUMOBJECTS"" = @Original_NUMOBJECTS))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SERVICENAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""RECEIVESTUDYLOG"" (""ENTRYID"", ""ISSUEROFPATIENTID"", ""PATIENTID"", ""STUDYINSTANCEUID"", ""ACCESSIONNUMBER"", ""SERVICENAME"", ""TIMESTARTED"", ""TIMEFINISHED"", ""NUMOBJECTS"") VALUES (@ENTRYID, @ISSUEROFPATIENTID, @PATIENTID, @STUDYINSTANCEUID, @ACCESSIONNUMBER, @SERVICENAME, @TIMESTARTED, @TIMEFINISHED, @NUMOBJECTS)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""RECEIVESTUDYLOG"" SET ""ENTRYID"" = @ENTRYID, ""ISSUEROFPATIENTID"" = @ISSUEROFPATIENTID, ""PATIENTID"" = @PATIENTID, ""STUDYINSTANCEUID"" = @STUDYINSTANCEUID, ""ACCESSIONNUMBER"" = @ACCESSIONNUMBER, ""SERVICENAME"" = @SERVICENAME, ""TIMESTARTED"" = @TIMESTARTED, ""TIMEFINISHED"" = @TIMEFINISHED, ""NUMOBJECTS"" = @NUMOBJECTS WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID) AND (""PATIENTID"" = @Original_PATIENTID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER) AND ((@IsNull_SERVICENAME = 1 AND ""SERVICENAME"" IS NULL) OR (""SERVICENAME"" = @Original_SERVICENAME)) AND (""TIMESTARTED"" = @Original_TIMESTARTED) AND (""TIMEFINISHED"" = @Original_TIMEFINISHED) AND (""NUMOBJECTS"" = @Original_NUMOBJECTS))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SERVICENAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ENTRYID\", \"ISSUEROFPATIENTID\", \"PATIENTID\", \"STUDYINSTANCEUID\", \"ACCESSIO" +
                "NNUMBER\", \"SERVICENAME\", \"TIMESTARTED\", \"TIMEFINISHED\", \"NUMOBJECTS\" FROM \"RECEI" +
                "VESTUDYLOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.RECEIVESTUDYLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.RECEIVESTUDYLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.RECEIVESTUDYLOGDataTable dataTable = new LoggingAndConfig.RECEIVESTUDYLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.RECEIVESTUDYLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "RECEIVESTUDYLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ENTRYID, string Original_ISSUEROFPATIENTID, string Original_PATIENTID, string Original_STUDYINSTANCEUID, string Original_ACCESSIONNUMBER, string Original_SERVICENAME, System.DateTime Original_TIMESTARTED, System.DateTime Original_TIMEFINISHED, int Original_NUMOBJECTS) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ENTRYID));
            if ((Original_ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_PATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_PATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSIONNUMBER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_SERVICENAME == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SERVICENAME));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_TIMESTARTED));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_TIMEFINISHED));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_NUMOBJECTS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ENTRYID, string ISSUEROFPATIENTID, string PATIENTID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, string SERVICENAME, System.DateTime TIMESTARTED, System.DateTime TIMEFINISHED, int NUMOBJECTS) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ENTRYID));
            if ((ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((PATIENTID == null)) {
                throw new global::System.ArgumentNullException("PATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PATIENTID));
            }
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("ACCESSIONNUMBER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((SERVICENAME == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SERVICENAME));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(TIMESTARTED));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(TIMEFINISHED));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(NUMOBJECTS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ENTRYID, 
                    string ISSUEROFPATIENTID, 
                    string PATIENTID, 
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    string SERVICENAME, 
                    System.DateTime TIMESTARTED, 
                    System.DateTime TIMEFINISHED, 
                    int NUMOBJECTS, 
                    int Original_ENTRYID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_PATIENTID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_SERVICENAME, 
                    System.DateTime Original_TIMESTARTED, 
                    System.DateTime Original_TIMEFINISHED, 
                    int Original_NUMOBJECTS) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ENTRYID));
            if ((ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((PATIENTID == null)) {
                throw new global::System.ArgumentNullException("PATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PATIENTID));
            }
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("ACCESSIONNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((SERVICENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SERVICENAME));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(TIMESTARTED));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(TIMEFINISHED));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(NUMOBJECTS));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ENTRYID));
            if ((Original_ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_PATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_PATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSIONNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_SERVICENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_SERVICENAME));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_TIMESTARTED));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_TIMEFINISHED));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_NUMOBJECTS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ISSUEROFPATIENTID, 
                    string PATIENTID, 
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    string SERVICENAME, 
                    System.DateTime TIMESTARTED, 
                    System.DateTime TIMEFINISHED, 
                    int NUMOBJECTS, 
                    int Original_ENTRYID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_PATIENTID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_SERVICENAME, 
                    System.DateTime Original_TIMESTARTED, 
                    System.DateTime Original_TIMEFINISHED, 
                    int Original_NUMOBJECTS) {
            return this.Update(Original_ENTRYID, ISSUEROFPATIENTID, PATIENTID, STUDYINSTANCEUID, ACCESSIONNUMBER, SERVICENAME, TIMESTARTED, TIMEFINISHED, NUMOBJECTS, Original_ENTRYID, Original_ISSUEROFPATIENTID, Original_PATIENTID, Original_STUDYINSTANCEUID, Original_ACCESSIONNUMBER, Original_SERVICENAME, Original_TIMESTARTED, Original_TIMEFINISHED, Original_NUMOBJECTS);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class REFERRALINBOXLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public REFERRALINBOXLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "REFERRALINBOXLOG";
            tableMapping.ColumnMappings.Add("LOGID", "LOGID");
            tableMapping.ColumnMappings.Add("PATIENTFIRSTNAME", "PATIENTFIRSTNAME");
            tableMapping.ColumnMappings.Add("PATIENTLASTNAME", "PATIENTLASTNAME");
            tableMapping.ColumnMappings.Add("LOGDATETIME", "LOGDATETIME");
            tableMapping.ColumnMappings.Add("PATIENTPHONE", "PATIENTPHONE");
            tableMapping.ColumnMappings.Add("REQUESTEDDATETIME", "REQUESTEDDATETIME");
            tableMapping.ColumnMappings.Add("AUTHORIZATIONNUMBER", "AUTHORIZATIONNUMBER");
            tableMapping.ColumnMappings.Add("FACILITY", "FACILITY");
            tableMapping.ColumnMappings.Add("USERNAME", "USERNAME");
            tableMapping.ColumnMappings.Add("USERFIRSTNAME", "USERFIRSTNAME");
            tableMapping.ColumnMappings.Add("USERLASTNAME", "USERLASTNAME");
            tableMapping.ColumnMappings.Add("STUDYTYPE", "STUDYTYPE");
            tableMapping.ColumnMappings.Add("ACTIONTYPE", "ACTIONTYPE");
            tableMapping.ColumnMappings.Add("CANCELLATIONUSER", "CANCELLATIONUSER");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""REFERRALINBOXLOG"" WHERE ((""LOGID"" = @Original_LOGID) AND ((@IsNull_PATIENTFIRSTNAME = 1 AND ""PATIENTFIRSTNAME"" IS NULL) OR (""PATIENTFIRSTNAME"" = @Original_PATIENTFIRSTNAME)) AND ((@IsNull_PATIENTLASTNAME = 1 AND ""PATIENTLASTNAME"" IS NULL) OR (""PATIENTLASTNAME"" = @Original_PATIENTLASTNAME)) AND ((@IsNull_LOGDATETIME = 1 AND ""LOGDATETIME"" IS NULL) OR (""LOGDATETIME"" = @Original_LOGDATETIME)) AND ((@IsNull_PATIENTPHONE = 1 AND ""PATIENTPHONE"" IS NULL) OR (""PATIENTPHONE"" = @Original_PATIENTPHONE)) AND ((@IsNull_REQUESTEDDATETIME = 1 AND ""REQUESTEDDATETIME"" IS NULL) OR (""REQUESTEDDATETIME"" = @Original_REQUESTEDDATETIME)) AND ((@IsNull_AUTHORIZATIONNUMBER = 1 AND ""AUTHORIZATIONNUMBER"" IS NULL) OR (""AUTHORIZATIONNUMBER"" = @Original_AUTHORIZATIONNUMBER)) AND ((@IsNull_FACILITY = 1 AND ""FACILITY"" IS NULL) OR (""FACILITY"" = @Original_FACILITY)) AND ((@IsNull_USERNAME = 1 AND ""USERNAME"" IS NULL) OR (""USERNAME"" = @Original_USERNAME)) AND ((@IsNull_USERFIRSTNAME = 1 AND ""USERFIRSTNAME"" IS NULL) OR (""USERFIRSTNAME"" = @Original_USERFIRSTNAME)) AND ((@IsNull_USERLASTNAME = 1 AND ""USERLASTNAME"" IS NULL) OR (""USERLASTNAME"" = @Original_USERLASTNAME)) AND ((@IsNull_STUDYTYPE = 1 AND ""STUDYTYPE"" IS NULL) OR (""STUDYTYPE"" = @Original_STUDYTYPE)) AND ((@IsNull_ACTIONTYPE = 1 AND ""ACTIONTYPE"" IS NULL) OR (""ACTIONTYPE"" = @Original_ACTIONTYPE)) AND ((@IsNull_CANCELLATIONUSER = 1 AND ""CANCELLATIONUSER"" IS NULL) OR (""CANCELLATIONUSER"" = @Original_CANCELLATIONUSER)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LOGID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTFIRSTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTFIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTLASTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTLASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTLASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTLASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_LOGDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LOGDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LOGDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LOGDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTPHONE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTPHONE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTPHONE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTPHONE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_REQUESTEDDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "REQUESTEDDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_REQUESTEDDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "REQUESTEDDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_AUTHORIZATIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "AUTHORIZATIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_AUTHORIZATIONNUMBER";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "AUTHORIZATIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FACILITY";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FACILITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FACILITY";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FACILITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_USERNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_USERFIRSTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERFIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERFIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERFIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_USERLASTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERLASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERLASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERLASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYTYPE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ACTIONTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ACTIONTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_CANCELLATIONUSER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "CANCELLATIONUSER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_CANCELLATIONUSER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "CANCELLATIONUSER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""REFERRALINBOXLOG"" (""LOGID"", ""PATIENTFIRSTNAME"", ""PATIENTLASTNAME"", ""LOGDATETIME"", ""PATIENTPHONE"", ""REQUESTEDDATETIME"", ""AUTHORIZATIONNUMBER"", ""FACILITY"", ""USERNAME"", ""USERFIRSTNAME"", ""USERLASTNAME"", ""STUDYTYPE"", ""ACTIONTYPE"", ""CANCELLATIONUSER"") VALUES (@LOGID, @PATIENTFIRSTNAME, @PATIENTLASTNAME, @LOGDATETIME, @PATIENTPHONE, @REQUESTEDDATETIME, @AUTHORIZATIONNUMBER, @FACILITY, @USERNAME, @USERFIRSTNAME, @USERLASTNAME, @STUDYTYPE, @ACTIONTYPE, @CANCELLATIONUSER)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LOGID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTFIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFIRSTNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTLASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTLASTNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LOGDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LOGDATETIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTPHONE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTPHONE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@REQUESTEDDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "REQUESTEDDATETIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@AUTHORIZATIONNUMBER";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "AUTHORIZATIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FACILITY";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FACILITY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERFIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERFIRSTNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERLASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERLASTNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYTYPE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ACTIONTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@CANCELLATIONUSER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "CANCELLATIONUSER";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"REFERRALINBOXLOG\" SET \"LOGID\" = @LOGID, \"PATIENTFIRSTNAME\" = @PATIENTFIRS" +
                "TNAME, \"PATIENTLASTNAME\" = @PATIENTLASTNAME, \"LOGDATETIME\" = @LOGDATETIME, \"PATI" +
                "ENTPHONE\" = @PATIENTPHONE, \"REQUESTEDDATETIME\" = @REQUESTEDDATETIME, \"AUTHORIZAT" +
                "IONNUMBER\" = @AUTHORIZATIONNUMBER, \"FACILITY\" = @FACILITY, \"USERNAME\" = @USERNAM" +
                "E, \"USERFIRSTNAME\" = @USERFIRSTNAME, \"USERLASTNAME\" = @USERLASTNAME, \"STUDYTYPE\"" +
                " = @STUDYTYPE, \"ACTIONTYPE\" = @ACTIONTYPE, \"CANCELLATIONUSER\" = @CANCELLATIONUSE" +
                "R WHERE ((\"LOGID\" = @Original_LOGID) AND ((@IsNull_PATIENTFIRSTNAME = 1 AND \"PAT" +
                "IENTFIRSTNAME\" IS NULL) OR (\"PATIENTFIRSTNAME\" = @Original_PATIENTFIRSTNAME)) AN" +
                "D ((@IsNull_PATIENTLASTNAME = 1 AND \"PATIENTLASTNAME\" IS NULL) OR (\"PATIENTLASTN" +
                "AME\" = @Original_PATIENTLASTNAME)) AND ((@IsNull_LOGDATETIME = 1 AND \"LOGDATETIM" +
                "E\" IS NULL) OR (\"LOGDATETIME\" = @Original_LOGDATETIME)) AND ((@IsNull_PATIENTPHO" +
                "NE = 1 AND \"PATIENTPHONE\" IS NULL) OR (\"PATIENTPHONE\" = @Original_PATIENTPHONE))" +
                " AND ((@IsNull_REQUESTEDDATETIME = 1 AND \"REQUESTEDDATETIME\" IS NULL) OR (\"REQUE" +
                "STEDDATETIME\" = @Original_REQUESTEDDATETIME)) AND ((@IsNull_AUTHORIZATIONNUMBER " +
                "= 1 AND \"AUTHORIZATIONNUMBER\" IS NULL) OR (\"AUTHORIZATIONNUMBER\" = @Original_AUT" +
                "HORIZATIONNUMBER)) AND ((@IsNull_FACILITY = 1 AND \"FACILITY\" IS NULL) OR (\"FACIL" +
                "ITY\" = @Original_FACILITY)) AND ((@IsNull_USERNAME = 1 AND \"USERNAME\" IS NULL) O" +
                "R (\"USERNAME\" = @Original_USERNAME)) AND ((@IsNull_USERFIRSTNAME = 1 AND \"USERFI" +
                "RSTNAME\" IS NULL) OR (\"USERFIRSTNAME\" = @Original_USERFIRSTNAME)) AND ((@IsNull_" +
                "USERLASTNAME = 1 AND \"USERLASTNAME\" IS NULL) OR (\"USERLASTNAME\" = @Original_USER" +
                "LASTNAME)) AND ((@IsNull_STUDYTYPE = 1 AND \"STUDYTYPE\" IS NULL) OR (\"STUDYTYPE\" " +
                "= @Original_STUDYTYPE)) AND ((@IsNull_ACTIONTYPE = 1 AND \"ACTIONTYPE\" IS NULL) O" +
                "R (\"ACTIONTYPE\" = @Original_ACTIONTYPE)) AND ((@IsNull_CANCELLATIONUSER = 1 AND " +
                "\"CANCELLATIONUSER\" IS NULL) OR (\"CANCELLATIONUSER\" = @Original_CANCELLATIONUSER)" +
                "))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LOGID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTFIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFIRSTNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTLASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTLASTNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LOGDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LOGDATETIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTPHONE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTPHONE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@REQUESTEDDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "REQUESTEDDATETIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@AUTHORIZATIONNUMBER";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "AUTHORIZATIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FACILITY";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FACILITY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERFIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERFIRSTNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERLASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERLASTNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYTYPE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ACTIONTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@CANCELLATIONUSER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "CANCELLATIONUSER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "LOGID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTFIRSTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTFIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTLASTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTLASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTLASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTLASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_LOGDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LOGDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LOGDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "LOGDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTPHONE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTPHONE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTPHONE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTPHONE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_REQUESTEDDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "REQUESTEDDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_REQUESTEDDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "REQUESTEDDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_AUTHORIZATIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "AUTHORIZATIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_AUTHORIZATIONNUMBER";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "AUTHORIZATIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FACILITY";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FACILITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FACILITY";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FACILITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_USERNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_USERFIRSTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERFIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERFIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERFIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_USERLASTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERLASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERLASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERLASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYTYPE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ACTIONTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACTIONTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ACTIONTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_CANCELLATIONUSER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "CANCELLATIONUSER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_CANCELLATIONUSER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "CANCELLATIONUSER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ""LOGID"", ""PATIENTFIRSTNAME"", ""PATIENTLASTNAME"", ""LOGDATETIME"", ""PATIENTPHONE"", ""REQUESTEDDATETIME"", ""AUTHORIZATIONNUMBER"", ""FACILITY"", ""USERNAME"", ""USERFIRSTNAME"", ""USERLASTNAME"", ""STUDYTYPE"", ""ACTIONTYPE"", ""CANCELLATIONUSER"" FROM ""REFERRALINBOXLOG""";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.REFERRALINBOXLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.REFERRALINBOXLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.REFERRALINBOXLOGDataTable dataTable = new LoggingAndConfig.REFERRALINBOXLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.REFERRALINBOXLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "REFERRALINBOXLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_LOGID, string Original_PATIENTFIRSTNAME, string Original_PATIENTLASTNAME, global::System.Nullable<global::System.DateTime> Original_LOGDATETIME, string Original_PATIENTPHONE, global::System.Nullable<global::System.DateTime> Original_REQUESTEDDATETIME, string Original_AUTHORIZATIONNUMBER, string Original_FACILITY, string Original_USERNAME, string Original_USERFIRSTNAME, string Original_USERLASTNAME, string Original_STUDYTYPE, global::System.Nullable<int> Original_ACTIONTYPE, global::System.Nullable<int> Original_CANCELLATIONUSER) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_LOGID));
            if ((Original_PATIENTFIRSTNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PATIENTFIRSTNAME));
            }
            if ((Original_PATIENTLASTNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PATIENTLASTNAME));
            }
            if ((Original_LOGDATETIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_LOGDATETIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_PATIENTPHONE == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_PATIENTPHONE));
            }
            if ((Original_REQUESTEDDATETIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_REQUESTEDDATETIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_AUTHORIZATIONNUMBER == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_AUTHORIZATIONNUMBER));
            }
            if ((Original_FACILITY == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_FACILITY));
            }
            if ((Original_USERNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_USERNAME));
            }
            if ((Original_USERFIRSTNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_USERFIRSTNAME));
            }
            if ((Original_USERLASTNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_USERLASTNAME));
            }
            if ((Original_STUDYTYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_STUDYTYPE));
            }
            if ((Original_ACTIONTYPE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_ACTIONTYPE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_CANCELLATIONUSER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_CANCELLATIONUSER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int LOGID, string PATIENTFIRSTNAME, string PATIENTLASTNAME, global::System.Nullable<global::System.DateTime> LOGDATETIME, string PATIENTPHONE, global::System.Nullable<global::System.DateTime> REQUESTEDDATETIME, string AUTHORIZATIONNUMBER, string FACILITY, string USERNAME, string USERFIRSTNAME, string USERLASTNAME, string STUDYTYPE, global::System.Nullable<int> ACTIONTYPE, global::System.Nullable<int> CANCELLATIONUSER) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(LOGID));
            if ((PATIENTFIRSTNAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PATIENTFIRSTNAME));
            }
            if ((PATIENTLASTNAME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PATIENTLASTNAME));
            }
            if ((LOGDATETIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(LOGDATETIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PATIENTPHONE == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PATIENTPHONE));
            }
            if ((REQUESTEDDATETIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(REQUESTEDDATETIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((AUTHORIZATIONNUMBER == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(AUTHORIZATIONNUMBER));
            }
            if ((FACILITY == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(FACILITY));
            }
            if ((USERNAME == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(USERNAME));
            }
            if ((USERFIRSTNAME == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(USERFIRSTNAME));
            }
            if ((USERLASTNAME == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(USERLASTNAME));
            }
            if ((STUDYTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(STUDYTYPE));
            }
            if ((ACTIONTYPE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(ACTIONTYPE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CANCELLATIONUSER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(CANCELLATIONUSER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int LOGID, 
                    string PATIENTFIRSTNAME, 
                    string PATIENTLASTNAME, 
                    global::System.Nullable<global::System.DateTime> LOGDATETIME, 
                    string PATIENTPHONE, 
                    global::System.Nullable<global::System.DateTime> REQUESTEDDATETIME, 
                    string AUTHORIZATIONNUMBER, 
                    string FACILITY, 
                    string USERNAME, 
                    string USERFIRSTNAME, 
                    string USERLASTNAME, 
                    string STUDYTYPE, 
                    global::System.Nullable<int> ACTIONTYPE, 
                    global::System.Nullable<int> CANCELLATIONUSER, 
                    int Original_LOGID, 
                    string Original_PATIENTFIRSTNAME, 
                    string Original_PATIENTLASTNAME, 
                    global::System.Nullable<global::System.DateTime> Original_LOGDATETIME, 
                    string Original_PATIENTPHONE, 
                    global::System.Nullable<global::System.DateTime> Original_REQUESTEDDATETIME, 
                    string Original_AUTHORIZATIONNUMBER, 
                    string Original_FACILITY, 
                    string Original_USERNAME, 
                    string Original_USERFIRSTNAME, 
                    string Original_USERLASTNAME, 
                    string Original_STUDYTYPE, 
                    global::System.Nullable<int> Original_ACTIONTYPE, 
                    global::System.Nullable<int> Original_CANCELLATIONUSER) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(LOGID));
            if ((PATIENTFIRSTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PATIENTFIRSTNAME));
            }
            if ((PATIENTLASTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PATIENTLASTNAME));
            }
            if ((LOGDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(LOGDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PATIENTPHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PATIENTPHONE));
            }
            if ((REQUESTEDDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(REQUESTEDDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((AUTHORIZATIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(AUTHORIZATIONNUMBER));
            }
            if ((FACILITY == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(FACILITY));
            }
            if ((USERNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(USERNAME));
            }
            if ((USERFIRSTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(USERFIRSTNAME));
            }
            if ((USERLASTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(USERLASTNAME));
            }
            if ((STUDYTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(STUDYTYPE));
            }
            if ((ACTIONTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(ACTIONTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CANCELLATIONUSER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(CANCELLATIONUSER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_LOGID));
            if ((Original_PATIENTFIRSTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_PATIENTFIRSTNAME));
            }
            if ((Original_PATIENTLASTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_PATIENTLASTNAME));
            }
            if ((Original_LOGDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_LOGDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_PATIENTPHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_PATIENTPHONE));
            }
            if ((Original_REQUESTEDDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_REQUESTEDDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_AUTHORIZATIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_AUTHORIZATIONNUMBER));
            }
            if ((Original_FACILITY == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_FACILITY));
            }
            if ((Original_USERNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_USERNAME));
            }
            if ((Original_USERFIRSTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_USERFIRSTNAME));
            }
            if ((Original_USERLASTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_USERLASTNAME));
            }
            if ((Original_STUDYTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_STUDYTYPE));
            }
            if ((Original_ACTIONTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_ACTIONTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_CANCELLATIONUSER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_CANCELLATIONUSER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PATIENTFIRSTNAME, 
                    string PATIENTLASTNAME, 
                    global::System.Nullable<global::System.DateTime> LOGDATETIME, 
                    string PATIENTPHONE, 
                    global::System.Nullable<global::System.DateTime> REQUESTEDDATETIME, 
                    string AUTHORIZATIONNUMBER, 
                    string FACILITY, 
                    string USERNAME, 
                    string USERFIRSTNAME, 
                    string USERLASTNAME, 
                    string STUDYTYPE, 
                    global::System.Nullable<int> ACTIONTYPE, 
                    global::System.Nullable<int> CANCELLATIONUSER, 
                    int Original_LOGID, 
                    string Original_PATIENTFIRSTNAME, 
                    string Original_PATIENTLASTNAME, 
                    global::System.Nullable<global::System.DateTime> Original_LOGDATETIME, 
                    string Original_PATIENTPHONE, 
                    global::System.Nullable<global::System.DateTime> Original_REQUESTEDDATETIME, 
                    string Original_AUTHORIZATIONNUMBER, 
                    string Original_FACILITY, 
                    string Original_USERNAME, 
                    string Original_USERFIRSTNAME, 
                    string Original_USERLASTNAME, 
                    string Original_STUDYTYPE, 
                    global::System.Nullable<int> Original_ACTIONTYPE, 
                    global::System.Nullable<int> Original_CANCELLATIONUSER) {
            return this.Update(Original_LOGID, PATIENTFIRSTNAME, PATIENTLASTNAME, LOGDATETIME, PATIENTPHONE, REQUESTEDDATETIME, AUTHORIZATIONNUMBER, FACILITY, USERNAME, USERFIRSTNAME, USERLASTNAME, STUDYTYPE, ACTIONTYPE, CANCELLATIONUSER, Original_LOGID, Original_PATIENTFIRSTNAME, Original_PATIENTLASTNAME, Original_LOGDATETIME, Original_PATIENTPHONE, Original_REQUESTEDDATETIME, Original_AUTHORIZATIONNUMBER, Original_FACILITY, Original_USERNAME, Original_USERFIRSTNAME, Original_USERLASTNAME, Original_STUDYTYPE, Original_ACTIONTYPE, Original_CANCELLATIONUSER);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class REQUESTFAILLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public REQUESTFAILLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "REQUESTFAILLOG";
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("TIMESTARTED", "TIMESTARTED");
            tableMapping.ColumnMappings.Add("TIMEFAILED", "TIMEFAILED");
            tableMapping.ColumnMappings.Add("ISSUEROFPATIENTID", "ISSUEROFPATIENTID");
            tableMapping.ColumnMappings.Add("PATIENTID", "PATIENTID");
            tableMapping.ColumnMappings.Add("STUDYINSTANCEUID", "STUDYINSTANCEUID");
            tableMapping.ColumnMappings.Add("ACCESSIONNUMBER", "ACCESSIONNUMBER");
            tableMapping.ColumnMappings.Add("USERNAME", "USERNAME");
            tableMapping.ColumnMappings.Add("SERVICENAME", "SERVICENAME");
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION");
            tableMapping.ColumnMappings.Add("PARTIALFAILURE", "PARTIALFAILURE");
            tableMapping.ColumnMappings.Add("NUMFAILURES", "NUMFAILURES");
            tableMapping.ColumnMappings.Add("AUTOQUERY", "AUTOQUERY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""REQUESTFAILLOG"" WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""TIMESTARTED"" = @Original_TIMESTARTED) AND (""TIMEFAILED"" = @Original_TIMEFAILED) AND (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID) AND (""PATIENTID"" = @Original_PATIENTID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER) AND (""USERNAME"" = @Original_USERNAME) AND ((@IsNull_SERVICENAME = 1 AND ""SERVICENAME"" IS NULL) OR (""SERVICENAME"" = @Original_SERVICENAME)) AND ((@IsNull_DESCRIPTION = 1 AND ""DESCRIPTION"" IS NULL) OR (""DESCRIPTION"" = @Original_DESCRIPTION)) AND (""PARTIALFAILURE"" = @Original_PARTIALFAILURE) AND (""NUMFAILURES"" = @Original_NUMFAILURES) AND ((@IsNull_AUTOQUERY = 1 AND ""AUTOQUERY"" IS NULL) OR (""AUTOQUERY"" = @Original_AUTOQUERY)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFAILED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFAILED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SERVICENAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_DESCRIPTION";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESCRIPTION";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PARTIALFAILURE";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "PARTIALFAILURE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMFAILURES";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMFAILURES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_AUTOQUERY";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "AUTOQUERY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_AUTOQUERY";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "AUTOQUERY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""REQUESTFAILLOG"" (""ENTRYID"", ""TIMESTARTED"", ""TIMEFAILED"", ""ISSUEROFPATIENTID"", ""PATIENTID"", ""STUDYINSTANCEUID"", ""ACCESSIONNUMBER"", ""USERNAME"", ""SERVICENAME"", ""DESCRIPTION"", ""PARTIALFAILURE"", ""NUMFAILURES"", ""AUTOQUERY"") VALUES (@ENTRYID, @TIMESTARTED, @TIMEFAILED, @ISSUEROFPATIENTID, @PATIENTID, @STUDYINSTANCEUID, @ACCESSIONNUMBER, @USERNAME, @SERVICENAME, @DESCRIPTION, @PARTIALFAILURE, @NUMFAILURES, @AUTOQUERY)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFAILED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFAILED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESCRIPTION";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PARTIALFAILURE";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "PARTIALFAILURE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMFAILURES";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMFAILURES";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@AUTOQUERY";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "AUTOQUERY";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""REQUESTFAILLOG"" SET ""ENTRYID"" = @ENTRYID, ""TIMESTARTED"" = @TIMESTARTED, ""TIMEFAILED"" = @TIMEFAILED, ""ISSUEROFPATIENTID"" = @ISSUEROFPATIENTID, ""PATIENTID"" = @PATIENTID, ""STUDYINSTANCEUID"" = @STUDYINSTANCEUID, ""ACCESSIONNUMBER"" = @ACCESSIONNUMBER, ""USERNAME"" = @USERNAME, ""SERVICENAME"" = @SERVICENAME, ""DESCRIPTION"" = @DESCRIPTION, ""PARTIALFAILURE"" = @PARTIALFAILURE, ""NUMFAILURES"" = @NUMFAILURES, ""AUTOQUERY"" = @AUTOQUERY WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""TIMESTARTED"" = @Original_TIMESTARTED) AND (""TIMEFAILED"" = @Original_TIMEFAILED) AND (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID) AND (""PATIENTID"" = @Original_PATIENTID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER) AND (""USERNAME"" = @Original_USERNAME) AND ((@IsNull_SERVICENAME = 1 AND ""SERVICENAME"" IS NULL) OR (""SERVICENAME"" = @Original_SERVICENAME)) AND ((@IsNull_DESCRIPTION = 1 AND ""DESCRIPTION"" IS NULL) OR (""DESCRIPTION"" = @Original_DESCRIPTION)) AND (""PARTIALFAILURE"" = @Original_PARTIALFAILURE) AND (""NUMFAILURES"" = @Original_NUMFAILURES) AND ((@IsNull_AUTOQUERY = 1 AND ""AUTOQUERY"" IS NULL) OR (""AUTOQUERY"" = @Original_AUTOQUERY)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFAILED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFAILED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DESCRIPTION";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PARTIALFAILURE";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "PARTIALFAILURE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMFAILURES";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMFAILURES";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@AUTOQUERY";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "AUTOQUERY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFAILED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFAILED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SERVICENAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_DESCRIPTION";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DESCRIPTION";
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = "DESCRIPTION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PARTIALFAILURE";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "PARTIALFAILURE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMFAILURES";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMFAILURES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_AUTOQUERY";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "AUTOQUERY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_AUTOQUERY";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "AUTOQUERY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ENTRYID\", \"TIMESTARTED\", \"TIMEFAILED\", \"ISSUEROFPATIENTID\", \"PATIENTID\", " +
                "\"STUDYINSTANCEUID\", \"ACCESSIONNUMBER\", \"USERNAME\", \"SERVICENAME\", \"DESCRIPTION\"," +
                " \"PARTIALFAILURE\", \"NUMFAILURES\", \"AUTOQUERY\" FROM \"REQUESTFAILLOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.REQUESTFAILLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.REQUESTFAILLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.REQUESTFAILLOGDataTable dataTable = new LoggingAndConfig.REQUESTFAILLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.REQUESTFAILLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "REQUESTFAILLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ENTRYID, System.DateTime Original_TIMESTARTED, System.DateTime Original_TIMEFAILED, string Original_ISSUEROFPATIENTID, string Original_PATIENTID, string Original_STUDYINSTANCEUID, string Original_ACCESSIONNUMBER, string Original_USERNAME, string Original_SERVICENAME, string Original_DESCRIPTION, string Original_PARTIALFAILURE, int Original_NUMFAILURES, string Original_AUTOQUERY) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ENTRYID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_TIMESTARTED));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_TIMEFAILED));
            if ((Original_ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_PATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_PATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSIONNUMBER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_USERNAME));
            }
            if ((Original_SERVICENAME == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_SERVICENAME));
            }
            if ((Original_DESCRIPTION == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_DESCRIPTION));
            }
            if ((Original_PARTIALFAILURE == null)) {
                throw new global::System.ArgumentNullException("Original_PARTIALFAILURE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_PARTIALFAILURE));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_NUMFAILURES));
            if ((Original_AUTOQUERY == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_AUTOQUERY));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ENTRYID, System.DateTime TIMESTARTED, System.DateTime TIMEFAILED, string ISSUEROFPATIENTID, string PATIENTID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, string USERNAME, string SERVICENAME, string DESCRIPTION, string PARTIALFAILURE, int NUMFAILURES, string AUTOQUERY) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(TIMESTARTED));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(TIMEFAILED));
            if ((ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((PATIENTID == null)) {
                throw new global::System.ArgumentNullException("PATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PATIENTID));
            }
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("ACCESSIONNUMBER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(USERNAME));
            }
            if ((SERVICENAME == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SERVICENAME));
            }
            if ((DESCRIPTION == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(DESCRIPTION));
            }
            if ((PARTIALFAILURE == null)) {
                throw new global::System.ArgumentNullException("PARTIALFAILURE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(PARTIALFAILURE));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(NUMFAILURES));
            if ((AUTOQUERY == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(AUTOQUERY));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ENTRYID, 
                    System.DateTime TIMESTARTED, 
                    System.DateTime TIMEFAILED, 
                    string ISSUEROFPATIENTID, 
                    string PATIENTID, 
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    string USERNAME, 
                    string SERVICENAME, 
                    string DESCRIPTION, 
                    string PARTIALFAILURE, 
                    int NUMFAILURES, 
                    string AUTOQUERY, 
                    int Original_ENTRYID, 
                    System.DateTime Original_TIMESTARTED, 
                    System.DateTime Original_TIMEFAILED, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_PATIENTID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_USERNAME, 
                    string Original_SERVICENAME, 
                    string Original_DESCRIPTION, 
                    string Original_PARTIALFAILURE, 
                    int Original_NUMFAILURES, 
                    string Original_AUTOQUERY) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(TIMESTARTED));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(TIMEFAILED));
            if ((ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((PATIENTID == null)) {
                throw new global::System.ArgumentNullException("PATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PATIENTID));
            }
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("ACCESSIONNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(USERNAME));
            }
            if ((SERVICENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SERVICENAME));
            }
            if ((DESCRIPTION == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(DESCRIPTION));
            }
            if ((PARTIALFAILURE == null)) {
                throw new global::System.ArgumentNullException("PARTIALFAILURE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(PARTIALFAILURE));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(NUMFAILURES));
            if ((AUTOQUERY == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(AUTOQUERY));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_ENTRYID));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_TIMESTARTED));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_TIMEFAILED));
            if ((Original_ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_PATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_PATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSIONNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_USERNAME));
            }
            if ((Original_SERVICENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_SERVICENAME));
            }
            if ((Original_DESCRIPTION == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_DESCRIPTION));
            }
            if ((Original_PARTIALFAILURE == null)) {
                throw new global::System.ArgumentNullException("Original_PARTIALFAILURE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_PARTIALFAILURE));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_NUMFAILURES));
            if ((Original_AUTOQUERY == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_AUTOQUERY));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime TIMESTARTED, 
                    System.DateTime TIMEFAILED, 
                    string ISSUEROFPATIENTID, 
                    string PATIENTID, 
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    string USERNAME, 
                    string SERVICENAME, 
                    string DESCRIPTION, 
                    string PARTIALFAILURE, 
                    int NUMFAILURES, 
                    string AUTOQUERY, 
                    int Original_ENTRYID, 
                    System.DateTime Original_TIMESTARTED, 
                    System.DateTime Original_TIMEFAILED, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_PATIENTID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_USERNAME, 
                    string Original_SERVICENAME, 
                    string Original_DESCRIPTION, 
                    string Original_PARTIALFAILURE, 
                    int Original_NUMFAILURES, 
                    string Original_AUTOQUERY) {
            return this.Update(Original_ENTRYID, TIMESTARTED, TIMEFAILED, ISSUEROFPATIENTID, PATIENTID, STUDYINSTANCEUID, ACCESSIONNUMBER, USERNAME, SERVICENAME, DESCRIPTION, PARTIALFAILURE, NUMFAILURES, AUTOQUERY, Original_ENTRYID, Original_TIMESTARTED, Original_TIMEFAILED, Original_ISSUEROFPATIENTID, Original_PATIENTID, Original_STUDYINSTANCEUID, Original_ACCESSIONNUMBER, Original_USERNAME, Original_SERVICENAME, Original_DESCRIPTION, Original_PARTIALFAILURE, Original_NUMFAILURES, Original_AUTOQUERY);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class REQUESTLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public REQUESTLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "REQUESTLOG";
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("TIMESTARTED", "TIMESTARTED");
            tableMapping.ColumnMappings.Add("TIMEFINISHED", "TIMEFINISHED");
            tableMapping.ColumnMappings.Add("ISSUEROFPATIENTID", "ISSUEROFPATIENTID");
            tableMapping.ColumnMappings.Add("PATIENTID", "PATIENTID");
            tableMapping.ColumnMappings.Add("STUDYINSTANCEUID", "STUDYINSTANCEUID");
            tableMapping.ColumnMappings.Add("ACCESSIONNUMBER", "ACCESSIONNUMBER");
            tableMapping.ColumnMappings.Add("USERNAME", "USERNAME");
            tableMapping.ColumnMappings.Add("SERVICENAME", "SERVICENAME");
            tableMapping.ColumnMappings.Add("AUTOQUERY", "AUTOQUERY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""REQUESTLOG"" WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""TIMESTARTED"" = @Original_TIMESTARTED) AND (""TIMEFINISHED"" = @Original_TIMEFINISHED) AND (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID) AND (""PATIENTID"" = @Original_PATIENTID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER) AND (""USERNAME"" = @Original_USERNAME) AND ((@IsNull_SERVICENAME = 1 AND ""SERVICENAME"" IS NULL) OR (""SERVICENAME"" = @Original_SERVICENAME)) AND ((@IsNull_AUTOQUERY = 1 AND ""AUTOQUERY"" IS NULL) OR (""AUTOQUERY"" = @Original_AUTOQUERY)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SERVICENAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_AUTOQUERY";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "AUTOQUERY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_AUTOQUERY";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "AUTOQUERY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""REQUESTLOG"" (""ENTRYID"", ""TIMESTARTED"", ""TIMEFINISHED"", ""ISSUEROFPATIENTID"", ""PATIENTID"", ""STUDYINSTANCEUID"", ""ACCESSIONNUMBER"", ""USERNAME"", ""SERVICENAME"", ""AUTOQUERY"") VALUES (@ENTRYID, @TIMESTARTED, @TIMEFINISHED, @ISSUEROFPATIENTID, @PATIENTID, @STUDYINSTANCEUID, @ACCESSIONNUMBER, @USERNAME, @SERVICENAME, @AUTOQUERY)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@AUTOQUERY";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "AUTOQUERY";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""REQUESTLOG"" SET ""ENTRYID"" = @ENTRYID, ""TIMESTARTED"" = @TIMESTARTED, ""TIMEFINISHED"" = @TIMEFINISHED, ""ISSUEROFPATIENTID"" = @ISSUEROFPATIENTID, ""PATIENTID"" = @PATIENTID, ""STUDYINSTANCEUID"" = @STUDYINSTANCEUID, ""ACCESSIONNUMBER"" = @ACCESSIONNUMBER, ""USERNAME"" = @USERNAME, ""SERVICENAME"" = @SERVICENAME, ""AUTOQUERY"" = @AUTOQUERY WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""TIMESTARTED"" = @Original_TIMESTARTED) AND (""TIMEFINISHED"" = @Original_TIMEFINISHED) AND (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID) AND (""PATIENTID"" = @Original_PATIENTID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER) AND (""USERNAME"" = @Original_USERNAME) AND ((@IsNull_SERVICENAME = 1 AND ""SERVICENAME"" IS NULL) OR (""SERVICENAME"" = @Original_SERVICENAME)) AND ((@IsNull_AUTOQUERY = 1 AND ""AUTOQUERY"" IS NULL) OR (""AUTOQUERY"" = @Original_AUTOQUERY)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@AUTOQUERY";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "AUTOQUERY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SERVICENAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_AUTOQUERY";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "AUTOQUERY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_AUTOQUERY";
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "AUTOQUERY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ENTRYID\", \"TIMESTARTED\", \"TIMEFINISHED\", \"ISSUEROFPATIENTID\", \"PATIENTID\"" +
                ", \"STUDYINSTANCEUID\", \"ACCESSIONNUMBER\", \"USERNAME\", \"SERVICENAME\", \"AUTOQUERY\" " +
                "FROM \"REQUESTLOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.REQUESTLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.REQUESTLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.REQUESTLOGDataTable dataTable = new LoggingAndConfig.REQUESTLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.REQUESTLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "REQUESTLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ENTRYID, System.DateTime Original_TIMESTARTED, System.DateTime Original_TIMEFINISHED, string Original_ISSUEROFPATIENTID, string Original_PATIENTID, string Original_STUDYINSTANCEUID, string Original_ACCESSIONNUMBER, string Original_USERNAME, string Original_SERVICENAME, string Original_AUTOQUERY) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ENTRYID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_TIMESTARTED));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_TIMEFINISHED));
            if ((Original_ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_PATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_PATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSIONNUMBER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_USERNAME));
            }
            if ((Original_SERVICENAME == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_SERVICENAME));
            }
            if ((Original_AUTOQUERY == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_AUTOQUERY));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ENTRYID, System.DateTime TIMESTARTED, System.DateTime TIMEFINISHED, string ISSUEROFPATIENTID, string PATIENTID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, string USERNAME, string SERVICENAME, string AUTOQUERY) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(TIMESTARTED));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(TIMEFINISHED));
            if ((ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((PATIENTID == null)) {
                throw new global::System.ArgumentNullException("PATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PATIENTID));
            }
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("ACCESSIONNUMBER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(USERNAME));
            }
            if ((SERVICENAME == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SERVICENAME));
            }
            if ((AUTOQUERY == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(AUTOQUERY));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ENTRYID, 
                    System.DateTime TIMESTARTED, 
                    System.DateTime TIMEFINISHED, 
                    string ISSUEROFPATIENTID, 
                    string PATIENTID, 
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    string USERNAME, 
                    string SERVICENAME, 
                    string AUTOQUERY, 
                    int Original_ENTRYID, 
                    System.DateTime Original_TIMESTARTED, 
                    System.DateTime Original_TIMEFINISHED, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_PATIENTID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_USERNAME, 
                    string Original_SERVICENAME, 
                    string Original_AUTOQUERY) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(TIMESTARTED));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(TIMEFINISHED));
            if ((ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((PATIENTID == null)) {
                throw new global::System.ArgumentNullException("PATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PATIENTID));
            }
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("ACCESSIONNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(USERNAME));
            }
            if ((SERVICENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SERVICENAME));
            }
            if ((AUTOQUERY == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(AUTOQUERY));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ENTRYID));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_TIMESTARTED));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_TIMEFINISHED));
            if ((Original_ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_PATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_PATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSIONNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_USERNAME));
            }
            if ((Original_SERVICENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_SERVICENAME));
            }
            if ((Original_AUTOQUERY == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_AUTOQUERY));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime TIMESTARTED, 
                    System.DateTime TIMEFINISHED, 
                    string ISSUEROFPATIENTID, 
                    string PATIENTID, 
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    string USERNAME, 
                    string SERVICENAME, 
                    string AUTOQUERY, 
                    int Original_ENTRYID, 
                    System.DateTime Original_TIMESTARTED, 
                    System.DateTime Original_TIMEFINISHED, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_PATIENTID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_USERNAME, 
                    string Original_SERVICENAME, 
                    string Original_AUTOQUERY) {
            return this.Update(Original_ENTRYID, TIMESTARTED, TIMEFINISHED, ISSUEROFPATIENTID, PATIENTID, STUDYINSTANCEUID, ACCESSIONNUMBER, USERNAME, SERVICENAME, AUTOQUERY, Original_ENTRYID, Original_TIMESTARTED, Original_TIMEFINISHED, Original_ISSUEROFPATIENTID, Original_PATIENTID, Original_STUDYINSTANCEUID, Original_ACCESSIONNUMBER, Original_USERNAME, Original_SERVICENAME, Original_AUTOQUERY);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RETRIEVESTUDYLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RETRIEVESTUDYLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RETRIEVESTUDYLOG";
            tableMapping.ColumnMappings.Add("ADDEDID", "ADDEDID");
            tableMapping.ColumnMappings.Add("STUDYINSTANCEUID", "STUDYINSTANCEUID");
            tableMapping.ColumnMappings.Add("STUDYDATETIME", "STUDYDATETIME");
            tableMapping.ColumnMappings.Add("FINISHTIME", "FINISHTIME");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("NUMOBJECTS", "NUMOBJECTS");
            tableMapping.ColumnMappings.Add("ACCESSIONNUMBER", "ACCESSIONNUMBER");
            tableMapping.ColumnMappings.Add("PATIENTID", "PATIENTID");
            tableMapping.ColumnMappings.Add("ISSUEROFPATIENTID", "ISSUEROFPATIENTID");
            tableMapping.ColumnMappings.Add("FIRSTNAME", "FIRSTNAME");
            tableMapping.ColumnMappings.Add("LASTNAME", "LASTNAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""RETRIEVESTUDYLOG"" WHERE ((""ADDEDID"" = @Original_ADDEDID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND ((@IsNull_STUDYDATETIME = 1 AND ""STUDYDATETIME"" IS NULL) OR (""STUDYDATETIME"" = @Original_STUDYDATETIME)) AND ((@IsNull_FINISHTIME = 1 AND ""FINISHTIME"" IS NULL) OR (""FINISHTIME"" = @Original_FINISHTIME)) AND ((@IsNull_STATUS = 1 AND ""STATUS"" IS NULL) OR (""STATUS"" = @Original_STATUS)) AND ((@IsNull_NUMOBJECTS = 1 AND ""NUMOBJECTS"" IS NULL) OR (""NUMOBJECTS"" = @Original_NUMOBJECTS)) AND ((@IsNull_ACCESSIONNUMBER = 1 AND ""ACCESSIONNUMBER"" IS NULL) OR (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER)) AND ((@IsNull_PATIENTID = 1 AND ""PATIENTID"" IS NULL) OR (""PATIENTID"" = @Original_PATIENTID)) AND ((@IsNull_ISSUEROFPATIENTID = 1 AND ""ISSUEROFPATIENTID"" IS NULL) OR (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID)) AND ((@IsNull_FIRSTNAME = 1 AND ""FIRSTNAME"" IS NULL) OR (""FIRSTNAME"" = @Original_FIRSTNAME)) AND ((@IsNull_LASTNAME = 1 AND ""LASTNAME"" IS NULL) OR (""LASTNAME"" = @Original_LASTNAME)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ADDEDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ADDEDID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FINISHTIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ISSUEROFPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FIRSTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_LASTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""RETRIEVESTUDYLOG"" (""ADDEDID"", ""STUDYINSTANCEUID"", ""STUDYDATETIME"", ""FINISHTIME"", ""STATUS"", ""NUMOBJECTS"", ""ACCESSIONNUMBER"", ""PATIENTID"", ""ISSUEROFPATIENTID"", ""FIRSTNAME"", ""LASTNAME"") VALUES (@ADDEDID, @STUDYINSTANCEUID, @STUDYDATETIME, @FINISHTIME, @STATUS, @NUMOBJECTS, @ACCESSIONNUMBER, @PATIENTID, @ISSUEROFPATIENTID, @FIRSTNAME, @LASTNAME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ADDEDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ADDEDID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""RETRIEVESTUDYLOG"" SET ""ADDEDID"" = @ADDEDID, ""STUDYINSTANCEUID"" = @STUDYINSTANCEUID, ""STUDYDATETIME"" = @STUDYDATETIME, ""FINISHTIME"" = @FINISHTIME, ""STATUS"" = @STATUS, ""NUMOBJECTS"" = @NUMOBJECTS, ""ACCESSIONNUMBER"" = @ACCESSIONNUMBER, ""PATIENTID"" = @PATIENTID, ""ISSUEROFPATIENTID"" = @ISSUEROFPATIENTID, ""FIRSTNAME"" = @FIRSTNAME, ""LASTNAME"" = @LASTNAME WHERE ((""ADDEDID"" = @Original_ADDEDID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND ((@IsNull_STUDYDATETIME = 1 AND ""STUDYDATETIME"" IS NULL) OR (""STUDYDATETIME"" = @Original_STUDYDATETIME)) AND ((@IsNull_FINISHTIME = 1 AND ""FINISHTIME"" IS NULL) OR (""FINISHTIME"" = @Original_FINISHTIME)) AND ((@IsNull_STATUS = 1 AND ""STATUS"" IS NULL) OR (""STATUS"" = @Original_STATUS)) AND ((@IsNull_NUMOBJECTS = 1 AND ""NUMOBJECTS"" IS NULL) OR (""NUMOBJECTS"" = @Original_NUMOBJECTS)) AND ((@IsNull_ACCESSIONNUMBER = 1 AND ""ACCESSIONNUMBER"" IS NULL) OR (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER)) AND ((@IsNull_PATIENTID = 1 AND ""PATIENTID"" IS NULL) OR (""PATIENTID"" = @Original_PATIENTID)) AND ((@IsNull_ISSUEROFPATIENTID = 1 AND ""ISSUEROFPATIENTID"" IS NULL) OR (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID)) AND ((@IsNull_FIRSTNAME = 1 AND ""FIRSTNAME"" IS NULL) OR (""FIRSTNAME"" = @Original_FIRSTNAME)) AND ((@IsNull_LASTNAME = 1 AND ""LASTNAME"" IS NULL) OR (""LASTNAME"" = @Original_LASTNAME)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ADDEDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ADDEDID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ADDEDID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ADDEDID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FINISHTIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FINISHTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "FINISHTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ISSUEROFPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FIRSTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FIRSTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_LASTNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LASTNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ADDEDID\", \"STUDYINSTANCEUID\", \"STUDYDATETIME\", \"FINISHTIME\", \"STATUS\", \"N" +
                "UMOBJECTS\", \"ACCESSIONNUMBER\", \"PATIENTID\", \"ISSUEROFPATIENTID\", \"FIRSTNAME\", \"L" +
                "ASTNAME\" FROM \"RETRIEVESTUDYLOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.RETRIEVESTUDYLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.RETRIEVESTUDYLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.RETRIEVESTUDYLOGDataTable dataTable = new LoggingAndConfig.RETRIEVESTUDYLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.RETRIEVESTUDYLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "RETRIEVESTUDYLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ADDEDID, string Original_STUDYINSTANCEUID, global::System.Nullable<global::System.DateTime> Original_STUDYDATETIME, global::System.Nullable<global::System.DateTime> Original_FINISHTIME, global::System.Nullable<int> Original_STATUS, global::System.Nullable<int> Original_NUMOBJECTS, string Original_ACCESSIONNUMBER, string Original_PATIENTID, string Original_ISSUEROFPATIENTID, string Original_FIRSTNAME, string Original_LASTNAME) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ADDEDID));
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_STUDYDATETIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_STUDYDATETIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_FINISHTIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_FINISHTIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_STATUS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_STATUS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_NUMOBJECTS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_NUMOBJECTS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_PATIENTID == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_FIRSTNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_FIRSTNAME));
            }
            if ((Original_LASTNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_LASTNAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ADDEDID, string STUDYINSTANCEUID, global::System.Nullable<global::System.DateTime> STUDYDATETIME, global::System.Nullable<global::System.DateTime> FINISHTIME, global::System.Nullable<int> STATUS, global::System.Nullable<int> NUMOBJECTS, string ACCESSIONNUMBER, string PATIENTID, string ISSUEROFPATIENTID, string FIRSTNAME, string LASTNAME) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ADDEDID));
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((STUDYDATETIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(STUDYDATETIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FINISHTIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(FINISHTIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((STATUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(STATUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((NUMOBJECTS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(NUMOBJECTS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((PATIENTID == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((FIRSTNAME == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(FIRSTNAME));
            }
            if ((LASTNAME == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(LASTNAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ADDEDID, 
                    string STUDYINSTANCEUID, 
                    global::System.Nullable<global::System.DateTime> STUDYDATETIME, 
                    global::System.Nullable<global::System.DateTime> FINISHTIME, 
                    global::System.Nullable<int> STATUS, 
                    global::System.Nullable<int> NUMOBJECTS, 
                    string ACCESSIONNUMBER, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string FIRSTNAME, 
                    string LASTNAME, 
                    int Original_ADDEDID, 
                    string Original_STUDYINSTANCEUID, 
                    global::System.Nullable<global::System.DateTime> Original_STUDYDATETIME, 
                    global::System.Nullable<global::System.DateTime> Original_FINISHTIME, 
                    global::System.Nullable<int> Original_STATUS, 
                    global::System.Nullable<int> Original_NUMOBJECTS, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_FIRSTNAME, 
                    string Original_LASTNAME) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ADDEDID));
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((STUDYDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(STUDYDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FINISHTIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(FINISHTIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((STATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(STATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((NUMOBJECTS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(NUMOBJECTS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((PATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((FIRSTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(FIRSTNAME));
            }
            if ((LASTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(LASTNAME));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ADDEDID));
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_STUDYDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_STUDYDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_FINISHTIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_FINISHTIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_STATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_STATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_NUMOBJECTS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_NUMOBJECTS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_PATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_FIRSTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_FIRSTNAME));
            }
            if ((Original_LASTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_LASTNAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string STUDYINSTANCEUID, 
                    global::System.Nullable<global::System.DateTime> STUDYDATETIME, 
                    global::System.Nullable<global::System.DateTime> FINISHTIME, 
                    global::System.Nullable<int> STATUS, 
                    global::System.Nullable<int> NUMOBJECTS, 
                    string ACCESSIONNUMBER, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string FIRSTNAME, 
                    string LASTNAME, 
                    int Original_ADDEDID, 
                    string Original_STUDYINSTANCEUID, 
                    global::System.Nullable<global::System.DateTime> Original_STUDYDATETIME, 
                    global::System.Nullable<global::System.DateTime> Original_FINISHTIME, 
                    global::System.Nullable<int> Original_STATUS, 
                    global::System.Nullable<int> Original_NUMOBJECTS, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_FIRSTNAME, 
                    string Original_LASTNAME) {
            return this.Update(Original_ADDEDID, STUDYINSTANCEUID, STUDYDATETIME, FINISHTIME, STATUS, NUMOBJECTS, ACCESSIONNUMBER, PATIENTID, ISSUEROFPATIENTID, FIRSTNAME, LASTNAME, Original_ADDEDID, Original_STUDYINSTANCEUID, Original_STUDYDATETIME, Original_FINISHTIME, Original_STATUS, Original_NUMOBJECTS, Original_ACCESSIONNUMBER, Original_PATIENTID, Original_ISSUEROFPATIENTID, Original_FIRSTNAME, Original_LASTNAME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RPTEXPORTLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RPTEXPORTLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RPTEXPORTLOG";
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("EXPORTID", "EXPORTID");
            tableMapping.ColumnMappings.Add("SOPINSTANCEUID", "SOPINSTANCEUID");
            tableMapping.ColumnMappings.Add("ACCESSIONNUMBER", "ACCESSIONNUMBER");
            tableMapping.ColumnMappings.Add("PATIENTID", "PATIENTID");
            tableMapping.ColumnMappings.Add("ISSUEROFPATIENTID", "ISSUEROFPATIENTID");
            tableMapping.ColumnMappings.Add("TIMECOMPLETED", "TIMECOMPLETED");
            tableMapping.ColumnMappings.Add("EXPORTEDFILEURL", "EXPORTEDFILEURL");
            tableMapping.ColumnMappings.Add("FACILITYNAME", "FACILITYNAME");
            tableMapping.ColumnMappings.Add("EXPORTTYPE", "EXPORTTYPE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""RPTEXPORTLOG"" WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""EXPORTID"" = @Original_EXPORTID) AND ((@IsNull_SOPINSTANCEUID = 1 AND ""SOPINSTANCEUID"" IS NULL) OR (""SOPINSTANCEUID"" = @Original_SOPINSTANCEUID)) AND ((@IsNull_ACCESSIONNUMBER = 1 AND ""ACCESSIONNUMBER"" IS NULL) OR (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER)) AND (""PATIENTID"" = @Original_PATIENTID) AND (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID) AND (""TIMECOMPLETED"" = @Original_TIMECOMPLETED) AND (""EXPORTEDFILEURL"" = @Original_EXPORTEDFILEURL) AND ((@IsNull_FACILITYNAME = 1 AND ""FACILITYNAME"" IS NULL) OR (""FACILITYNAME"" = @Original_FACILITYNAME)) AND (""EXPORTTYPE"" = @Original_EXPORTTYPE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_EXPORTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "EXPORTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SOPINSTANCEUID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SOPINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMECOMPLETED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMECOMPLETED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_EXPORTEDFILEURL";
            param.Size = 550;
            param.IsNullable = true;
            param.SourceColumn = "EXPORTEDFILEURL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FACILITYNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FACILITYNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FACILITYNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FACILITYNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_EXPORTTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "EXPORTTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""RPTEXPORTLOG"" (""ENTRYID"", ""EXPORTID"", ""SOPINSTANCEUID"", ""ACCESSIONNUMBER"", ""PATIENTID"", ""ISSUEROFPATIENTID"", ""TIMECOMPLETED"", ""EXPORTEDFILEURL"", ""FACILITYNAME"", ""EXPORTTYPE"") VALUES (@ENTRYID, @EXPORTID, @SOPINSTANCEUID, @ACCESSIONNUMBER, @PATIENTID, @ISSUEROFPATIENTID, @TIMECOMPLETED, @EXPORTEDFILEURL, @FACILITYNAME, @EXPORTTYPE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@EXPORTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "EXPORTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SOPINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMECOMPLETED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMECOMPLETED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@EXPORTEDFILEURL";
            param.Size = 550;
            param.IsNullable = true;
            param.SourceColumn = "EXPORTEDFILEURL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FACILITYNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FACILITYNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@EXPORTTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "EXPORTTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""RPTEXPORTLOG"" SET ""ENTRYID"" = @ENTRYID, ""EXPORTID"" = @EXPORTID, ""SOPINSTANCEUID"" = @SOPINSTANCEUID, ""ACCESSIONNUMBER"" = @ACCESSIONNUMBER, ""PATIENTID"" = @PATIENTID, ""ISSUEROFPATIENTID"" = @ISSUEROFPATIENTID, ""TIMECOMPLETED"" = @TIMECOMPLETED, ""EXPORTEDFILEURL"" = @EXPORTEDFILEURL, ""FACILITYNAME"" = @FACILITYNAME, ""EXPORTTYPE"" = @EXPORTTYPE WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""EXPORTID"" = @Original_EXPORTID) AND ((@IsNull_SOPINSTANCEUID = 1 AND ""SOPINSTANCEUID"" IS NULL) OR (""SOPINSTANCEUID"" = @Original_SOPINSTANCEUID)) AND ((@IsNull_ACCESSIONNUMBER = 1 AND ""ACCESSIONNUMBER"" IS NULL) OR (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER)) AND (""PATIENTID"" = @Original_PATIENTID) AND (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID) AND (""TIMECOMPLETED"" = @Original_TIMECOMPLETED) AND (""EXPORTEDFILEURL"" = @Original_EXPORTEDFILEURL) AND ((@IsNull_FACILITYNAME = 1 AND ""FACILITYNAME"" IS NULL) OR (""FACILITYNAME"" = @Original_FACILITYNAME)) AND (""EXPORTTYPE"" = @Original_EXPORTTYPE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@EXPORTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "EXPORTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SOPINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMECOMPLETED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMECOMPLETED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@EXPORTEDFILEURL";
            param.Size = 550;
            param.IsNullable = true;
            param.SourceColumn = "EXPORTEDFILEURL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@FACILITYNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FACILITYNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@EXPORTTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "EXPORTTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_EXPORTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "EXPORTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_SOPINSTANCEUID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SOPINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMECOMPLETED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMECOMPLETED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_EXPORTEDFILEURL";
            param.Size = 550;
            param.IsNullable = true;
            param.SourceColumn = "EXPORTEDFILEURL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_FACILITYNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FACILITYNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_FACILITYNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "FACILITYNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_EXPORTTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "EXPORTTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ENTRYID\", \"EXPORTID\", \"SOPINSTANCEUID\", \"ACCESSIONNUMBER\", \"PATIENTID\", \"" +
                "ISSUEROFPATIENTID\", \"TIMECOMPLETED\", \"EXPORTEDFILEURL\", \"FACILITYNAME\", \"EXPORTT" +
                "YPE\" FROM \"RPTEXPORTLOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.RPTEXPORTLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.RPTEXPORTLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.RPTEXPORTLOGDataTable dataTable = new LoggingAndConfig.RPTEXPORTLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.RPTEXPORTLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "RPTEXPORTLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ENTRYID, int Original_EXPORTID, string Original_SOPINSTANCEUID, string Original_ACCESSIONNUMBER, string Original_PATIENTID, string Original_ISSUEROFPATIENTID, System.DateTime Original_TIMECOMPLETED, string Original_EXPORTEDFILEURL, string Original_FACILITYNAME, int Original_EXPORTTYPE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ENTRYID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_EXPORTID));
            if ((Original_SOPINSTANCEUID == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_SOPINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_PATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_PATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_TIMECOMPLETED));
            if ((Original_EXPORTEDFILEURL == null)) {
                throw new global::System.ArgumentNullException("Original_EXPORTEDFILEURL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_EXPORTEDFILEURL));
            }
            if ((Original_FACILITYNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_FACILITYNAME));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_EXPORTTYPE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ENTRYID, int EXPORTID, string SOPINSTANCEUID, string ACCESSIONNUMBER, string PATIENTID, string ISSUEROFPATIENTID, System.DateTime TIMECOMPLETED, string EXPORTEDFILEURL, string FACILITYNAME, int EXPORTTYPE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(EXPORTID));
            if ((SOPINSTANCEUID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SOPINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((PATIENTID == null)) {
                throw new global::System.ArgumentNullException("PATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ISSUEROFPATIENTID));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(TIMECOMPLETED));
            if ((EXPORTEDFILEURL == null)) {
                throw new global::System.ArgumentNullException("EXPORTEDFILEURL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(EXPORTEDFILEURL));
            }
            if ((FACILITYNAME == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(FACILITYNAME));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(EXPORTTYPE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ENTRYID, 
                    int EXPORTID, 
                    string SOPINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    System.DateTime TIMECOMPLETED, 
                    string EXPORTEDFILEURL, 
                    string FACILITYNAME, 
                    int EXPORTTYPE, 
                    int Original_ENTRYID, 
                    int Original_EXPORTID, 
                    string Original_SOPINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    System.DateTime Original_TIMECOMPLETED, 
                    string Original_EXPORTEDFILEURL, 
                    string Original_FACILITYNAME, 
                    int Original_EXPORTTYPE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(EXPORTID));
            if ((SOPINSTANCEUID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SOPINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((PATIENTID == null)) {
                throw new global::System.ArgumentNullException("PATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ISSUEROFPATIENTID));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(TIMECOMPLETED));
            if ((EXPORTEDFILEURL == null)) {
                throw new global::System.ArgumentNullException("EXPORTEDFILEURL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(EXPORTEDFILEURL));
            }
            if ((FACILITYNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(FACILITYNAME));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(EXPORTTYPE));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ENTRYID));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_EXPORTID));
            if ((Original_SOPINSTANCEUID == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_SOPINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_PATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_PATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_TIMECOMPLETED));
            if ((Original_EXPORTEDFILEURL == null)) {
                throw new global::System.ArgumentNullException("Original_EXPORTEDFILEURL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_EXPORTEDFILEURL));
            }
            if ((Original_FACILITYNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_FACILITYNAME));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_EXPORTTYPE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int EXPORTID, 
                    string SOPINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    System.DateTime TIMECOMPLETED, 
                    string EXPORTEDFILEURL, 
                    string FACILITYNAME, 
                    int EXPORTTYPE, 
                    int Original_ENTRYID, 
                    int Original_EXPORTID, 
                    string Original_SOPINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    System.DateTime Original_TIMECOMPLETED, 
                    string Original_EXPORTEDFILEURL, 
                    string Original_FACILITYNAME, 
                    int Original_EXPORTTYPE) {
            return this.Update(Original_ENTRYID, EXPORTID, SOPINSTANCEUID, ACCESSIONNUMBER, PATIENTID, ISSUEROFPATIENTID, TIMECOMPLETED, EXPORTEDFILEURL, FACILITYNAME, EXPORTTYPE, Original_ENTRYID, Original_EXPORTID, Original_SOPINSTANCEUID, Original_ACCESSIONNUMBER, Original_PATIENTID, Original_ISSUEROFPATIENTID, Original_TIMECOMPLETED, Original_EXPORTEDFILEURL, Original_FACILITYNAME, Original_EXPORTTYPE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class STORAGECOMMITLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public STORAGECOMMITLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "STORAGECOMMITLOG";
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("SERVICENAME", "SERVICENAME");
            tableMapping.ColumnMappings.Add("STUDYINSTANCEUID", "STUDYINSTANCEUID");
            tableMapping.ColumnMappings.Add("ACCESSIONNUMBER", "ACCESSIONNUMBER");
            tableMapping.ColumnMappings.Add("NUMOBJECTS", "NUMOBJECTS");
            tableMapping.ColumnMappings.Add("TIMEFINISHED", "TIMEFINISHED");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""STORAGECOMMITLOG"" WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""SERVICENAME"" = @Original_SERVICENAME) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER) AND (""NUMOBJECTS"" = @Original_NUMOBJECTS) AND (""TIMEFINISHED"" = @Original_TIMEFINISHED))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"STORAGECOMMITLOG\" (\"ENTRYID\", \"SERVICENAME\", \"STUDYINSTANCEUID\", \"AC" +
                "CESSIONNUMBER\", \"NUMOBJECTS\", \"TIMEFINISHED\") VALUES (@ENTRYID, @SERVICENAME, @S" +
                "TUDYINSTANCEUID, @ACCESSIONNUMBER, @NUMOBJECTS, @TIMEFINISHED)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""STORAGECOMMITLOG"" SET ""ENTRYID"" = @ENTRYID, ""SERVICENAME"" = @SERVICENAME, ""STUDYINSTANCEUID"" = @STUDYINSTANCEUID, ""ACCESSIONNUMBER"" = @ACCESSIONNUMBER, ""NUMOBJECTS"" = @NUMOBJECTS, ""TIMEFINISHED"" = @TIMEFINISHED WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""SERVICENAME"" = @Original_SERVICENAME) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER) AND (""NUMOBJECTS"" = @Original_NUMOBJECTS) AND (""TIMEFINISHED"" = @Original_TIMEFINISHED))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ENTRYID\", \"SERVICENAME\", \"STUDYINSTANCEUID\", \"ACCESSIONNUMBER\", \"NUMOBJEC" +
                "TS\", \"TIMEFINISHED\" FROM \"STORAGECOMMITLOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.STORAGECOMMITLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.STORAGECOMMITLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.STORAGECOMMITLOGDataTable dataTable = new LoggingAndConfig.STORAGECOMMITLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.STORAGECOMMITLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "STORAGECOMMITLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ENTRYID, string Original_SERVICENAME, string Original_STUDYINSTANCEUID, string Original_ACCESSIONNUMBER, int Original_NUMOBJECTS, System.DateTime Original_TIMEFINISHED) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ENTRYID));
            if ((Original_SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SERVICENAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SERVICENAME));
            }
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSIONNUMBER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_NUMOBJECTS));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_TIMEFINISHED));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ENTRYID, string SERVICENAME, string STUDYINSTANCEUID, string ACCESSIONNUMBER, int NUMOBJECTS, System.DateTime TIMEFINISHED) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ENTRYID));
            if ((SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("SERVICENAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SERVICENAME));
            }
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("ACCESSIONNUMBER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ACCESSIONNUMBER));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(NUMOBJECTS));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(TIMEFINISHED));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ENTRYID, string SERVICENAME, string STUDYINSTANCEUID, string ACCESSIONNUMBER, int NUMOBJECTS, System.DateTime TIMEFINISHED, int Original_ENTRYID, string Original_SERVICENAME, string Original_STUDYINSTANCEUID, string Original_ACCESSIONNUMBER, int Original_NUMOBJECTS, System.DateTime Original_TIMEFINISHED) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ENTRYID));
            if ((SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("SERVICENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SERVICENAME));
            }
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("ACCESSIONNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ACCESSIONNUMBER));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(NUMOBJECTS));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(TIMEFINISHED));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ENTRYID));
            if ((Original_SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SERVICENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_SERVICENAME));
            }
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSIONNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_NUMOBJECTS));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_TIMEFINISHED));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SERVICENAME, string STUDYINSTANCEUID, string ACCESSIONNUMBER, int NUMOBJECTS, System.DateTime TIMEFINISHED, int Original_ENTRYID, string Original_SERVICENAME, string Original_STUDYINSTANCEUID, string Original_ACCESSIONNUMBER, int Original_NUMOBJECTS, System.DateTime Original_TIMEFINISHED) {
            return this.Update(Original_ENTRYID, SERVICENAME, STUDYINSTANCEUID, ACCESSIONNUMBER, NUMOBJECTS, TIMEFINISHED, Original_ENTRYID, Original_SERVICENAME, Original_STUDYINSTANCEUID, Original_ACCESSIONNUMBER, Original_NUMOBJECTS, Original_TIMEFINISHED);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class STUDYACCESSTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public STUDYACCESSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "STUDYACCESS";
            tableMapping.ColumnMappings.Add("STUDYINSTANCEUID", "STUDYINSTANCEUID");
            tableMapping.ColumnMappings.Add("ACCESSTIME", "ACCESSTIME");
            tableMapping.ColumnMappings.Add("USERNAME", "USERNAME");
            tableMapping.ColumnMappings.Add("ACCESSTYPE", "ACCESSTYPE");
            tableMapping.ColumnMappings.Add("STATUSORDER", "STATUSORDER");
            tableMapping.ColumnMappings.Add("STUDYDATETIME", "STUDYDATETIME");
            tableMapping.ColumnMappings.Add("ACCESSIONNUMBER", "ACCESSIONNUMBER");
            tableMapping.ColumnMappings.Add("INSTITUTIONNAME", "INSTITUTIONNAME");
            tableMapping.ColumnMappings.Add("PATIENTID", "PATIENTID");
            tableMapping.ColumnMappings.Add("ISSUEROFPATIENTID", "ISSUEROFPATIENTID");
            tableMapping.ColumnMappings.Add("PATIENTFULLNAME", "PATIENTFULLNAME");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("USERID", "USERID");
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("ACCESSEDDATA", "ACCESSEDDATA");
            tableMapping.ColumnMappings.Add("MODIFIEDDATA", "MODIFIEDDATA");
            tableMapping.ColumnMappings.Add("IPADDRESS", "IPADDRESS");
            tableMapping.ColumnMappings.Add("AUTHTAG", "AUTHTAG");
            tableMapping.ColumnMappings.Add("ORDERDATETIME", "ORDERDATETIME");
            tableMapping.ColumnMappings.Add("ACCESSTIMEUTC", "ACCESSTIMEUTC");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"STUDYACCESS\" WHERE ((\"STUDYINSTANCEUID\" = @Original_STUDYINSTANCEUID" +
                ") AND (\"ACCESSTIME\" = @Original_ACCESSTIME) AND (\"USERNAME\" = @Original_USERNAME" +
                ") AND (\"ACCESSTYPE\" = @Original_ACCESSTYPE) AND (\"STATUSORDER\" = @Original_STATU" +
                "SORDER) AND ((@IsNull_STUDYDATETIME = 1 AND \"STUDYDATETIME\" IS NULL) OR (\"STUDYD" +
                "ATETIME\" = @Original_STUDYDATETIME)) AND ((@IsNull_ACCESSIONNUMBER = 1 AND \"ACCE" +
                "SSIONNUMBER\" IS NULL) OR (\"ACCESSIONNUMBER\" = @Original_ACCESSIONNUMBER)) AND ((" +
                "@IsNull_INSTITUTIONNAME = 1 AND \"INSTITUTIONNAME\" IS NULL) OR (\"INSTITUTIONNAME\"" +
                " = @Original_INSTITUTIONNAME)) AND ((@IsNull_PATIENTID = 1 AND \"PATIENTID\" IS NU" +
                "LL) OR (\"PATIENTID\" = @Original_PATIENTID)) AND ((@IsNull_ISSUEROFPATIENTID = 1 " +
                "AND \"ISSUEROFPATIENTID\" IS NULL) OR (\"ISSUEROFPATIENTID\" = @Original_ISSUEROFPAT" +
                "IENTID)) AND ((@IsNull_PATIENTFULLNAME = 1 AND \"PATIENTFULLNAME\" IS NULL) OR (\"P" +
                "ATIENTFULLNAME\" = @Original_PATIENTFULLNAME)) AND ((@IsNull_STATUS = 1 AND \"STAT" +
                "US\" IS NULL) OR (\"STATUS\" = @Original_STATUS)) AND ((@IsNull_USERID = 1 AND \"USE" +
                "RID\" IS NULL) OR (\"USERID\" = @Original_USERID)) AND (\"ENTRYID\" = @Original_ENTRY" +
                "ID) AND ((@IsNull_ACCESSEDDATA = 1 AND \"ACCESSEDDATA\" IS NULL) OR (\"ACCESSEDDATA" +
                "\" = @Original_ACCESSEDDATA)) AND ((@IsNull_IPADDRESS = 1 AND \"IPADDRESS\" IS NULL" +
                ") OR (\"IPADDRESS\" = @Original_IPADDRESS)) AND ((@IsNull_AUTHTAG = 1 AND \"AUTHTAG" +
                "\" IS NULL) OR (\"AUTHTAG\" = @Original_AUTHTAG)) AND ((@IsNull_ORDERDATETIME = 1 A" +
                "ND \"ORDERDATETIME\" IS NULL) OR (\"ORDERDATETIME\" = @Original_ORDERDATETIME)) AND " +
                "((@IsNull_ACCESSTIMEUTC = 1 AND \"ACCESSTIMEUTC\" IS NULL) OR (\"ACCESSTIMEUTC\" = @" +
                "Original_ACCESSTIMEUTC)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSTYPE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUSORDER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUSORDER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_INSTITUTIONNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTIONNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INSTITUTIONNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTIONNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ISSUEROFPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTFULLNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFULLNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTFULLNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFULLNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUS";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_USERID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "USERID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "USERID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSEDDATA";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSEDDATA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSEDDATA";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSEDDATA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_IPADDRESS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "IPADDRESS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_IPADDRESS";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "IPADDRESS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_AUTHTAG";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 128;
            param.IsNullable = true;
            param.SourceColumn = "AUTHTAG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_AUTHTAG";
            param.Size = 128;
            param.IsNullable = true;
            param.SourceColumn = "AUTHTAG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ORDERDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ORDERDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ORDERDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ORDERDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSTIMEUTC";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIMEUTC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSTIMEUTC";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIMEUTC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""STUDYACCESS"" (""STUDYINSTANCEUID"", ""ACCESSTIME"", ""USERNAME"", ""ACCESSTYPE"", ""STATUSORDER"", ""STUDYDATETIME"", ""ACCESSIONNUMBER"", ""INSTITUTIONNAME"", ""PATIENTID"", ""ISSUEROFPATIENTID"", ""PATIENTFULLNAME"", ""STATUS"", ""USERID"", ""ENTRYID"", ""ACCESSEDDATA"", ""MODIFIEDDATA"", ""IPADDRESS"", ""AUTHTAG"", ""ORDERDATETIME"", ""ACCESSTIMEUTC"") VALUES (@STUDYINSTANCEUID, @ACCESSTIME, @USERNAME, @ACCESSTYPE, @STATUSORDER, @STUDYDATETIME, @ACCESSIONNUMBER, @INSTITUTIONNAME, @PATIENTID, @ISSUEROFPATIENTID, @PATIENTFULLNAME, @STATUS, @USERID, @ENTRYID, @ACCESSEDDATA, @MODIFIEDDATA, @IPADDRESS, @AUTHTAG, @ORDERDATETIME, @ACCESSTIMEUTC)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSTYPE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUSORDER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUSORDER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INSTITUTIONNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTIONNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTFULLNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFULLNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUS";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "USERID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSEDDATA";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSEDDATA";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MODIFIEDDATA";
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "MODIFIEDDATA";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IPADDRESS";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "IPADDRESS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@AUTHTAG";
            param.Size = 128;
            param.IsNullable = true;
            param.SourceColumn = "AUTHTAG";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ORDERDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ORDERDATETIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSTIMEUTC";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIMEUTC";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"STUDYACCESS\" SET \"STUDYINSTANCEUID\" = @STUDYINSTANCEUID, \"ACCESSTIME\" = @" +
                "ACCESSTIME, \"USERNAME\" = @USERNAME, \"ACCESSTYPE\" = @ACCESSTYPE, \"STATUSORDER\" = " +
                "@STATUSORDER, \"STUDYDATETIME\" = @STUDYDATETIME, \"ACCESSIONNUMBER\" = @ACCESSIONNU" +
                "MBER, \"INSTITUTIONNAME\" = @INSTITUTIONNAME, \"PATIENTID\" = @PATIENTID, \"ISSUEROFP" +
                "ATIENTID\" = @ISSUEROFPATIENTID, \"PATIENTFULLNAME\" = @PATIENTFULLNAME, \"STATUS\" =" +
                " @STATUS, \"USERID\" = @USERID, \"ENTRYID\" = @ENTRYID, \"ACCESSEDDATA\" = @ACCESSEDDA" +
                "TA, \"MODIFIEDDATA\" = @MODIFIEDDATA, \"IPADDRESS\" = @IPADDRESS, \"AUTHTAG\" = @AUTHT" +
                "AG, \"ORDERDATETIME\" = @ORDERDATETIME, \"ACCESSTIMEUTC\" = @ACCESSTIMEUTC WHERE ((\"" +
                "STUDYINSTANCEUID\" = @Original_STUDYINSTANCEUID) AND (\"ACCESSTIME\" = @Original_AC" +
                "CESSTIME) AND (\"USERNAME\" = @Original_USERNAME) AND (\"ACCESSTYPE\" = @Original_AC" +
                "CESSTYPE) AND (\"STATUSORDER\" = @Original_STATUSORDER) AND ((@IsNull_STUDYDATETIM" +
                "E = 1 AND \"STUDYDATETIME\" IS NULL) OR (\"STUDYDATETIME\" = @Original_STUDYDATETIME" +
                ")) AND ((@IsNull_ACCESSIONNUMBER = 1 AND \"ACCESSIONNUMBER\" IS NULL) OR (\"ACCESSI" +
                "ONNUMBER\" = @Original_ACCESSIONNUMBER)) AND ((@IsNull_INSTITUTIONNAME = 1 AND \"I" +
                "NSTITUTIONNAME\" IS NULL) OR (\"INSTITUTIONNAME\" = @Original_INSTITUTIONNAME)) AND" +
                " ((@IsNull_PATIENTID = 1 AND \"PATIENTID\" IS NULL) OR (\"PATIENTID\" = @Original_PA" +
                "TIENTID)) AND ((@IsNull_ISSUEROFPATIENTID = 1 AND \"ISSUEROFPATIENTID\" IS NULL) O" +
                "R (\"ISSUEROFPATIENTID\" = @Original_ISSUEROFPATIENTID)) AND ((@IsNull_PATIENTFULL" +
                "NAME = 1 AND \"PATIENTFULLNAME\" IS NULL) OR (\"PATIENTFULLNAME\" = @Original_PATIEN" +
                "TFULLNAME)) AND ((@IsNull_STATUS = 1 AND \"STATUS\" IS NULL) OR (\"STATUS\" = @Origi" +
                "nal_STATUS)) AND ((@IsNull_USERID = 1 AND \"USERID\" IS NULL) OR (\"USERID\" = @Orig" +
                "inal_USERID)) AND (\"ENTRYID\" = @Original_ENTRYID) AND ((@IsNull_ACCESSEDDATA = 1" +
                " AND \"ACCESSEDDATA\" IS NULL) OR (\"ACCESSEDDATA\" = @Original_ACCESSEDDATA)) AND (" +
                "(@IsNull_IPADDRESS = 1 AND \"IPADDRESS\" IS NULL) OR (\"IPADDRESS\" = @Original_IPAD" +
                "DRESS)) AND ((@IsNull_AUTHTAG = 1 AND \"AUTHTAG\" IS NULL) OR (\"AUTHTAG\" = @Origin" +
                "al_AUTHTAG)) AND ((@IsNull_ORDERDATETIME = 1 AND \"ORDERDATETIME\" IS NULL) OR (\"O" +
                "RDERDATETIME\" = @Original_ORDERDATETIME)) AND ((@IsNull_ACCESSTIMEUTC = 1 AND \"A" +
                "CCESSTIMEUTC\" IS NULL) OR (\"ACCESSTIMEUTC\" = @Original_ACCESSTIMEUTC)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSTYPE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUSORDER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUSORDER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INSTITUTIONNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTIONNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTFULLNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFULLNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STATUS";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "USERID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSEDDATA";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSEDDATA";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@MODIFIEDDATA";
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "MODIFIEDDATA";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IPADDRESS";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "IPADDRESS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@AUTHTAG";
            param.Size = 128;
            param.IsNullable = true;
            param.SourceColumn = "AUTHTAG";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ORDERDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ORDERDATETIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSTIMEUTC";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIMEUTC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSTIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSTYPE";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUSORDER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "STATUSORDER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STUDYDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "STUDYDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSIONNUMBER";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_INSTITUTIONNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTIONNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INSTITUTIONNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "INSTITUTIONNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ISSUEROFPATIENTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_PATIENTFULLNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFULLNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTFULLNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTFULLNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_STATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STATUS";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_USERID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "USERID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "USERID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSEDDATA";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSEDDATA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSEDDATA";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSEDDATA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_IPADDRESS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "IPADDRESS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_IPADDRESS";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "IPADDRESS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_AUTHTAG";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 128;
            param.IsNullable = true;
            param.SourceColumn = "AUTHTAG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_AUTHTAG";
            param.Size = 128;
            param.IsNullable = true;
            param.SourceColumn = "AUTHTAG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ORDERDATETIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ORDERDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ORDERDATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ORDERDATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@IsNull_ACCESSTIMEUTC";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIMEUTC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSTIMEUTC";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIMEUTC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[2];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ""STUDYINSTANCEUID"", ""ACCESSTIME"", ""USERNAME"", ""ACCESSTYPE"", ""STATUSORDER"", ""STUDYDATETIME"", ""ACCESSIONNUMBER"", ""INSTITUTIONNAME"", ""PATIENTID"", ""ISSUEROFPATIENTID"", ""PATIENTFULLNAME"", ""STATUS"", ""USERID"", ""ENTRYID"", ""ACCESSEDDATA"", ""MODIFIEDDATA"", ""IPADDRESS"", ""AUTHTAG"", ""ORDERDATETIME"", ""ACCESSTIMEUTC"" FROM ""STUDYACCESS""";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT ""STUDYINSTANCEUID"", ""ACCESSTIME"", ""USERNAME"", ""ACCESSTYPE"", ""STATUSORDER"", ""STUDYDATETIME"", ""ACCESSIONNUMBER"", ""INSTITUTIONNAME"", ""PATIENTID"", ""ISSUEROFPATIENTID"", ""PATIENTFULLNAME"", ""STATUS"", ""USERID"", ""ENTRYID"", ""ACCESSEDDATA"", ""MODIFIEDDATA"", ""IPADDRESS"", ""AUTHTAG"", ""ORDERDATETIME"", ""ACCESSTIMEUTC"" FROM ""STUDYACCESS""
WHERE ""ACCESSTIME"" > @AccessTimeStart 
AND   ""ACCESSTIME"" < @AccessTimeEnd";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@AccessTimeStart";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIME";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@AccessTimeEnd";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSTIME";
            this._commandCollection[1].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.STUDYACCESSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.STUDYACCESSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.STUDYACCESSDataTable dataTable = new LoggingAndConfig.STUDYACCESSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(LoggingAndConfig.STUDYACCESSDataTable dataTable, System.DateTime AccessTimeStart, System.DateTime AccessTimeEnd) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(AccessTimeStart));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(AccessTimeEnd));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LoggingAndConfig.STUDYACCESSDataTable GetDataByAccessTimeRange(System.DateTime AccessTimeStart, System.DateTime AccessTimeEnd) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(AccessTimeStart));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(AccessTimeEnd));
            LoggingAndConfig.STUDYACCESSDataTable dataTable = new LoggingAndConfig.STUDYACCESSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.STUDYACCESSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "STUDYACCESS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_STUDYINSTANCEUID, 
                    System.DateTime Original_ACCESSTIME, 
                    string Original_USERNAME, 
                    string Original_ACCESSTYPE, 
                    int Original_STATUSORDER, 
                    global::System.Nullable<global::System.DateTime> Original_STUDYDATETIME, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_INSTITUTIONNAME, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_PATIENTFULLNAME, 
                    string Original_STATUS, 
                    global::System.Nullable<int> Original_USERID, 
                    int Original_ENTRYID, 
                    string Original_ACCESSEDDATA, 
                    string Original_IPADDRESS, 
                    string Original_AUTHTAG, 
                    global::System.Nullable<global::System.DateTime> Original_ORDERDATETIME, 
                    global::System.Nullable<global::System.DateTime> Original_ACCESSTIMEUTC) {
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_ACCESSTIME));
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_USERNAME));
            }
            if ((Original_ACCESSTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSTYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ACCESSTYPE));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_STATUSORDER));
            if ((Original_STUDYDATETIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_STUDYDATETIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_INSTITUTIONNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_INSTITUTIONNAME));
            }
            if ((Original_PATIENTID == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_PATIENTFULLNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_PATIENTFULLNAME));
            }
            if ((Original_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_STATUS));
            }
            if ((Original_USERID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_USERID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_ENTRYID));
            if ((Original_ACCESSEDDATA == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_ACCESSEDDATA));
            }
            if ((Original_IPADDRESS == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_IPADDRESS));
            }
            if ((Original_AUTHTAG == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_AUTHTAG));
            }
            if ((Original_ORDERDATETIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_ORDERDATETIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_ACCESSTIMEUTC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((System.DateTime)(Original_ACCESSTIMEUTC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string STUDYINSTANCEUID, 
                    System.DateTime ACCESSTIME, 
                    string USERNAME, 
                    string ACCESSTYPE, 
                    int STATUSORDER, 
                    global::System.Nullable<global::System.DateTime> STUDYDATETIME, 
                    string ACCESSIONNUMBER, 
                    string INSTITUTIONNAME, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string PATIENTFULLNAME, 
                    string STATUS, 
                    global::System.Nullable<int> USERID, 
                    int ENTRYID, 
                    string ACCESSEDDATA, 
                    string MODIFIEDDATA, 
                    string IPADDRESS, 
                    string AUTHTAG, 
                    global::System.Nullable<global::System.DateTime> ORDERDATETIME, 
                    global::System.Nullable<global::System.DateTime> ACCESSTIMEUTC) {
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(STUDYINSTANCEUID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(ACCESSTIME));
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(USERNAME));
            }
            if ((ACCESSTYPE == null)) {
                throw new global::System.ArgumentNullException("ACCESSTYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ACCESSTYPE));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(STATUSORDER));
            if ((STUDYDATETIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(STUDYDATETIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((INSTITUTIONNAME == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(INSTITUTIONNAME));
            }
            if ((PATIENTID == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((PATIENTFULLNAME == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(PATIENTFULLNAME));
            }
            if ((STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(STATUS));
            }
            if ((USERID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(ENTRYID));
            if ((ACCESSEDDATA == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ACCESSEDDATA));
            }
            if ((MODIFIEDDATA == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(MODIFIEDDATA));
            }
            if ((IPADDRESS == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(IPADDRESS));
            }
            if ((AUTHTAG == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(AUTHTAG));
            }
            if ((ORDERDATETIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(ORDERDATETIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ACCESSTIMEUTC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(ACCESSTIMEUTC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string STUDYINSTANCEUID, 
                    System.DateTime ACCESSTIME, 
                    string USERNAME, 
                    string ACCESSTYPE, 
                    int STATUSORDER, 
                    global::System.Nullable<global::System.DateTime> STUDYDATETIME, 
                    string ACCESSIONNUMBER, 
                    string INSTITUTIONNAME, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string PATIENTFULLNAME, 
                    string STATUS, 
                    global::System.Nullable<int> USERID, 
                    int ENTRYID, 
                    string ACCESSEDDATA, 
                    string MODIFIEDDATA, 
                    string IPADDRESS, 
                    string AUTHTAG, 
                    global::System.Nullable<global::System.DateTime> ORDERDATETIME, 
                    global::System.Nullable<global::System.DateTime> ACCESSTIMEUTC, 
                    string Original_STUDYINSTANCEUID, 
                    System.DateTime Original_ACCESSTIME, 
                    string Original_USERNAME, 
                    string Original_ACCESSTYPE, 
                    int Original_STATUSORDER, 
                    global::System.Nullable<global::System.DateTime> Original_STUDYDATETIME, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_INSTITUTIONNAME, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_PATIENTFULLNAME, 
                    string Original_STATUS, 
                    global::System.Nullable<int> Original_USERID, 
                    int Original_ENTRYID, 
                    string Original_ACCESSEDDATA, 
                    string Original_IPADDRESS, 
                    string Original_AUTHTAG, 
                    global::System.Nullable<global::System.DateTime> Original_ORDERDATETIME, 
                    global::System.Nullable<global::System.DateTime> Original_ACCESSTIMEUTC) {
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(STUDYINSTANCEUID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(ACCESSTIME));
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(USERNAME));
            }
            if ((ACCESSTYPE == null)) {
                throw new global::System.ArgumentNullException("ACCESSTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ACCESSTYPE));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(STATUSORDER));
            if ((STUDYDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(STUDYDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((INSTITUTIONNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(INSTITUTIONNAME));
            }
            if ((PATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(PATIENTID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((PATIENTFULLNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(PATIENTFULLNAME));
            }
            if ((STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(STATUS));
            }
            if ((USERID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ENTRYID));
            if ((ACCESSEDDATA == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ACCESSEDDATA));
            }
            if ((MODIFIEDDATA == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(MODIFIEDDATA));
            }
            if ((IPADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(IPADDRESS));
            }
            if ((AUTHTAG == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(AUTHTAG));
            }
            if ((ORDERDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(ORDERDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ACCESSTIMEUTC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(ACCESSTIMEUTC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_ACCESSTIME));
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_USERNAME));
            }
            if ((Original_ACCESSTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_ACCESSTYPE));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_STATUSORDER));
            if ((Original_STUDYDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_STUDYDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_INSTITUTIONNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_INSTITUTIONNAME));
            }
            if ((Original_PATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_PATIENTFULLNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_PATIENTFULLNAME));
            }
            if ((Original_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_STATUS));
            }
            if ((Original_USERID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_USERID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_ENTRYID));
            if ((Original_ACCESSEDDATA == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_ACCESSEDDATA));
            }
            if ((Original_IPADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_IPADDRESS));
            }
            if ((Original_AUTHTAG == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_AUTHTAG));
            }
            if ((Original_ORDERDATETIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(Original_ORDERDATETIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_ACCESSTIMEUTC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(Original_ACCESSTIMEUTC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string STUDYINSTANCEUID, 
                    System.DateTime ACCESSTIME, 
                    string USERNAME, 
                    string ACCESSTYPE, 
                    int STATUSORDER, 
                    global::System.Nullable<global::System.DateTime> STUDYDATETIME, 
                    string ACCESSIONNUMBER, 
                    string INSTITUTIONNAME, 
                    string PATIENTID, 
                    string ISSUEROFPATIENTID, 
                    string PATIENTFULLNAME, 
                    string STATUS, 
                    global::System.Nullable<int> USERID, 
                    string ACCESSEDDATA, 
                    string MODIFIEDDATA, 
                    string IPADDRESS, 
                    string AUTHTAG, 
                    global::System.Nullable<global::System.DateTime> ORDERDATETIME, 
                    global::System.Nullable<global::System.DateTime> ACCESSTIMEUTC, 
                    string Original_STUDYINSTANCEUID, 
                    System.DateTime Original_ACCESSTIME, 
                    string Original_USERNAME, 
                    string Original_ACCESSTYPE, 
                    int Original_STATUSORDER, 
                    global::System.Nullable<global::System.DateTime> Original_STUDYDATETIME, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_INSTITUTIONNAME, 
                    string Original_PATIENTID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_PATIENTFULLNAME, 
                    string Original_STATUS, 
                    global::System.Nullable<int> Original_USERID, 
                    int Original_ENTRYID, 
                    string Original_ACCESSEDDATA, 
                    string Original_IPADDRESS, 
                    string Original_AUTHTAG, 
                    global::System.Nullable<global::System.DateTime> Original_ORDERDATETIME, 
                    global::System.Nullable<global::System.DateTime> Original_ACCESSTIMEUTC) {
            return this.Update(STUDYINSTANCEUID, ACCESSTIME, USERNAME, ACCESSTYPE, STATUSORDER, STUDYDATETIME, ACCESSIONNUMBER, INSTITUTIONNAME, PATIENTID, ISSUEROFPATIENTID, PATIENTFULLNAME, STATUS, USERID, Original_ENTRYID, ACCESSEDDATA, MODIFIEDDATA, IPADDRESS, AUTHTAG, ORDERDATETIME, ACCESSTIMEUTC, Original_STUDYINSTANCEUID, Original_ACCESSTIME, Original_USERNAME, Original_ACCESSTYPE, Original_STATUSORDER, Original_STUDYDATETIME, Original_ACCESSIONNUMBER, Original_INSTITUTIONNAME, Original_PATIENTID, Original_ISSUEROFPATIENTID, Original_PATIENTFULLNAME, Original_STATUS, Original_USERID, Original_ENTRYID, Original_ACCESSEDDATA, Original_IPADDRESS, Original_AUTHTAG, Original_ORDERDATETIME, Original_ACCESSTIMEUTC);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SYSTEMLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SYSTEMLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SYSTEMLOG";
            tableMapping.ColumnMappings.Add("INTERNALSYSTEMLOGID", "INTERNALSYSTEMLOGID");
            tableMapping.ColumnMappings.Add("USERNAME", "USERNAME");
            tableMapping.ColumnMappings.Add("DATETIME", "DATETIME");
            tableMapping.ColumnMappings.Add("LOGENTRY", "LOGENTRY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"SYSTEMLOG\" WHERE ((\"INTERNALSYSTEMLOGID\" = @Original_INTERNALSYSTEML" +
                "OGID) AND (\"USERNAME\" = @Original_USERNAME) AND (\"DATETIME\" = @Original_DATETIME" +
                ") AND (\"LOGENTRY\" = @Original_LOGENTRY))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTERNALSYSTEMLOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALSYSTEMLOGID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LOGENTRY";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "LOGENTRY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"SYSTEMLOG\" (\"INTERNALSYSTEMLOGID\", \"USERNAME\", \"DATETIME\", \"LOGENTRY" +
                "\") VALUES (@INTERNALSYSTEMLOGID, @USERNAME, @DATETIME, @LOGENTRY)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTERNALSYSTEMLOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALSYSTEMLOGID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DATETIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LOGENTRY";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "LOGENTRY";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""SYSTEMLOG"" SET ""INTERNALSYSTEMLOGID"" = @INTERNALSYSTEMLOGID, ""USERNAME"" = @USERNAME, ""DATETIME"" = @DATETIME, ""LOGENTRY"" = @LOGENTRY WHERE ((""INTERNALSYSTEMLOGID"" = @Original_INTERNALSYSTEMLOGID) AND (""USERNAME"" = @Original_USERNAME) AND (""DATETIME"" = @Original_DATETIME) AND (""LOGENTRY"" = @Original_LOGENTRY))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@INTERNALSYSTEMLOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALSYSTEMLOGID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@DATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DATETIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@LOGENTRY";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "LOGENTRY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_INTERNALSYSTEMLOGID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "INTERNALSYSTEMLOGID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_DATETIME";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DATETIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_LOGENTRY";
            param.Size = 256;
            param.IsNullable = true;
            param.SourceColumn = "LOGENTRY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"INTERNALSYSTEMLOGID\", \"USERNAME\", \"DATETIME\", \"LOGENTRY\" FROM \"SYSTEMLOG\"" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.SYSTEMLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.SYSTEMLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.SYSTEMLOGDataTable dataTable = new LoggingAndConfig.SYSTEMLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.SYSTEMLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "SYSTEMLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_INTERNALSYSTEMLOGID, string Original_USERNAME, System.DateTime Original_DATETIME, string Original_LOGENTRY) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_INTERNALSYSTEMLOGID));
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_USERNAME));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_DATETIME));
            if ((Original_LOGENTRY == null)) {
                throw new global::System.ArgumentNullException("Original_LOGENTRY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_LOGENTRY));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int INTERNALSYSTEMLOGID, string USERNAME, System.DateTime DATETIME, string LOGENTRY) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(INTERNALSYSTEMLOGID));
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USERNAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DATETIME));
            if ((LOGENTRY == null)) {
                throw new global::System.ArgumentNullException("LOGENTRY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(LOGENTRY));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int INTERNALSYSTEMLOGID, string USERNAME, System.DateTime DATETIME, string LOGENTRY, int Original_INTERNALSYSTEMLOGID, string Original_USERNAME, System.DateTime Original_DATETIME, string Original_LOGENTRY) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(INTERNALSYSTEMLOGID));
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(USERNAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DATETIME));
            if ((LOGENTRY == null)) {
                throw new global::System.ArgumentNullException("LOGENTRY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(LOGENTRY));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_INTERNALSYSTEMLOGID));
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_USERNAME));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_DATETIME));
            if ((Original_LOGENTRY == null)) {
                throw new global::System.ArgumentNullException("Original_LOGENTRY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_LOGENTRY));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string USERNAME, System.DateTime DATETIME, string LOGENTRY, int Original_INTERNALSYSTEMLOGID, string Original_USERNAME, System.DateTime Original_DATETIME, string Original_LOGENTRY) {
            return this.Update(Original_INTERNALSYSTEMLOGID, USERNAME, DATETIME, LOGENTRY, Original_INTERNALSYSTEMLOGID, Original_USERNAME, Original_DATETIME, Original_LOGENTRY);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TRANSMITLOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::FirebirdSql.Data.FirebirdClient.FbDataAdapter _adapter;
        
        private global::FirebirdSql.Data.FirebirdClient.FbConnection _connection;
        
        private global::FirebirdSql.Data.FirebirdClient.FbTransaction _transaction;
        
        private global::FirebirdSql.Data.FirebirdClient.FbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TRANSMITLOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::FirebirdSql.Data.FirebirdClient.FbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::FirebirdSql.Data.FirebirdClient.FbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::FirebirdSql.Data.FirebirdClient.FbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::FirebirdSql.Data.FirebirdClient.FbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::FirebirdSql.Data.FirebirdClient.FbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TRANSMITLOG";
            tableMapping.ColumnMappings.Add("ENTRYID", "ENTRYID");
            tableMapping.ColumnMappings.Add("TIMESTARTED", "TIMESTARTED");
            tableMapping.ColumnMappings.Add("TIMEFINISHED", "TIMEFINISHED");
            tableMapping.ColumnMappings.Add("SOPINSTANCEUID", "SOPINSTANCEUID");
            tableMapping.ColumnMappings.Add("ISSUEROFPATIENTID", "ISSUEROFPATIENTID");
            tableMapping.ColumnMappings.Add("PATIENTID", "PATIENTID");
            tableMapping.ColumnMappings.Add("STUDYINSTANCEUID", "STUDYINSTANCEUID");
            tableMapping.ColumnMappings.Add("ACCESSIONNUMBER", "ACCESSIONNUMBER");
            tableMapping.ColumnMappings.Add("USERNAME", "USERNAME");
            tableMapping.ColumnMappings.Add("SERVICENAME", "SERVICENAME");
            tableMapping.ColumnMappings.Add("NUMOBJECTS", "NUMOBJECTS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""TRANSMITLOG"" WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""TIMESTARTED"" = @Original_TIMESTARTED) AND (""TIMEFINISHED"" = @Original_TIMEFINISHED) AND (""SOPINSTANCEUID"" = @Original_SOPINSTANCEUID) AND (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID) AND (""PATIENTID"" = @Original_PATIENTID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER) AND (""USERNAME"" = @Original_USERNAME) AND (""SERVICENAME"" = @Original_SERVICENAME) AND (""NUMOBJECTS"" = @Original_NUMOBJECTS))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::FirebirdSql.Data.FirebirdClient.FbParameter param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SOPINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""TRANSMITLOG"" (""ENTRYID"", ""TIMESTARTED"", ""TIMEFINISHED"", ""SOPINSTANCEUID"", ""ISSUEROFPATIENTID"", ""PATIENTID"", ""STUDYINSTANCEUID"", ""ACCESSIONNUMBER"", ""USERNAME"", ""SERVICENAME"", ""NUMOBJECTS"") VALUES (@ENTRYID, @TIMESTARTED, @TIMEFINISHED, @SOPINSTANCEUID, @ISSUEROFPATIENTID, @PATIENTID, @STUDYINSTANCEUID, @ACCESSIONNUMBER, @USERNAME, @SERVICENAME, @NUMOBJECTS)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SOPINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""TRANSMITLOG"" SET ""ENTRYID"" = @ENTRYID, ""TIMESTARTED"" = @TIMESTARTED, ""TIMEFINISHED"" = @TIMEFINISHED, ""SOPINSTANCEUID"" = @SOPINSTANCEUID, ""ISSUEROFPATIENTID"" = @ISSUEROFPATIENTID, ""PATIENTID"" = @PATIENTID, ""STUDYINSTANCEUID"" = @STUDYINSTANCEUID, ""ACCESSIONNUMBER"" = @ACCESSIONNUMBER, ""USERNAME"" = @USERNAME, ""SERVICENAME"" = @SERVICENAME, ""NUMOBJECTS"" = @NUMOBJECTS WHERE ((""ENTRYID"" = @Original_ENTRYID) AND (""TIMESTARTED"" = @Original_TIMESTARTED) AND (""TIMEFINISHED"" = @Original_TIMEFINISHED) AND (""SOPINSTANCEUID"" = @Original_SOPINSTANCEUID) AND (""ISSUEROFPATIENTID"" = @Original_ISSUEROFPATIENTID) AND (""PATIENTID"" = @Original_PATIENTID) AND (""STUDYINSTANCEUID"" = @Original_STUDYINSTANCEUID) AND (""ACCESSIONNUMBER"" = @Original_ACCESSIONNUMBER) AND (""USERNAME"" = @Original_USERNAME) AND (""SERVICENAME"" = @Original_SERVICENAME) AND (""NUMOBJECTS"" = @Original_NUMOBJECTS))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SOPINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ENTRYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "ENTRYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMESTARTED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMESTARTED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_TIMEFINISHED";
            param.DbType = global::System.Data.DbType.DateTime;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "TIMEFINISHED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SOPINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SOPINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ISSUEROFPATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "ISSUEROFPATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_PATIENTID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "PATIENTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_STUDYINSTANCEUID";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "STUDYINSTANCEUID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_ACCESSIONNUMBER";
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "ACCESSIONNUMBER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_USERNAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "USERNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_SERVICENAME";
            param.Size = 64;
            param.IsNullable = true;
            param.SourceColumn = "SERVICENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::FirebirdSql.Data.FirebirdClient.FbParameter();
            param.ParameterName = "@Original_NUMOBJECTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "NUMOBJECTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::FirebirdSql.Data.FirebirdClient.FbConnection();
            this._connection.ConnectionString = global::FirebirdTest1.Properties.Settings.Default.pacsdb;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::FirebirdSql.Data.FirebirdClient.FbCommand[1];
            this._commandCollection[0] = new global::FirebirdSql.Data.FirebirdClient.FbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"ENTRYID\", \"TIMESTARTED\", \"TIMEFINISHED\", \"SOPINSTANCEUID\", \"ISSUEROFPATIE" +
                "NTID\", \"PATIENTID\", \"STUDYINSTANCEUID\", \"ACCESSIONNUMBER\", \"USERNAME\", \"SERVICEN" +
                "AME\", \"NUMOBJECTS\" FROM \"TRANSMITLOG\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoggingAndConfig.TRANSMITLOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoggingAndConfig.TRANSMITLOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoggingAndConfig.TRANSMITLOGDataTable dataTable = new LoggingAndConfig.TRANSMITLOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig.TRANSMITLOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoggingAndConfig dataSet) {
            return this.Adapter.Update(dataSet, "TRANSMITLOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ENTRYID, System.DateTime Original_TIMESTARTED, System.DateTime Original_TIMEFINISHED, string Original_SOPINSTANCEUID, string Original_ISSUEROFPATIENTID, string Original_PATIENTID, string Original_STUDYINSTANCEUID, string Original_ACCESSIONNUMBER, string Original_USERNAME, string Original_SERVICENAME, int Original_NUMOBJECTS) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ENTRYID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_TIMESTARTED));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_TIMEFINISHED));
            if ((Original_SOPINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_SOPINSTANCEUID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_SOPINSTANCEUID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_PATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_PATIENTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSIONNUMBER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_USERNAME));
            }
            if ((Original_SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SERVICENAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_SERVICENAME));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_NUMOBJECTS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ENTRYID, System.DateTime TIMESTARTED, System.DateTime TIMEFINISHED, string SOPINSTANCEUID, string ISSUEROFPATIENTID, string PATIENTID, string STUDYINSTANCEUID, string ACCESSIONNUMBER, string USERNAME, string SERVICENAME, int NUMOBJECTS) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(TIMESTARTED));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(TIMEFINISHED));
            if ((SOPINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("SOPINSTANCEUID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SOPINSTANCEUID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((PATIENTID == null)) {
                throw new global::System.ArgumentNullException("PATIENTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PATIENTID));
            }
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("ACCESSIONNUMBER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(USERNAME));
            }
            if ((SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("SERVICENAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SERVICENAME));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(NUMOBJECTS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ENTRYID, 
                    System.DateTime TIMESTARTED, 
                    System.DateTime TIMEFINISHED, 
                    string SOPINSTANCEUID, 
                    string ISSUEROFPATIENTID, 
                    string PATIENTID, 
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    string USERNAME, 
                    string SERVICENAME, 
                    int NUMOBJECTS, 
                    int Original_ENTRYID, 
                    System.DateTime Original_TIMESTARTED, 
                    System.DateTime Original_TIMEFINISHED, 
                    string Original_SOPINSTANCEUID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_PATIENTID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_USERNAME, 
                    string Original_SERVICENAME, 
                    int Original_NUMOBJECTS) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ENTRYID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(TIMESTARTED));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(TIMEFINISHED));
            if ((SOPINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("SOPINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SOPINSTANCEUID));
            }
            if ((ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ISSUEROFPATIENTID));
            }
            if ((PATIENTID == null)) {
                throw new global::System.ArgumentNullException("PATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PATIENTID));
            }
            if ((STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(STUDYINSTANCEUID));
            }
            if ((ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("ACCESSIONNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ACCESSIONNUMBER));
            }
            if ((USERNAME == null)) {
                throw new global::System.ArgumentNullException("USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(USERNAME));
            }
            if ((SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("SERVICENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SERVICENAME));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(NUMOBJECTS));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ENTRYID));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_TIMESTARTED));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_TIMEFINISHED));
            if ((Original_SOPINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_SOPINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_SOPINSTANCEUID));
            }
            if ((Original_ISSUEROFPATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_ISSUEROFPATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_ISSUEROFPATIENTID));
            }
            if ((Original_PATIENTID == null)) {
                throw new global::System.ArgumentNullException("Original_PATIENTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_PATIENTID));
            }
            if ((Original_STUDYINSTANCEUID == null)) {
                throw new global::System.ArgumentNullException("Original_STUDYINSTANCEUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_STUDYINSTANCEUID));
            }
            if ((Original_ACCESSIONNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_ACCESSIONNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ACCESSIONNUMBER));
            }
            if ((Original_USERNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USERNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_USERNAME));
            }
            if ((Original_SERVICENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SERVICENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_SERVICENAME));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_NUMOBJECTS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime TIMESTARTED, 
                    System.DateTime TIMEFINISHED, 
                    string SOPINSTANCEUID, 
                    string ISSUEROFPATIENTID, 
                    string PATIENTID, 
                    string STUDYINSTANCEUID, 
                    string ACCESSIONNUMBER, 
                    string USERNAME, 
                    string SERVICENAME, 
                    int NUMOBJECTS, 
                    int Original_ENTRYID, 
                    System.DateTime Original_TIMESTARTED, 
                    System.DateTime Original_TIMEFINISHED, 
                    string Original_SOPINSTANCEUID, 
                    string Original_ISSUEROFPATIENTID, 
                    string Original_PATIENTID, 
                    string Original_STUDYINSTANCEUID, 
                    string Original_ACCESSIONNUMBER, 
                    string Original_USERNAME, 
                    string Original_SERVICENAME, 
                    int Original_NUMOBJECTS) {
            return this.Update(Original_ENTRYID, TIMESTARTED, TIMEFINISHED, SOPINSTANCEUID, ISSUEROFPATIENTID, PATIENTID, STUDYINSTANCEUID, ACCESSIONNUMBER, USERNAME, SERVICENAME, NUMOBJECTS, Original_ENTRYID, Original_TIMESTARTED, Original_TIMEFINISHED, Original_SOPINSTANCEUID, Original_ISSUEROFPATIENTID, Original_PATIENTID, Original_STUDYINSTANCEUID, Original_ACCESSIONNUMBER, Original_USERNAME, Original_SERVICENAME, Original_NUMOBJECTS);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private APPOINTMENTLOGTableAdapter _aPPOINTMENTLOGTableAdapter;
        
        private ARCHIVELOGTableAdapter _aRCHIVELOGTableAdapter;
        
        private ARCHIVESTUDYLOGTableAdapter _aRCHIVESTUDYLOGTableAdapter;
        
        private AUTOQUERYRETRIEVELOGTableAdapter _aUTOQUERYRETRIEVELOGTableAdapter;
        
        private COMMUNICATIONLOGTableAdapter _cOMMUNICATIONLOGTableAdapter;
        
        private CONFIGTableAdapter _cONFIGTableAdapter;
        
        private CONFIGDISPLAYTableAdapter _cONFIGDISPLAYTableAdapter;
        
        private HEALTHVAULTSUMMARYEXPORTLOGTableAdapter _hEALTHVAULTSUMMARYEXPORTLOGTableAdapter;
        
        private MDINTOUCHLOGTableAdapter _mDINTOUCHLOGTableAdapter;
        
        private MIRTH_HL7_LOGTableAdapter _mIRTH_HL7_LOGTableAdapter;
        
        private MPPSTRANSMITLOGTableAdapter _mPPSTRANSMITLOGTableAdapter;
        
        private NETSUITEERRORLOGTableAdapter _nETSUITEERRORLOGTableAdapter;
        
        private NETSUITELOGTableAdapter _nETSUITELOGTableAdapter;
        
        private PATIENTDIRECTLOGTableAdapter _pATIENTDIRECTLOGTableAdapter;
        
        private PATIENTMERGELOGTableAdapter _pATIENTMERGELOGTableAdapter;
        
        private PRINTLOGTableAdapter _pRINTLOGTableAdapter;
        
        private PRRELEASETableAdapter _pRRELEASETableAdapter;
        
        private PRVERSIONTableAdapter _pRVERSIONTableAdapter;
        
        private RECEIVESTUDYLOGTableAdapter _rECEIVESTUDYLOGTableAdapter;
        
        private REFERRALINBOXLOGTableAdapter _rEFERRALINBOXLOGTableAdapter;
        
        private REQUESTFAILLOGTableAdapter _rEQUESTFAILLOGTableAdapter;
        
        private REQUESTLOGTableAdapter _rEQUESTLOGTableAdapter;
        
        private RETRIEVESTUDYLOGTableAdapter _rETRIEVESTUDYLOGTableAdapter;
        
        private RPTEXPORTLOGTableAdapter _rPTEXPORTLOGTableAdapter;
        
        private STORAGECOMMITLOGTableAdapter _sTORAGECOMMITLOGTableAdapter;
        
        private STUDYACCESSTableAdapter _sTUDYACCESSTableAdapter;
        
        private SYSTEMLOGTableAdapter _sYSTEMLOGTableAdapter;
        
        private TRANSMITLOGTableAdapter _tRANSMITLOGTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public APPOINTMENTLOGTableAdapter APPOINTMENTLOGTableAdapter {
            get {
                return this._aPPOINTMENTLOGTableAdapter;
            }
            set {
                this._aPPOINTMENTLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ARCHIVELOGTableAdapter ARCHIVELOGTableAdapter {
            get {
                return this._aRCHIVELOGTableAdapter;
            }
            set {
                this._aRCHIVELOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ARCHIVESTUDYLOGTableAdapter ARCHIVESTUDYLOGTableAdapter {
            get {
                return this._aRCHIVESTUDYLOGTableAdapter;
            }
            set {
                this._aRCHIVESTUDYLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public AUTOQUERYRETRIEVELOGTableAdapter AUTOQUERYRETRIEVELOGTableAdapter {
            get {
                return this._aUTOQUERYRETRIEVELOGTableAdapter;
            }
            set {
                this._aUTOQUERYRETRIEVELOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public COMMUNICATIONLOGTableAdapter COMMUNICATIONLOGTableAdapter {
            get {
                return this._cOMMUNICATIONLOGTableAdapter;
            }
            set {
                this._cOMMUNICATIONLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CONFIGTableAdapter CONFIGTableAdapter {
            get {
                return this._cONFIGTableAdapter;
            }
            set {
                this._cONFIGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CONFIGDISPLAYTableAdapter CONFIGDISPLAYTableAdapter {
            get {
                return this._cONFIGDISPLAYTableAdapter;
            }
            set {
                this._cONFIGDISPLAYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public HEALTHVAULTSUMMARYEXPORTLOGTableAdapter HEALTHVAULTSUMMARYEXPORTLOGTableAdapter {
            get {
                return this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter;
            }
            set {
                this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MDINTOUCHLOGTableAdapter MDINTOUCHLOGTableAdapter {
            get {
                return this._mDINTOUCHLOGTableAdapter;
            }
            set {
                this._mDINTOUCHLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MIRTH_HL7_LOGTableAdapter MIRTH_HL7_LOGTableAdapter {
            get {
                return this._mIRTH_HL7_LOGTableAdapter;
            }
            set {
                this._mIRTH_HL7_LOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MPPSTRANSMITLOGTableAdapter MPPSTRANSMITLOGTableAdapter {
            get {
                return this._mPPSTRANSMITLOGTableAdapter;
            }
            set {
                this._mPPSTRANSMITLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public NETSUITEERRORLOGTableAdapter NETSUITEERRORLOGTableAdapter {
            get {
                return this._nETSUITEERRORLOGTableAdapter;
            }
            set {
                this._nETSUITEERRORLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public NETSUITELOGTableAdapter NETSUITELOGTableAdapter {
            get {
                return this._nETSUITELOGTableAdapter;
            }
            set {
                this._nETSUITELOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PATIENTDIRECTLOGTableAdapter PATIENTDIRECTLOGTableAdapter {
            get {
                return this._pATIENTDIRECTLOGTableAdapter;
            }
            set {
                this._pATIENTDIRECTLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PATIENTMERGELOGTableAdapter PATIENTMERGELOGTableAdapter {
            get {
                return this._pATIENTMERGELOGTableAdapter;
            }
            set {
                this._pATIENTMERGELOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PRINTLOGTableAdapter PRINTLOGTableAdapter {
            get {
                return this._pRINTLOGTableAdapter;
            }
            set {
                this._pRINTLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PRRELEASETableAdapter PRRELEASETableAdapter {
            get {
                return this._pRRELEASETableAdapter;
            }
            set {
                this._pRRELEASETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PRVERSIONTableAdapter PRVERSIONTableAdapter {
            get {
                return this._pRVERSIONTableAdapter;
            }
            set {
                this._pRVERSIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public RECEIVESTUDYLOGTableAdapter RECEIVESTUDYLOGTableAdapter {
            get {
                return this._rECEIVESTUDYLOGTableAdapter;
            }
            set {
                this._rECEIVESTUDYLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public REFERRALINBOXLOGTableAdapter REFERRALINBOXLOGTableAdapter {
            get {
                return this._rEFERRALINBOXLOGTableAdapter;
            }
            set {
                this._rEFERRALINBOXLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public REQUESTFAILLOGTableAdapter REQUESTFAILLOGTableAdapter {
            get {
                return this._rEQUESTFAILLOGTableAdapter;
            }
            set {
                this._rEQUESTFAILLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public REQUESTLOGTableAdapter REQUESTLOGTableAdapter {
            get {
                return this._rEQUESTLOGTableAdapter;
            }
            set {
                this._rEQUESTLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public RETRIEVESTUDYLOGTableAdapter RETRIEVESTUDYLOGTableAdapter {
            get {
                return this._rETRIEVESTUDYLOGTableAdapter;
            }
            set {
                this._rETRIEVESTUDYLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public RPTEXPORTLOGTableAdapter RPTEXPORTLOGTableAdapter {
            get {
                return this._rPTEXPORTLOGTableAdapter;
            }
            set {
                this._rPTEXPORTLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public STORAGECOMMITLOGTableAdapter STORAGECOMMITLOGTableAdapter {
            get {
                return this._sTORAGECOMMITLOGTableAdapter;
            }
            set {
                this._sTORAGECOMMITLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public STUDYACCESSTableAdapter STUDYACCESSTableAdapter {
            get {
                return this._sTUDYACCESSTableAdapter;
            }
            set {
                this._sTUDYACCESSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SYSTEMLOGTableAdapter SYSTEMLOGTableAdapter {
            get {
                return this._sYSTEMLOGTableAdapter;
            }
            set {
                this._sYSTEMLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TRANSMITLOGTableAdapter TRANSMITLOGTableAdapter {
            get {
                return this._tRANSMITLOGTableAdapter;
            }
            set {
                this._tRANSMITLOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aPPOINTMENTLOGTableAdapter != null) 
                            && (this._aPPOINTMENTLOGTableAdapter.Connection != null))) {
                    return this._aPPOINTMENTLOGTableAdapter.Connection;
                }
                if (((this._aRCHIVELOGTableAdapter != null) 
                            && (this._aRCHIVELOGTableAdapter.Connection != null))) {
                    return this._aRCHIVELOGTableAdapter.Connection;
                }
                if (((this._aRCHIVESTUDYLOGTableAdapter != null) 
                            && (this._aRCHIVESTUDYLOGTableAdapter.Connection != null))) {
                    return this._aRCHIVESTUDYLOGTableAdapter.Connection;
                }
                if (((this._aUTOQUERYRETRIEVELOGTableAdapter != null) 
                            && (this._aUTOQUERYRETRIEVELOGTableAdapter.Connection != null))) {
                    return this._aUTOQUERYRETRIEVELOGTableAdapter.Connection;
                }
                if (((this._cOMMUNICATIONLOGTableAdapter != null) 
                            && (this._cOMMUNICATIONLOGTableAdapter.Connection != null))) {
                    return this._cOMMUNICATIONLOGTableAdapter.Connection;
                }
                if (((this._cONFIGTableAdapter != null) 
                            && (this._cONFIGTableAdapter.Connection != null))) {
                    return this._cONFIGTableAdapter.Connection;
                }
                if (((this._cONFIGDISPLAYTableAdapter != null) 
                            && (this._cONFIGDISPLAYTableAdapter.Connection != null))) {
                    return this._cONFIGDISPLAYTableAdapter.Connection;
                }
                if (((this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter != null) 
                            && (this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Connection != null))) {
                    return this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Connection;
                }
                if (((this._mDINTOUCHLOGTableAdapter != null) 
                            && (this._mDINTOUCHLOGTableAdapter.Connection != null))) {
                    return this._mDINTOUCHLOGTableAdapter.Connection;
                }
                if (((this._mIRTH_HL7_LOGTableAdapter != null) 
                            && (this._mIRTH_HL7_LOGTableAdapter.Connection != null))) {
                    return this._mIRTH_HL7_LOGTableAdapter.Connection;
                }
                if (((this._mPPSTRANSMITLOGTableAdapter != null) 
                            && (this._mPPSTRANSMITLOGTableAdapter.Connection != null))) {
                    return this._mPPSTRANSMITLOGTableAdapter.Connection;
                }
                if (((this._nETSUITEERRORLOGTableAdapter != null) 
                            && (this._nETSUITEERRORLOGTableAdapter.Connection != null))) {
                    return this._nETSUITEERRORLOGTableAdapter.Connection;
                }
                if (((this._nETSUITELOGTableAdapter != null) 
                            && (this._nETSUITELOGTableAdapter.Connection != null))) {
                    return this._nETSUITELOGTableAdapter.Connection;
                }
                if (((this._pATIENTDIRECTLOGTableAdapter != null) 
                            && (this._pATIENTDIRECTLOGTableAdapter.Connection != null))) {
                    return this._pATIENTDIRECTLOGTableAdapter.Connection;
                }
                if (((this._pATIENTMERGELOGTableAdapter != null) 
                            && (this._pATIENTMERGELOGTableAdapter.Connection != null))) {
                    return this._pATIENTMERGELOGTableAdapter.Connection;
                }
                if (((this._pRINTLOGTableAdapter != null) 
                            && (this._pRINTLOGTableAdapter.Connection != null))) {
                    return this._pRINTLOGTableAdapter.Connection;
                }
                if (((this._pRRELEASETableAdapter != null) 
                            && (this._pRRELEASETableAdapter.Connection != null))) {
                    return this._pRRELEASETableAdapter.Connection;
                }
                if (((this._pRVERSIONTableAdapter != null) 
                            && (this._pRVERSIONTableAdapter.Connection != null))) {
                    return this._pRVERSIONTableAdapter.Connection;
                }
                if (((this._rECEIVESTUDYLOGTableAdapter != null) 
                            && (this._rECEIVESTUDYLOGTableAdapter.Connection != null))) {
                    return this._rECEIVESTUDYLOGTableAdapter.Connection;
                }
                if (((this._rEFERRALINBOXLOGTableAdapter != null) 
                            && (this._rEFERRALINBOXLOGTableAdapter.Connection != null))) {
                    return this._rEFERRALINBOXLOGTableAdapter.Connection;
                }
                if (((this._rEQUESTFAILLOGTableAdapter != null) 
                            && (this._rEQUESTFAILLOGTableAdapter.Connection != null))) {
                    return this._rEQUESTFAILLOGTableAdapter.Connection;
                }
                if (((this._rEQUESTLOGTableAdapter != null) 
                            && (this._rEQUESTLOGTableAdapter.Connection != null))) {
                    return this._rEQUESTLOGTableAdapter.Connection;
                }
                if (((this._rETRIEVESTUDYLOGTableAdapter != null) 
                            && (this._rETRIEVESTUDYLOGTableAdapter.Connection != null))) {
                    return this._rETRIEVESTUDYLOGTableAdapter.Connection;
                }
                if (((this._rPTEXPORTLOGTableAdapter != null) 
                            && (this._rPTEXPORTLOGTableAdapter.Connection != null))) {
                    return this._rPTEXPORTLOGTableAdapter.Connection;
                }
                if (((this._sTORAGECOMMITLOGTableAdapter != null) 
                            && (this._sTORAGECOMMITLOGTableAdapter.Connection != null))) {
                    return this._sTORAGECOMMITLOGTableAdapter.Connection;
                }
                if (((this._sTUDYACCESSTableAdapter != null) 
                            && (this._sTUDYACCESSTableAdapter.Connection != null))) {
                    return this._sTUDYACCESSTableAdapter.Connection;
                }
                if (((this._sYSTEMLOGTableAdapter != null) 
                            && (this._sYSTEMLOGTableAdapter.Connection != null))) {
                    return this._sYSTEMLOGTableAdapter.Connection;
                }
                if (((this._tRANSMITLOGTableAdapter != null) 
                            && (this._tRANSMITLOGTableAdapter.Connection != null))) {
                    return this._tRANSMITLOGTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aPPOINTMENTLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._aRCHIVELOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._aRCHIVESTUDYLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._aUTOQUERYRETRIEVELOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cOMMUNICATIONLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cONFIGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cONFIGDISPLAYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mDINTOUCHLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mIRTH_HL7_LOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mPPSTRANSMITLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._nETSUITEERRORLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._nETSUITELOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pATIENTDIRECTLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pATIENTMERGELOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pRINTLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pRRELEASETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pRVERSIONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rECEIVESTUDYLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rEFERRALINBOXLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rEQUESTFAILLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rEQUESTLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rETRIEVESTUDYLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rPTEXPORTLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sTORAGECOMMITLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sTUDYACCESSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sYSTEMLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tRANSMITLOGTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(LoggingAndConfig dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aPPOINTMENTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.APPOINTMENTLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aPPOINTMENTLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sTUDYACCESSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.STUDYACCESS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sTUDYACCESSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sTORAGECOMMITLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.STORAGECOMMITLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sTORAGECOMMITLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rPTEXPORTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RPTEXPORTLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rPTEXPORTLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rETRIEVESTUDYLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RETRIEVESTUDYLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rETRIEVESTUDYLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rEQUESTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.REQUESTLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rEQUESTLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rEQUESTFAILLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.REQUESTFAILLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rEQUESTFAILLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rEFERRALINBOXLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.REFERRALINBOXLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rEFERRALINBOXLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rECEIVESTUDYLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RECEIVESTUDYLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rECEIVESTUDYLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pRVERSIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PRVERSION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pRVERSIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pRRELEASETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PRRELEASE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pRRELEASETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pRINTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PRINTLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pRINTLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pATIENTMERGELOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PATIENTMERGELOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pATIENTMERGELOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pATIENTDIRECTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PATIENTDIRECTLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pATIENTDIRECTLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._nETSUITELOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.NETSUITELOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._nETSUITELOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._nETSUITEERRORLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.NETSUITEERRORLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._nETSUITEERRORLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mPPSTRANSMITLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MPPSTRANSMITLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mPPSTRANSMITLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mIRTH_HL7_LOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MIRTH_HL7_LOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mIRTH_HL7_LOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mDINTOUCHLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MDINTOUCHLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mDINTOUCHLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HEALTHVAULTSUMMARYEXPORTLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cONFIGDISPLAYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CONFIGDISPLAY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cONFIGDISPLAYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cONFIGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CONFIG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cONFIGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cOMMUNICATIONLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.COMMUNICATIONLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cOMMUNICATIONLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aUTOQUERYRETRIEVELOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AUTOQUERYRETRIEVELOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aUTOQUERYRETRIEVELOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aRCHIVESTUDYLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ARCHIVESTUDYLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aRCHIVESTUDYLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aRCHIVELOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ARCHIVELOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aRCHIVELOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sYSTEMLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SYSTEMLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sYSTEMLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tRANSMITLOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TRANSMITLOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tRANSMITLOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(LoggingAndConfig dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aPPOINTMENTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.APPOINTMENTLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aPPOINTMENTLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sTUDYACCESSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.STUDYACCESS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sTUDYACCESSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sTORAGECOMMITLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.STORAGECOMMITLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sTORAGECOMMITLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rPTEXPORTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RPTEXPORTLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rPTEXPORTLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rETRIEVESTUDYLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RETRIEVESTUDYLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rETRIEVESTUDYLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rEQUESTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.REQUESTLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rEQUESTLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rEQUESTFAILLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.REQUESTFAILLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rEQUESTFAILLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rEFERRALINBOXLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.REFERRALINBOXLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rEFERRALINBOXLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rECEIVESTUDYLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RECEIVESTUDYLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rECEIVESTUDYLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pRVERSIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PRVERSION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pRVERSIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pRRELEASETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PRRELEASE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pRRELEASETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pRINTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PRINTLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pRINTLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pATIENTMERGELOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PATIENTMERGELOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pATIENTMERGELOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pATIENTDIRECTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PATIENTDIRECTLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pATIENTDIRECTLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._nETSUITELOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.NETSUITELOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._nETSUITELOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._nETSUITEERRORLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.NETSUITEERRORLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._nETSUITEERRORLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mPPSTRANSMITLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MPPSTRANSMITLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mPPSTRANSMITLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mIRTH_HL7_LOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MIRTH_HL7_LOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mIRTH_HL7_LOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mDINTOUCHLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MDINTOUCHLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mDINTOUCHLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HEALTHVAULTSUMMARYEXPORTLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cONFIGDISPLAYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CONFIGDISPLAY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cONFIGDISPLAYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cONFIGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CONFIG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cONFIGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cOMMUNICATIONLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.COMMUNICATIONLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cOMMUNICATIONLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aUTOQUERYRETRIEVELOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AUTOQUERYRETRIEVELOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aUTOQUERYRETRIEVELOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aRCHIVESTUDYLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ARCHIVESTUDYLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aRCHIVESTUDYLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aRCHIVELOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ARCHIVELOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aRCHIVELOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sYSTEMLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SYSTEMLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sYSTEMLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tRANSMITLOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TRANSMITLOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tRANSMITLOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(LoggingAndConfig dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tRANSMITLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TRANSMITLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tRANSMITLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sYSTEMLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SYSTEMLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sYSTEMLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aRCHIVELOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ARCHIVELOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aRCHIVELOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aRCHIVESTUDYLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ARCHIVESTUDYLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aRCHIVESTUDYLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aUTOQUERYRETRIEVELOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AUTOQUERYRETRIEVELOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aUTOQUERYRETRIEVELOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cOMMUNICATIONLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.COMMUNICATIONLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cOMMUNICATIONLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cONFIGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CONFIG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cONFIGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cONFIGDISPLAYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CONFIGDISPLAY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cONFIGDISPLAYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HEALTHVAULTSUMMARYEXPORTLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mDINTOUCHLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MDINTOUCHLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mDINTOUCHLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mIRTH_HL7_LOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MIRTH_HL7_LOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mIRTH_HL7_LOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mPPSTRANSMITLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MPPSTRANSMITLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mPPSTRANSMITLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._nETSUITEERRORLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.NETSUITEERRORLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._nETSUITEERRORLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._nETSUITELOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.NETSUITELOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._nETSUITELOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pATIENTDIRECTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PATIENTDIRECTLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pATIENTDIRECTLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pATIENTMERGELOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PATIENTMERGELOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pATIENTMERGELOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pRINTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PRINTLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pRINTLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pRRELEASETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PRRELEASE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pRRELEASETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pRVERSIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PRVERSION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pRVERSIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rECEIVESTUDYLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RECEIVESTUDYLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rECEIVESTUDYLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rEFERRALINBOXLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.REFERRALINBOXLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rEFERRALINBOXLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rEQUESTFAILLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.REQUESTFAILLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rEQUESTFAILLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rEQUESTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.REQUESTLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rEQUESTLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rETRIEVESTUDYLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RETRIEVESTUDYLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rETRIEVESTUDYLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rPTEXPORTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RPTEXPORTLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rPTEXPORTLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sTORAGECOMMITLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.STORAGECOMMITLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sTORAGECOMMITLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sTUDYACCESSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.STUDYACCESS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sTUDYACCESSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aPPOINTMENTLOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.APPOINTMENTLOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aPPOINTMENTLOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(LoggingAndConfig dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aPPOINTMENTLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aPPOINTMENTLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._aRCHIVELOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aRCHIVELOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._aRCHIVESTUDYLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aRCHIVESTUDYLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._aUTOQUERYRETRIEVELOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aUTOQUERYRETRIEVELOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cOMMUNICATIONLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cOMMUNICATIONLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cONFIGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cONFIGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cONFIGDISPLAYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cONFIGDISPLAYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mDINTOUCHLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mDINTOUCHLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mIRTH_HL7_LOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mIRTH_HL7_LOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mPPSTRANSMITLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mPPSTRANSMITLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._nETSUITEERRORLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._nETSUITEERRORLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._nETSUITELOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._nETSUITELOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pATIENTDIRECTLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pATIENTDIRECTLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pATIENTMERGELOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pATIENTMERGELOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pRINTLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pRINTLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pRRELEASETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pRRELEASETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pRVERSIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pRVERSIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rECEIVESTUDYLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rECEIVESTUDYLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rEFERRALINBOXLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rEFERRALINBOXLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rEQUESTFAILLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rEQUESTFAILLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rEQUESTLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rEQUESTLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rETRIEVESTUDYLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rETRIEVESTUDYLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rPTEXPORTLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rPTEXPORTLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sTORAGECOMMITLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sTORAGECOMMITLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sTUDYACCESSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sTUDYACCESSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sYSTEMLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sYSTEMLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tRANSMITLOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tRANSMITLOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aPPOINTMENTLOGTableAdapter != null)) {
                    revertConnections.Add(this._aPPOINTMENTLOGTableAdapter, this._aPPOINTMENTLOGTableAdapter.Connection);
                    this._aPPOINTMENTLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._aPPOINTMENTLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._aPPOINTMENTLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aPPOINTMENTLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aPPOINTMENTLOGTableAdapter.Adapter);
                    }
                }
                if ((this._aRCHIVELOGTableAdapter != null)) {
                    revertConnections.Add(this._aRCHIVELOGTableAdapter, this._aRCHIVELOGTableAdapter.Connection);
                    this._aRCHIVELOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._aRCHIVELOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._aRCHIVELOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aRCHIVELOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aRCHIVELOGTableAdapter.Adapter);
                    }
                }
                if ((this._aRCHIVESTUDYLOGTableAdapter != null)) {
                    revertConnections.Add(this._aRCHIVESTUDYLOGTableAdapter, this._aRCHIVESTUDYLOGTableAdapter.Connection);
                    this._aRCHIVESTUDYLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._aRCHIVESTUDYLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._aRCHIVESTUDYLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aRCHIVESTUDYLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aRCHIVESTUDYLOGTableAdapter.Adapter);
                    }
                }
                if ((this._aUTOQUERYRETRIEVELOGTableAdapter != null)) {
                    revertConnections.Add(this._aUTOQUERYRETRIEVELOGTableAdapter, this._aUTOQUERYRETRIEVELOGTableAdapter.Connection);
                    this._aUTOQUERYRETRIEVELOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._aUTOQUERYRETRIEVELOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._aUTOQUERYRETRIEVELOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aUTOQUERYRETRIEVELOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aUTOQUERYRETRIEVELOGTableAdapter.Adapter);
                    }
                }
                if ((this._cOMMUNICATIONLOGTableAdapter != null)) {
                    revertConnections.Add(this._cOMMUNICATIONLOGTableAdapter, this._cOMMUNICATIONLOGTableAdapter.Connection);
                    this._cOMMUNICATIONLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._cOMMUNICATIONLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._cOMMUNICATIONLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cOMMUNICATIONLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cOMMUNICATIONLOGTableAdapter.Adapter);
                    }
                }
                if ((this._cONFIGTableAdapter != null)) {
                    revertConnections.Add(this._cONFIGTableAdapter, this._cONFIGTableAdapter.Connection);
                    this._cONFIGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._cONFIGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._cONFIGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cONFIGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cONFIGTableAdapter.Adapter);
                    }
                }
                if ((this._cONFIGDISPLAYTableAdapter != null)) {
                    revertConnections.Add(this._cONFIGDISPLAYTableAdapter, this._cONFIGDISPLAYTableAdapter.Connection);
                    this._cONFIGDISPLAYTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._cONFIGDISPLAYTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._cONFIGDISPLAYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cONFIGDISPLAYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cONFIGDISPLAYTableAdapter.Adapter);
                    }
                }
                if ((this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter != null)) {
                    revertConnections.Add(this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter, this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Connection);
                    this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Adapter);
                    }
                }
                if ((this._mDINTOUCHLOGTableAdapter != null)) {
                    revertConnections.Add(this._mDINTOUCHLOGTableAdapter, this._mDINTOUCHLOGTableAdapter.Connection);
                    this._mDINTOUCHLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._mDINTOUCHLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._mDINTOUCHLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mDINTOUCHLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mDINTOUCHLOGTableAdapter.Adapter);
                    }
                }
                if ((this._mIRTH_HL7_LOGTableAdapter != null)) {
                    revertConnections.Add(this._mIRTH_HL7_LOGTableAdapter, this._mIRTH_HL7_LOGTableAdapter.Connection);
                    this._mIRTH_HL7_LOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._mIRTH_HL7_LOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._mIRTH_HL7_LOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mIRTH_HL7_LOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mIRTH_HL7_LOGTableAdapter.Adapter);
                    }
                }
                if ((this._mPPSTRANSMITLOGTableAdapter != null)) {
                    revertConnections.Add(this._mPPSTRANSMITLOGTableAdapter, this._mPPSTRANSMITLOGTableAdapter.Connection);
                    this._mPPSTRANSMITLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._mPPSTRANSMITLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._mPPSTRANSMITLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mPPSTRANSMITLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mPPSTRANSMITLOGTableAdapter.Adapter);
                    }
                }
                if ((this._nETSUITEERRORLOGTableAdapter != null)) {
                    revertConnections.Add(this._nETSUITEERRORLOGTableAdapter, this._nETSUITEERRORLOGTableAdapter.Connection);
                    this._nETSUITEERRORLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._nETSUITEERRORLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._nETSUITEERRORLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._nETSUITEERRORLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._nETSUITEERRORLOGTableAdapter.Adapter);
                    }
                }
                if ((this._nETSUITELOGTableAdapter != null)) {
                    revertConnections.Add(this._nETSUITELOGTableAdapter, this._nETSUITELOGTableAdapter.Connection);
                    this._nETSUITELOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._nETSUITELOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._nETSUITELOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._nETSUITELOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._nETSUITELOGTableAdapter.Adapter);
                    }
                }
                if ((this._pATIENTDIRECTLOGTableAdapter != null)) {
                    revertConnections.Add(this._pATIENTDIRECTLOGTableAdapter, this._pATIENTDIRECTLOGTableAdapter.Connection);
                    this._pATIENTDIRECTLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._pATIENTDIRECTLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._pATIENTDIRECTLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pATIENTDIRECTLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pATIENTDIRECTLOGTableAdapter.Adapter);
                    }
                }
                if ((this._pATIENTMERGELOGTableAdapter != null)) {
                    revertConnections.Add(this._pATIENTMERGELOGTableAdapter, this._pATIENTMERGELOGTableAdapter.Connection);
                    this._pATIENTMERGELOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._pATIENTMERGELOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._pATIENTMERGELOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pATIENTMERGELOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pATIENTMERGELOGTableAdapter.Adapter);
                    }
                }
                if ((this._pRINTLOGTableAdapter != null)) {
                    revertConnections.Add(this._pRINTLOGTableAdapter, this._pRINTLOGTableAdapter.Connection);
                    this._pRINTLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._pRINTLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._pRINTLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pRINTLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pRINTLOGTableAdapter.Adapter);
                    }
                }
                if ((this._pRRELEASETableAdapter != null)) {
                    revertConnections.Add(this._pRRELEASETableAdapter, this._pRRELEASETableAdapter.Connection);
                    this._pRRELEASETableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._pRRELEASETableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._pRRELEASETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pRRELEASETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pRRELEASETableAdapter.Adapter);
                    }
                }
                if ((this._pRVERSIONTableAdapter != null)) {
                    revertConnections.Add(this._pRVERSIONTableAdapter, this._pRVERSIONTableAdapter.Connection);
                    this._pRVERSIONTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._pRVERSIONTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._pRVERSIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pRVERSIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pRVERSIONTableAdapter.Adapter);
                    }
                }
                if ((this._rECEIVESTUDYLOGTableAdapter != null)) {
                    revertConnections.Add(this._rECEIVESTUDYLOGTableAdapter, this._rECEIVESTUDYLOGTableAdapter.Connection);
                    this._rECEIVESTUDYLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._rECEIVESTUDYLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._rECEIVESTUDYLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rECEIVESTUDYLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rECEIVESTUDYLOGTableAdapter.Adapter);
                    }
                }
                if ((this._rEFERRALINBOXLOGTableAdapter != null)) {
                    revertConnections.Add(this._rEFERRALINBOXLOGTableAdapter, this._rEFERRALINBOXLOGTableAdapter.Connection);
                    this._rEFERRALINBOXLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._rEFERRALINBOXLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._rEFERRALINBOXLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rEFERRALINBOXLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rEFERRALINBOXLOGTableAdapter.Adapter);
                    }
                }
                if ((this._rEQUESTFAILLOGTableAdapter != null)) {
                    revertConnections.Add(this._rEQUESTFAILLOGTableAdapter, this._rEQUESTFAILLOGTableAdapter.Connection);
                    this._rEQUESTFAILLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._rEQUESTFAILLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._rEQUESTFAILLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rEQUESTFAILLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rEQUESTFAILLOGTableAdapter.Adapter);
                    }
                }
                if ((this._rEQUESTLOGTableAdapter != null)) {
                    revertConnections.Add(this._rEQUESTLOGTableAdapter, this._rEQUESTLOGTableAdapter.Connection);
                    this._rEQUESTLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._rEQUESTLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._rEQUESTLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rEQUESTLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rEQUESTLOGTableAdapter.Adapter);
                    }
                }
                if ((this._rETRIEVESTUDYLOGTableAdapter != null)) {
                    revertConnections.Add(this._rETRIEVESTUDYLOGTableAdapter, this._rETRIEVESTUDYLOGTableAdapter.Connection);
                    this._rETRIEVESTUDYLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._rETRIEVESTUDYLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._rETRIEVESTUDYLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rETRIEVESTUDYLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rETRIEVESTUDYLOGTableAdapter.Adapter);
                    }
                }
                if ((this._rPTEXPORTLOGTableAdapter != null)) {
                    revertConnections.Add(this._rPTEXPORTLOGTableAdapter, this._rPTEXPORTLOGTableAdapter.Connection);
                    this._rPTEXPORTLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._rPTEXPORTLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._rPTEXPORTLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rPTEXPORTLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rPTEXPORTLOGTableAdapter.Adapter);
                    }
                }
                if ((this._sTORAGECOMMITLOGTableAdapter != null)) {
                    revertConnections.Add(this._sTORAGECOMMITLOGTableAdapter, this._sTORAGECOMMITLOGTableAdapter.Connection);
                    this._sTORAGECOMMITLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._sTORAGECOMMITLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._sTORAGECOMMITLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sTORAGECOMMITLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sTORAGECOMMITLOGTableAdapter.Adapter);
                    }
                }
                if ((this._sTUDYACCESSTableAdapter != null)) {
                    revertConnections.Add(this._sTUDYACCESSTableAdapter, this._sTUDYACCESSTableAdapter.Connection);
                    this._sTUDYACCESSTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._sTUDYACCESSTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._sTUDYACCESSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sTUDYACCESSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sTUDYACCESSTableAdapter.Adapter);
                    }
                }
                if ((this._sYSTEMLOGTableAdapter != null)) {
                    revertConnections.Add(this._sYSTEMLOGTableAdapter, this._sYSTEMLOGTableAdapter.Connection);
                    this._sYSTEMLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._sYSTEMLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._sYSTEMLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sYSTEMLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sYSTEMLOGTableAdapter.Adapter);
                    }
                }
                if ((this._tRANSMITLOGTableAdapter != null)) {
                    revertConnections.Add(this._tRANSMITLOGTableAdapter, this._tRANSMITLOGTableAdapter.Connection);
                    this._tRANSMITLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(workConnection));
                    this._tRANSMITLOGTableAdapter.Transaction = ((global::FirebirdSql.Data.FirebirdClient.FbTransaction)(workTransaction));
                    if (this._tRANSMITLOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tRANSMITLOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tRANSMITLOGTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aPPOINTMENTLOGTableAdapter != null)) {
                    this._aPPOINTMENTLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._aPPOINTMENTLOGTableAdapter]));
                    this._aPPOINTMENTLOGTableAdapter.Transaction = null;
                }
                if ((this._aRCHIVELOGTableAdapter != null)) {
                    this._aRCHIVELOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._aRCHIVELOGTableAdapter]));
                    this._aRCHIVELOGTableAdapter.Transaction = null;
                }
                if ((this._aRCHIVESTUDYLOGTableAdapter != null)) {
                    this._aRCHIVESTUDYLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._aRCHIVESTUDYLOGTableAdapter]));
                    this._aRCHIVESTUDYLOGTableAdapter.Transaction = null;
                }
                if ((this._aUTOQUERYRETRIEVELOGTableAdapter != null)) {
                    this._aUTOQUERYRETRIEVELOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._aUTOQUERYRETRIEVELOGTableAdapter]));
                    this._aUTOQUERYRETRIEVELOGTableAdapter.Transaction = null;
                }
                if ((this._cOMMUNICATIONLOGTableAdapter != null)) {
                    this._cOMMUNICATIONLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._cOMMUNICATIONLOGTableAdapter]));
                    this._cOMMUNICATIONLOGTableAdapter.Transaction = null;
                }
                if ((this._cONFIGTableAdapter != null)) {
                    this._cONFIGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._cONFIGTableAdapter]));
                    this._cONFIGTableAdapter.Transaction = null;
                }
                if ((this._cONFIGDISPLAYTableAdapter != null)) {
                    this._cONFIGDISPLAYTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._cONFIGDISPLAYTableAdapter]));
                    this._cONFIGDISPLAYTableAdapter.Transaction = null;
                }
                if ((this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter != null)) {
                    this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter]));
                    this._hEALTHVAULTSUMMARYEXPORTLOGTableAdapter.Transaction = null;
                }
                if ((this._mDINTOUCHLOGTableAdapter != null)) {
                    this._mDINTOUCHLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._mDINTOUCHLOGTableAdapter]));
                    this._mDINTOUCHLOGTableAdapter.Transaction = null;
                }
                if ((this._mIRTH_HL7_LOGTableAdapter != null)) {
                    this._mIRTH_HL7_LOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._mIRTH_HL7_LOGTableAdapter]));
                    this._mIRTH_HL7_LOGTableAdapter.Transaction = null;
                }
                if ((this._mPPSTRANSMITLOGTableAdapter != null)) {
                    this._mPPSTRANSMITLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._mPPSTRANSMITLOGTableAdapter]));
                    this._mPPSTRANSMITLOGTableAdapter.Transaction = null;
                }
                if ((this._nETSUITEERRORLOGTableAdapter != null)) {
                    this._nETSUITEERRORLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._nETSUITEERRORLOGTableAdapter]));
                    this._nETSUITEERRORLOGTableAdapter.Transaction = null;
                }
                if ((this._nETSUITELOGTableAdapter != null)) {
                    this._nETSUITELOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._nETSUITELOGTableAdapter]));
                    this._nETSUITELOGTableAdapter.Transaction = null;
                }
                if ((this._pATIENTDIRECTLOGTableAdapter != null)) {
                    this._pATIENTDIRECTLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._pATIENTDIRECTLOGTableAdapter]));
                    this._pATIENTDIRECTLOGTableAdapter.Transaction = null;
                }
                if ((this._pATIENTMERGELOGTableAdapter != null)) {
                    this._pATIENTMERGELOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._pATIENTMERGELOGTableAdapter]));
                    this._pATIENTMERGELOGTableAdapter.Transaction = null;
                }
                if ((this._pRINTLOGTableAdapter != null)) {
                    this._pRINTLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._pRINTLOGTableAdapter]));
                    this._pRINTLOGTableAdapter.Transaction = null;
                }
                if ((this._pRRELEASETableAdapter != null)) {
                    this._pRRELEASETableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._pRRELEASETableAdapter]));
                    this._pRRELEASETableAdapter.Transaction = null;
                }
                if ((this._pRVERSIONTableAdapter != null)) {
                    this._pRVERSIONTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._pRVERSIONTableAdapter]));
                    this._pRVERSIONTableAdapter.Transaction = null;
                }
                if ((this._rECEIVESTUDYLOGTableAdapter != null)) {
                    this._rECEIVESTUDYLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._rECEIVESTUDYLOGTableAdapter]));
                    this._rECEIVESTUDYLOGTableAdapter.Transaction = null;
                }
                if ((this._rEFERRALINBOXLOGTableAdapter != null)) {
                    this._rEFERRALINBOXLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._rEFERRALINBOXLOGTableAdapter]));
                    this._rEFERRALINBOXLOGTableAdapter.Transaction = null;
                }
                if ((this._rEQUESTFAILLOGTableAdapter != null)) {
                    this._rEQUESTFAILLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._rEQUESTFAILLOGTableAdapter]));
                    this._rEQUESTFAILLOGTableAdapter.Transaction = null;
                }
                if ((this._rEQUESTLOGTableAdapter != null)) {
                    this._rEQUESTLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._rEQUESTLOGTableAdapter]));
                    this._rEQUESTLOGTableAdapter.Transaction = null;
                }
                if ((this._rETRIEVESTUDYLOGTableAdapter != null)) {
                    this._rETRIEVESTUDYLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._rETRIEVESTUDYLOGTableAdapter]));
                    this._rETRIEVESTUDYLOGTableAdapter.Transaction = null;
                }
                if ((this._rPTEXPORTLOGTableAdapter != null)) {
                    this._rPTEXPORTLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._rPTEXPORTLOGTableAdapter]));
                    this._rPTEXPORTLOGTableAdapter.Transaction = null;
                }
                if ((this._sTORAGECOMMITLOGTableAdapter != null)) {
                    this._sTORAGECOMMITLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._sTORAGECOMMITLOGTableAdapter]));
                    this._sTORAGECOMMITLOGTableAdapter.Transaction = null;
                }
                if ((this._sTUDYACCESSTableAdapter != null)) {
                    this._sTUDYACCESSTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._sTUDYACCESSTableAdapter]));
                    this._sTUDYACCESSTableAdapter.Transaction = null;
                }
                if ((this._sYSTEMLOGTableAdapter != null)) {
                    this._sYSTEMLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._sYSTEMLOGTableAdapter]));
                    this._sYSTEMLOGTableAdapter.Transaction = null;
                }
                if ((this._tRANSMITLOGTableAdapter != null)) {
                    this._tRANSMITLOGTableAdapter.Connection = ((global::FirebirdSql.Data.FirebirdClient.FbConnection)(revertConnections[this._tRANSMITLOGTableAdapter]));
                    this._tRANSMITLOGTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591